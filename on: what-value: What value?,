./bin/core/WEB-INF/butterfly.properties:# NOTE: properties passed to the JVM using '-Dkey=value' from the command line
./bin/core/IDEs/eclipse/RefineBrokerTests.launch:<booleanAttribute key="com.mountainminds.eclemma.core.INPLACE_INSTRUMENTATION" value="false"/>
./bin/core/IDEs/eclipse/RefineBrokerTests.launch:<listEntry value="/grefine-broker/module/MOD-INF/classes"/>
./bin/core/IDEs/eclipse/RefineBrokerTests.launch:<stringAttribute key="org.eclipse.jdt.launching.MAIN_TYPE" value="org.testng.remote.RemoteTestNG"/>
./bin/core/IDEs/eclipse/RefineBrokerTests.launch:<stringAttribute key="org.eclipse.jdt.launching.PROJECT_ATTR" value="grefine-broker"/>
./bin/core/IDEs/eclipse/RefineBrokerTests.launch:<mapEntry key="com.google.refine.broker.tests.RefineBrokerTests" value=""/>
./bin/core/IDEs/eclipse/RefineBrokerTests.launch:<listEntry value="com.google.refine.broker.tests.RefineBrokerTests"/>
./bin/core/IDEs/eclipse/RefineBrokerTests.launch:<stringAttribute key="org.testng.eclipse.COMPLIANCE_LEVEL" value="JDK"/>
./bin/core/IDEs/eclipse/RefineBrokerTests.launch:<stringAttribute key="org.testng.eclipse.LOG_LEVEL" value="2"/>
./bin/core/IDEs/eclipse/RefineBrokerTests.launch:<intAttribute key="org.testng.eclipse.TYPE" value="1"/>
./bin/scripts/sindice/sindice-dialog.js:					var option = $('<input />').attr('type','radio').attr('value',domain).attr('name','domain_radio').attr('checked',i==0);
./bin/scripts/test_karma/tests/ValidDefaultURI.test.js:  // it('is valid default value', function() {
./bin/scripts/test_karma/conf.js:    // possible values: 'dots', 'progress'
./bin/scripts/test_karma/conf.js:    // possible values: config.LOG_DISABLE || config.LOG_ERROR || config.LOG_WARN || config.LOG_INFO || config.LOG_DEBUG
./bin/scripts/menu-bar-extensions.js:        .attr("value", JSON.stringify(ui.browsingEngine.getJSON()))
./bin/scripts/menu-bar-extensions.js:        .attr("value", theProject.id)
./bin/scripts/menu-bar-extensions.js:        .attr("value", format)
./bin/scripts/suggestterm.suggest.js:	                         request: function(value, cursor) {
./bin/scripts/suggestterm.suggest.js:	                        	 var query = value;
./bin/scripts/suggestterm.suggest.js:                            	            data.prefix = value;  // keep track of prefix to match up response with input value
./bin/scripts/fairDatapointPost.js:        		       if (e.target.value == (element.uri.namespace + element.uri.localName)){
./bin/scripts/fairDatapointPost.js:      		      if (e.target.value == (element.uri.namespace + element.uri.localName)){
./bin/scripts/externals/jquery-1.11.1.js:		// Only deal with non-null/undefined values
./bin/scripts/externals/jquery-1.11.1.js:				// Don't bring in undefined values
./bin/scripts/externals/jquery-1.11.1.js:		var value,
./bin/scripts/externals/jquery-1.11.1.js:					value = callback.apply( obj[ i ], args );
./bin/scripts/externals/jquery-1.11.1.js:					if ( value === false ) {
./bin/scripts/externals/jquery-1.11.1.js:					value = callback.apply( obj[ i ], args );
./bin/scripts/externals/jquery-1.11.1.js:					if ( value === false ) {
./bin/scripts/externals/jquery-1.11.1.js:					value = callback.call( obj[ i ], i, obj[ i ] );
./bin/scripts/externals/jquery-1.11.1.js:					if ( value === false ) {
./bin/scripts/externals/jquery-1.11.1.js:					value = callback.call( obj[ i ], i, obj[ i ] );
./bin/scripts/externals/jquery-1.11.1.js:					if ( value === false ) {
./bin/scripts/externals/jquery-1.11.1.js:		var value,
./bin/scripts/externals/jquery-1.11.1.js:		// Go through the array, translating each of the items to their new values
./bin/scripts/externals/jquery-1.11.1.js:				value = callback( elems[ i ], i, arg );
./bin/scripts/externals/jquery-1.11.1.js:				if ( value != null ) {
./bin/scripts/externals/jquery-1.11.1.js:					ret.push( value );
./bin/scripts/externals/jquery-1.11.1.js:				value = callback( elems[ i ], i, arg );
./bin/scripts/externals/jquery-1.11.1.js:				if ( value != null ) {
./bin/scripts/externals/jquery-1.11.1.js:					ret.push( value );
./bin/scripts/externals/jquery-1.11.1.js:	// An unquoted value should be a CSS identifier http://www.w3.org/TR/css3-selectors/#attribute-selectors
./bin/scripts/externals/jquery-1.11.1.js:		// "Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]"
./bin/scripts/externals/jquery-1.11.1.js: * Create key-value caches of limited size
./bin/scripts/externals/jquery-1.11.1.js:	function cache( key, value ) {
./bin/scripts/externals/jquery-1.11.1.js:		return (cache[ key + " " ] = value);
./bin/scripts/externals/jquery-1.11.1.js: * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
./bin/scripts/externals/jquery-1.11.1.js:				return node && node.value === attrId;
./bin/scripts/externals/jquery-1.11.1.js:			// Boolean attributes and "value" are not treated correctly
./bin/scripts/externals/jquery-1.11.1.js:				rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
./bin/scripts/externals/jquery-1.11.1.js:				val.value :
./bin/scripts/externals/jquery-1.11.1.js: * Utility function for retrieving the text value of an array of DOM nodes
./bin/scripts/externals/jquery-1.11.1.js:			// Move the given value to match[3] whether quoted or unquoted
./bin/scripts/externals/jquery-1.11.1.js:		// is based solely on the element's language value
./bin/scripts/externals/jquery-1.11.1.js:		// The matching of C against the element's language value is performed case-insensitively.
./bin/scripts/externals/jquery-1.11.1.js:			// lang value must be a valid identifier
./bin/scripts/externals/jquery-1.11.1.js:				// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
./bin/scripts/externals/jquery-1.11.1.js:				value: matched,
./bin/scripts/externals/jquery-1.11.1.js:					value: matched,
./bin/scripts/externals/jquery-1.11.1.js:		selector += tokens[i].value;
./bin/scripts/externals/jquery-1.11.1.js:						tokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === " " ? "*" : "" })
./bin/scripts/externals/jquery-1.11.1.js:					// Discard index placeholder values to get only actual matches
./bin/scripts/externals/jquery-1.11.1.js:			selector = selector.slice( tokens.shift().value.length );
./bin/scripts/externals/jquery-1.11.1.js:// Use defaultValue in place of getAttribute("value")
./bin/scripts/externals/jquery-1.11.1.js:	div.firstChild.setAttribute( "value", "" );
./bin/scripts/externals/jquery-1.11.1.js:	return div.firstChild.getAttribute( "value" ) === "";
./bin/scripts/externals/jquery-1.11.1.js:	addHandle( "value", function( elem, name, isXML ) {
./bin/scripts/externals/jquery-1.11.1.js:					val.value :
./bin/scripts/externals/jquery-1.11.1.js: *	memory:			will keep track of previous values and will call any callback added
./bin/scripts/externals/jquery-1.11.1.js: *					values (like a Deferred)
./bin/scripts/externals/jquery-1.11.1.js:		// Last fire value (for non-forgettable lists)
./bin/scripts/externals/jquery-1.11.1.js:			// Update function for both resolve and progress values
./bin/scripts/externals/jquery-1.11.1.js:			updateFunc = function( i, contexts, values ) {
./bin/scripts/externals/jquery-1.11.1.js:				return function( value ) {
./bin/scripts/externals/jquery-1.11.1.js:					values[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;
./bin/scripts/externals/jquery-1.11.1.js:					if ( values === progressValues ) {
./bin/scripts/externals/jquery-1.11.1.js:						deferred.notifyWith( contexts, values );
./bin/scripts/externals/jquery-1.11.1.js:						deferred.resolveWith( contexts, values );
./bin/scripts/externals/jquery-1.11.1.js:	// An object can be passed to jQuery.data instead of a key/value pair; this gets
./bin/scripts/externals/jquery-1.11.1.js:	data: function( key, value ) {
./bin/scripts/externals/jquery-1.11.1.js:		// Gets all values
./bin/scripts/externals/jquery-1.11.1.js:		// Sets multiple values
./bin/scripts/externals/jquery-1.11.1.js:			// Sets one value
./bin/scripts/externals/jquery-1.11.1.js:				jQuery.data( this, key, value );
./bin/scripts/externals/jquery-1.11.1.js:			// Gets one value
./bin/scripts/externals/jquery-1.11.1.js:// Multifunctional method to get and set values of a collection
./bin/scripts/externals/jquery-1.11.1.js:// The value/s can optionally be executed if it's a function
./bin/scripts/externals/jquery-1.11.1.js:var access = jQuery.access = function( elems, fn, key, value, chainable, emptyGet, raw ) {
./bin/scripts/externals/jquery-1.11.1.js:	// Sets many values
./bin/scripts/externals/jquery-1.11.1.js:	// Sets one value
./bin/scripts/externals/jquery-1.11.1.js:	} else if ( value !== undefined ) {
./bin/scripts/externals/jquery-1.11.1.js:		if ( !jQuery.isFunction( value ) ) {
./bin/scripts/externals/jquery-1.11.1.js:				fn.call( elems, value );
./bin/scripts/externals/jquery-1.11.1.js:			// ...except when executing function values
./bin/scripts/externals/jquery-1.11.1.js:				fn = function( elem, key, value ) {
./bin/scripts/externals/jquery-1.11.1.js:					return bulk.call( jQuery( elem ), value );
./bin/scripts/externals/jquery-1.11.1.js:				fn( elems[i], key, raw ? value : value.call( elems[i], i, fn( elems[i], key ) ) );
./bin/scripts/externals/jquery-1.11.1.js:	// value of true after appended to the DOM (IE6/7)
./bin/scripts/externals/jquery-1.11.1.js:		// by a handler lower down the tree; reflect the correct value.
./bin/scripts/externals/jquery-1.11.1.js:		// a checked appearance if the defaultChecked value isn't also set
./bin/scripts/externals/jquery-1.11.1.js:		// IE6-7 get confused and end up setting the value of a cloned
./bin/scripts/externals/jquery-1.11.1.js:		if ( dest.value !== src.value ) {
./bin/scripts/externals/jquery-1.11.1.js:			dest.value = src.value;
./bin/scripts/externals/jquery-1.11.1.js:	// IE6-8 fails to set the defaultValue to the correct value when
./bin/scripts/externals/jquery-1.11.1.js:	text: function( value ) {
./bin/scripts/externals/jquery-1.11.1.js:		return access( this, function( value ) {
./bin/scripts/externals/jquery-1.11.1.js:			return value === undefined ?
./bin/scripts/externals/jquery-1.11.1.js:				this.empty().append( ( this[0] && this[0].ownerDocument || document ).createTextNode( value ) );
./bin/scripts/externals/jquery-1.11.1.js:		}, null, value, arguments.length );
./bin/scripts/externals/jquery-1.11.1.js:		return access( this, function( value ) {
./bin/scripts/externals/jquery-1.11.1.js:			if ( value === undefined ) {
./bin/scripts/externals/jquery-1.11.1.js:				( support.leadingWhitespace || !rleadingWhitespace.test( value ) ) &&
./bin/scripts/externals/jquery-1.11.1.js:				!wrapMap[ (rtagName.exec( value ) || [ "", "" ])[ 1 ].toLowerCase() ] ) {
./bin/scripts/externals/jquery-1.11.1.js:							elem.innerHTML = value;
./bin/scripts/externals/jquery-1.11.1.js:				this.empty().append( value );
./bin/scripts/externals/jquery-1.11.1.js:		}, null, value, arguments.length );
./bin/scripts/externals/jquery-1.11.1.js:			value = args[0],
./bin/scripts/externals/jquery-1.11.1.js:			isFunction = jQuery.isFunction( value );
./bin/scripts/externals/jquery-1.11.1.js:				( l > 1 && typeof value === "string" &&
./bin/scripts/externals/jquery-1.11.1.js:					!support.checkClone && rchecked.test( value ) ) ) {
./bin/scripts/externals/jquery-1.11.1.js: * Try to determine the default display value of an element
./bin/scripts/externals/jquery-1.11.1.js:			// Chrome < 17 and Safari 5.0 uses "computed value" instead of "used value" for margin-right
./bin/scripts/externals/jquery-1.11.1.js:			// Safari 5.1.7 (at least) returns percentage for a larger set of values, but width seems to be reliably pixels
./bin/scripts/externals/jquery-1.11.1.js:			// this is against the CSSOM draft spec: http://dev.w3.org/csswg/cssom/#resolved-values
./bin/scripts/externals/jquery-1.11.1.js:				// Remember the original values
./bin/scripts/externals/jquery-1.11.1.js:				// Put in the new values to get a computed value out
./bin/scripts/externals/jquery-1.11.1.js:				// Revert the changed values
./bin/scripts/externals/jquery-1.11.1.js:		// IE returns zIndex value as an integer.
./bin/scripts/externals/jquery-1.11.1.js:			// Remember the original values
./bin/scripts/externals/jquery-1.11.1.js:			// Put in the new values to get a computed value out
./bin/scripts/externals/jquery-1.11.1.js:			// Revert the changed values
./bin/scripts/externals/jquery-1.11.1.js:		// IE returns zIndex value as an integer.
./bin/scripts/externals/jquery-1.11.1.js:		// Assume reasonable values in the absence of getComputedStyle
./bin/scripts/externals/jquery-1.11.1.js:			// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right
./bin/scripts/externals/jquery-1.11.1.js:	// Remember the old values, and insert the new ones
./bin/scripts/externals/jquery-1.11.1.js:	// Revert the old values
./bin/scripts/externals/jquery-1.11.1.js:	// see here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
./bin/scripts/externals/jquery-1.11.1.js:		values = [],
./bin/scripts/externals/jquery-1.11.1.js:		values[ index ] = jQuery._data( elem, "olddisplay" );
./bin/scripts/externals/jquery-1.11.1.js:			if ( !values[ index ] && display === "none" ) {
./bin/scripts/externals/jquery-1.11.1.js:				values[ index ] = jQuery._data( elem, "olddisplay", defaultDisplay(elem.nodeName) );
./bin/scripts/externals/jquery-1.11.1.js:			elem.style.display = show ? values[ index ] || "" : "none";
./bin/scripts/externals/jquery-1.11.1.js:function setPositiveNumber( elem, value, subtract ) {
./bin/scripts/externals/jquery-1.11.1.js:	var matches = rnumsplit.exec( value );
./bin/scripts/externals/jquery-1.11.1.js:		value;
./bin/scripts/externals/jquery-1.11.1.js:	// Start with offset property, which is equivalent to the border-box value
./bin/scripts/externals/jquery-1.11.1.js:	var valueIsBorderBox = true,
./bin/scripts/externals/jquery-1.11.1.js:		// we need the check for style in case a browser which returns unreliable values
./bin/scripts/externals/jquery-1.11.1.js:		valueIsBorderBox = isBorderBox && ( support.boxSizingReliable() || val === elem.style[ name ] );
./bin/scripts/externals/jquery-1.11.1.js:			valueIsBorderBox,
./bin/scripts/externals/jquery-1.11.1.js:	// setting or getting the value
./bin/scripts/externals/jquery-1.11.1.js:	style: function( elem, name, value, extra ) {
./bin/scripts/externals/jquery-1.11.1.js:		// Check if we're setting a value
./bin/scripts/externals/jquery-1.11.1.js:		if ( value !== undefined ) {
./bin/scripts/externals/jquery-1.11.1.js:			type = typeof value;
./bin/scripts/externals/jquery-1.11.1.js:			if ( type === "string" && (ret = rrelNum.exec( value )) ) {
./bin/scripts/externals/jquery-1.11.1.js:				value = ( ret[1] + 1 ) * ret[2] + parseFloat( jQuery.css( elem, name ) );
./bin/scripts/externals/jquery-1.11.1.js:			// Make sure that null and NaN values aren't set. See: #7116
./bin/scripts/externals/jquery-1.11.1.js:			if ( value == null || value !== value ) {
./bin/scripts/externals/jquery-1.11.1.js:				value += "px";
./bin/scripts/externals/jquery-1.11.1.js:			if ( !support.clearCloneStyle && value === "" && name.indexOf("background") === 0 ) {
./bin/scripts/externals/jquery-1.11.1.js:			// If a hook was provided, use that value, otherwise just set the specified value
./bin/scripts/externals/jquery-1.11.1.js:			if ( !hooks || !("set" in hooks) || (value = hooks.set( elem, value, extra )) !== undefined ) {
./bin/scripts/externals/jquery-1.11.1.js:				// Swallow errors from 'invalid' CSS values (#5509)
./bin/scripts/externals/jquery-1.11.1.js:					style[ name ] = value;
./bin/scripts/externals/jquery-1.11.1.js:			// If a hook was provided get the non-computed value from there
./bin/scripts/externals/jquery-1.11.1.js:			// Otherwise just get the value from the style object
./bin/scripts/externals/jquery-1.11.1.js:		// If a hook was provided get the computed value from there
./bin/scripts/externals/jquery-1.11.1.js:		// Otherwise, if a way to get the computed value exists, use that
./bin/scripts/externals/jquery-1.11.1.js:		//convert "normal" to computed value
./bin/scripts/externals/jquery-1.11.1.js:		set: function( elem, value, extra ) {
./bin/scripts/externals/jquery-1.11.1.js:			return setPositiveNumber( elem, value, extra ?
./bin/scripts/externals/jquery-1.11.1.js:		set: function( elem, value ) {
./bin/scripts/externals/jquery-1.11.1.js:				opacity = jQuery.isNumeric( value ) ? "alpha(opacity=" + value * 100 + ")" : "",
./bin/scripts/externals/jquery-1.11.1.js:			// if value === "", then remove inline opacity #12685
./bin/scripts/externals/jquery-1.11.1.js:			if ( ( value >= 1 || value === "" ) &&
./bin/scripts/externals/jquery-1.11.1.js:				if ( value === "" || currentStyle && !currentStyle.filter ) {
./bin/scripts/externals/jquery-1.11.1.js:			// otherwise, set new filter values
./bin/scripts/externals/jquery-1.11.1.js:			// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right
./bin/scripts/externals/jquery-1.11.1.js:		expand: function( value ) {
./bin/scripts/externals/jquery-1.11.1.js:				parts = typeof value === "string" ? value.split(" ") : [ value ];
./bin/scripts/externals/jquery-1.11.1.js:	css: function( name, value ) {
./bin/scripts/externals/jquery-1.11.1.js:		return access( this, function( elem, name, value ) {
./bin/scripts/externals/jquery-1.11.1.js:			return value !== undefined ?
./bin/scripts/externals/jquery-1.11.1.js:				jQuery.style( elem, name, value ) :
./bin/scripts/externals/jquery-1.11.1.js:		}, name, value, arguments.length > 1 );
./bin/scripts/externals/jquery-1.11.1.js:			// so, simple values such as "10px" are parsed to Float.
./bin/scripts/externals/jquery-1.11.1.js:			// complex values such as "rotate(1rad)" are returned as is.
./bin/scripts/externals/jquery-1.11.1.js:		"*": [ function( prop, value ) {
./bin/scripts/externals/jquery-1.11.1.js:			var tween = this.createTween( prop, value ),
./bin/scripts/externals/jquery-1.11.1.js:				parts = rfxnum.exec( value ),
./bin/scripts/externals/jquery-1.11.1.js:				// Starting value computation is required for potential unit mismatches
./bin/scripts/externals/jquery-1.11.1.js:	// if we include width, step value is 1 to do all cssExpand values,
./bin/scripts/externals/jquery-1.11.1.js:	// if we don't include width, step value is 2 to skip over Left and Right
./bin/scripts/externals/jquery-1.11.1.js:function createTween( value, prop, animation ) {
./bin/scripts/externals/jquery-1.11.1.js:		if ( (tween = collection[ index ].call( animation, prop, value )) ) {
./bin/scripts/externals/jquery-1.11.1.js:	var prop, value, toggle, tween, hooks, oldfire, display, checkDisplay,
./bin/scripts/externals/jquery-1.11.1.js:		// overflowY are set to the same value
./bin/scripts/externals/jquery-1.11.1.js:		value = props[ prop ];
./bin/scripts/externals/jquery-1.11.1.js:		if ( rfxtypes.exec( value ) ) {
./bin/scripts/externals/jquery-1.11.1.js:			toggle = toggle || value === "toggle";
./bin/scripts/externals/jquery-1.11.1.js:			if ( value === ( hidden ? "hide" : "show" ) ) {
./bin/scripts/externals/jquery-1.11.1.js:				if ( value === "show" && dataShow && dataShow[ prop ] !== undefined ) {
./bin/scripts/externals/jquery-1.11.1.js:		// Any non-fx value stops us from restoring the original display value
./bin/scripts/externals/jquery-1.11.1.js:	// If this is a noop like .hide().hide(), restore an overwritten display value
./bin/scripts/externals/jquery-1.11.1.js:	var index, name, easing, value, hooks;
./bin/scripts/externals/jquery-1.11.1.js:		value = props[ index ];
./bin/scripts/externals/jquery-1.11.1.js:		if ( jQuery.isArray( value ) ) {
./bin/scripts/externals/jquery-1.11.1.js:			easing = value[ 1 ];
./bin/scripts/externals/jquery-1.11.1.js:			value = props[ index ] = value[ 0 ];
./bin/scripts/externals/jquery-1.11.1.js:			props[ name ] = value;
./bin/scripts/externals/jquery-1.11.1.js:			value = hooks.expand( value );
./bin/scripts/externals/jquery-1.11.1.js:			for ( index in value ) {
./bin/scripts/externals/jquery-1.11.1.js:					props[ index ] = value[ index ];
./bin/scripts/externals/jquery-1.11.1.js:			// animate to the value specified
./bin/scripts/externals/jquery-1.11.1.js:	// Check the default checkbox/radio value ("" on WebKit; "on" elsewhere)
./bin/scripts/externals/jquery-1.11.1.js:	support.checkOn = !!input.value;
./bin/scripts/externals/jquery-1.11.1.js:	// Check if we can trust getAttribute("value")
./bin/scripts/externals/jquery-1.11.1.js:	input.setAttribute( "value", "" );
./bin/scripts/externals/jquery-1.11.1.js:	support.input = input.getAttribute( "value" ) === "";
./bin/scripts/externals/jquery-1.11.1.js:	// Check if an input maintains its value after becoming a radio
./bin/scripts/externals/jquery-1.11.1.js:	input.value = "t";
./bin/scripts/externals/jquery-1.11.1.js:	support.radioValue = input.value === "t";
./bin/scripts/externals/jquery-1.11.1.js:	val: function( value ) {
./bin/scripts/externals/jquery-1.11.1.js:				if ( hooks && "get" in hooks && (ret = hooks.get( elem, "value" )) !== undefined ) {
./bin/scripts/externals/jquery-1.11.1.js:				ret = elem.value;
./bin/scripts/externals/jquery-1.11.1.js:					// handle cases where value is null/undef or number
./bin/scripts/externals/jquery-1.11.1.js:		isFunction = jQuery.isFunction( value );
./bin/scripts/externals/jquery-1.11.1.js:				val = value.call( this, i, jQuery( this ).val() );
./bin/scripts/externals/jquery-1.11.1.js:				val = value;
./bin/scripts/externals/jquery-1.11.1.js:				val = jQuery.map( val, function( value ) {
./bin/scripts/externals/jquery-1.11.1.js:					return value == null ? "" : value + "";
./bin/scripts/externals/jquery-1.11.1.js:			if ( !hooks || !("set" in hooks) || hooks.set( this, val, "value" ) === undefined ) {
./bin/scripts/externals/jquery-1.11.1.js:				this.value = val;
./bin/scripts/externals/jquery-1.11.1.js:				var val = jQuery.find.attr( elem, "value" );
./bin/scripts/externals/jquery-1.11.1.js:				var value, option,
./bin/scripts/externals/jquery-1.11.1.js:					values = one ? null : [],
./bin/scripts/externals/jquery-1.11.1.js:						// Get the specific value for the option
./bin/scripts/externals/jquery-1.11.1.js:						value = jQuery( option ).val();
./bin/scripts/externals/jquery-1.11.1.js:							return value;
./bin/scripts/externals/jquery-1.11.1.js:						values.push( value );
./bin/scripts/externals/jquery-1.11.1.js:				return values;
./bin/scripts/externals/jquery-1.11.1.js:			set: function( elem, value ) {
./bin/scripts/externals/jquery-1.11.1.js:					values = jQuery.makeArray( value ),
./bin/scripts/externals/jquery-1.11.1.js:					if ( jQuery.inArray( jQuery.valHooks.option.get( option ), values ) >= 0 ) {
./bin/scripts/externals/jquery-1.11.1.js:				// Force browsers to behave consistently when non-matching value is set
./bin/scripts/externals/jquery-1.11.1.js:		set: function( elem, value ) {
./bin/scripts/externals/jquery-1.11.1.js:			if ( jQuery.isArray( value ) ) {
./bin/scripts/externals/jquery-1.11.1.js:				return ( elem.checked = jQuery.inArray( jQuery(elem).val(), value ) >= 0 );
./bin/scripts/externals/jquery-1.11.1.js:			// "" is returned instead of "on" if a value isn't specified
./bin/scripts/externals/jquery-1.11.1.js:			return elem.getAttribute("value") === null ? "on" : elem.value;
./bin/scripts/externals/jquery-1.11.1.js:	attr: function( name, value ) {
./bin/scripts/externals/jquery-1.11.1.js:		return access( this, jQuery.attr, name, value, arguments.length > 1 );
./bin/scripts/externals/jquery-1.11.1.js:	attr: function( elem, name, value ) {
./bin/scripts/externals/jquery-1.11.1.js:			return jQuery.prop( elem, name, value );
./bin/scripts/externals/jquery-1.11.1.js:		if ( value !== undefined ) {
./bin/scripts/externals/jquery-1.11.1.js:			if ( value === null ) {
./bin/scripts/externals/jquery-1.11.1.js:			} else if ( hooks && "set" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ) {
./bin/scripts/externals/jquery-1.11.1.js:				elem.setAttribute( name, value + "" );
./bin/scripts/externals/jquery-1.11.1.js:				return value;
./bin/scripts/externals/jquery-1.11.1.js:	removeAttr: function( elem, value ) {
./bin/scripts/externals/jquery-1.11.1.js:			attrNames = value && value.match( rnotwhite );
./bin/scripts/externals/jquery-1.11.1.js:			set: function( elem, value ) {
./bin/scripts/externals/jquery-1.11.1.js:				if ( !support.radioValue && value === "radio" && jQuery.nodeName(elem, "input") ) {
./bin/scripts/externals/jquery-1.11.1.js:					// Setting the type on a radio button after the value resets the value in IE6-9
./bin/scripts/externals/jquery-1.11.1.js:					// Reset value to default in case type is set after value during creation
./bin/scripts/externals/jquery-1.11.1.js:					var val = elem.value;
./bin/scripts/externals/jquery-1.11.1.js:					elem.setAttribute( "type", value );
./bin/scripts/externals/jquery-1.11.1.js:						elem.value = val;
./bin/scripts/externals/jquery-1.11.1.js:					return value;
./bin/scripts/externals/jquery-1.11.1.js:	set: function( elem, value, name ) {
./bin/scripts/externals/jquery-1.11.1.js:		if ( value === false ) {
./bin/scripts/externals/jquery-1.11.1.js:	jQuery.attrHooks.value = {
./bin/scripts/externals/jquery-1.11.1.js:		set: function( elem, value, name ) {
./bin/scripts/externals/jquery-1.11.1.js:				elem.defaultValue = value;
./bin/scripts/externals/jquery-1.11.1.js:				return nodeHook && nodeHook.set( elem, value, name );
./bin/scripts/externals/jquery-1.11.1.js:		set: function( elem, value, name ) {
./bin/scripts/externals/jquery-1.11.1.js:			ret.value = value += "";
./bin/scripts/externals/jquery-1.11.1.js:			if ( name === "value" || value === elem.getAttribute( name ) ) {
./bin/scripts/externals/jquery-1.11.1.js:				return value;
./bin/scripts/externals/jquery-1.11.1.js:	// Some attributes are constructed with empty-string values when not defined
./bin/scripts/externals/jquery-1.11.1.js:				return (ret = elem.getAttributeNode( name )) && ret.value !== "" ?
./bin/scripts/externals/jquery-1.11.1.js:					ret.value :
./bin/scripts/externals/jquery-1.11.1.js:	// Fixing value retrieval on a button requires this module
./bin/scripts/externals/jquery-1.11.1.js:				return ret.value;
./bin/scripts/externals/jquery-1.11.1.js:	// Setting to empty string throws an error as an invalid value
./bin/scripts/externals/jquery-1.11.1.js:		set: function( elem, value, name ) {
./bin/scripts/externals/jquery-1.11.1.js:			nodeHook.set( elem, value === "" ? false : value, name );
./bin/scripts/externals/jquery-1.11.1.js:			set: function( elem, value ) {
./bin/scripts/externals/jquery-1.11.1.js:				if ( value === "" ) {
./bin/scripts/externals/jquery-1.11.1.js:					return value;
./bin/scripts/externals/jquery-1.11.1.js:		set: function( elem, value ) {
./bin/scripts/externals/jquery-1.11.1.js:			return ( elem.style.cssText = value + "" );
./bin/scripts/externals/jquery-1.11.1.js:	prop: function( name, value ) {
./bin/scripts/externals/jquery-1.11.1.js:		return access( this, jQuery.prop, name, value, arguments.length > 1 );
./bin/scripts/externals/jquery-1.11.1.js:	prop: function( elem, name, value ) {
./bin/scripts/externals/jquery-1.11.1.js:		if ( value !== undefined ) {
./bin/scripts/externals/jquery-1.11.1.js:			return hooks && "set" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ?
./bin/scripts/externals/jquery-1.11.1.js:				( elem[ name ] = value );
./bin/scripts/externals/jquery-1.11.1.js:				// elem.tabIndex doesn't always return the correct value when it hasn't been explicitly set
./bin/scripts/externals/jquery-1.11.1.js:	addClass: function( value ) {
./bin/scripts/externals/jquery-1.11.1.js:			proceed = typeof value === "string" && value;
./bin/scripts/externals/jquery-1.11.1.js:		if ( jQuery.isFunction( value ) ) {
./bin/scripts/externals/jquery-1.11.1.js:				jQuery( this ).addClass( value.call( this, j, this.className ) );
./bin/scripts/externals/jquery-1.11.1.js:			classes = ( value || "" ).match( rnotwhite ) || [];
./bin/scripts/externals/jquery-1.11.1.js:	removeClass: function( value ) {
./bin/scripts/externals/jquery-1.11.1.js:			proceed = arguments.length === 0 || typeof value === "string" && value;
./bin/scripts/externals/jquery-1.11.1.js:		if ( jQuery.isFunction( value ) ) {
./bin/scripts/externals/jquery-1.11.1.js:				jQuery( this ).removeClass( value.call( this, j, this.className ) );
./bin/scripts/externals/jquery-1.11.1.js:			classes = ( value || "" ).match( rnotwhite ) || [];
./bin/scripts/externals/jquery-1.11.1.js:					finalValue = value ? jQuery.trim( cur ) : "";
./bin/scripts/externals/jquery-1.11.1.js:	toggleClass: function( value, stateVal ) {
./bin/scripts/externals/jquery-1.11.1.js:		var type = typeof value;
./bin/scripts/externals/jquery-1.11.1.js:			return stateVal ? this.addClass( value ) : this.removeClass( value );
./bin/scripts/externals/jquery-1.11.1.js:		if ( jQuery.isFunction( value ) ) {
./bin/scripts/externals/jquery-1.11.1.js:				jQuery( this ).toggleClass( value.call(this, i, this.className, stateVal), stateVal );
./bin/scripts/externals/jquery-1.11.1.js:					classNames = value.match( rnotwhite ) || [];
./bin/scripts/externals/jquery-1.11.1.js:				this.className = this.className || value === false ? "" : jQuery._data( this, "__className__" ) || "";
./bin/scripts/externals/jquery-1.11.1.js:				setRequestHeader: function( name, value ) {
./bin/scripts/externals/jquery-1.11.1.js:						requestHeaders[ name ] = value;
./bin/scripts/externals/jquery-1.11.1.js:					// If there is already a '_' parameter, set its value
./bin/scripts/externals/jquery-1.11.1.js:// key/values into a query string
./bin/scripts/externals/jquery-1.11.1.js:		add = function( key, value ) {
./bin/scripts/externals/jquery-1.11.1.js:			// If value is a function, invoke it and return its value
./bin/scripts/externals/jquery-1.11.1.js:			value = jQuery.isFunction( value ) ? value() : ( value == null ? "" : value );
./bin/scripts/externals/jquery-1.11.1.js:			s[ s.length ] = encodeURIComponent( key ) + "=" + encodeURIComponent( value );
./bin/scripts/externals/jquery-1.11.1.js:			add( this.name, this.value );
./bin/scripts/externals/jquery-1.11.1.js:						return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
./bin/scripts/externals/jquery-1.11.1.js:					{ name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
./bin/scripts/externals/jquery-1.11.1.js:						// request header to a null-value.
./bin/scripts/externals/jquery-1.11.1.js:						// To keep consistent with other XHR implementations, cast the value
./bin/scripts/externals/jquery-1.11.1.js:		// Get callback name, remembering preexisting value associated with it
./bin/scripts/externals/jquery-1.11.1.js:			// Restore preexisting value
./bin/scripts/externals/jquery-1.11.1.js:		jQuery.fn[ funcName ] = function( margin, value ) {
./bin/scripts/externals/jquery-1.11.1.js:				extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );
./bin/scripts/externals/jquery-1.11.1.js:			return access( this, function( elem, type, value ) {
./bin/scripts/externals/jquery-1.11.1.js:				return value === undefined ?
./bin/scripts/externals/jquery-1.11.1.js:					jQuery.style( elem, type, value, extra );
./bin/scripts/externals/angular.min.js:if(C(g)||D(g))for(var h=Object.keys(g),k=0,l=h.length;k<l;k++){var m=h[k],n=g[m];d&&C(n)?ga(n)?a[m]=new Date(n.valueOf()):Xa(n)?a[m]=new RegExp(n):n.nodeName?a[m]=n.cloneNode(!0):Ub(n)?a[m]=n.clone():(C(a[m])||(a[m]=H(n)?[]:{}),Tb(a[m],[n],!0)):a[m]=n}}c?a.$$hashKey=c:delete a.$$hashKey;return a}function S(a){return Tb(a,va.call(arguments,1),!1)}function oe(a){return Tb(a,va.call(arguments,1),!0)}function Z(a){return parseInt(a,10)}function Vb(a,b){return S(Object.create(a),b)}function z(){}function Ya(a){return a}
./bin/scripts/externals/angular.min.js:return b}return a.slice(0);case "[object Boolean]":case "[object Number]":case "[object String]":case "[object Date]":return new a.constructor(a.valueOf());case "[object RegExp]":return b=new RegExp(a.source,a.toString().match(/[^/]*$/)[0]),b.lastIndex=a.lastIndex,b;case "[object Blob]":return new a.constructor([a],{type:a.type})}if(D(a.cloneNode))return a.cloneNode(!0)}var g=[],h=[];d=Sb(d)?d:NaN;if(b){if(pe(b)||"[object ArrayBuffer]"===ma.call(b))throw Fa("cpta");if(a===b)throw Fa("cpi");H(b)?b.length=
./bin/scripts/externals/angular.min.js:function Sc(a,b,d){C(d)||(d={});d=S({strictDi:!1},d);var c=function(){a=B(a);if(a.injector()){var c=a[0]===x.document?"document":xa(a);throw Fa("btstrpd",c.replace(/</,"&lt;").replace(/>/,"&gt;"));}b=b||[];b.unshift(["$provide",function(b){b.value("$rootElement",a)}]);d.debugInfoEnabled&&b.push(["$compileProvider",function(a){a.debugInfoEnabled(!0)}]);b.unshift("ng");c=eb(b,d.strictDi);c.invoke(["$rootScope","$rootElement","$compile","$injector",function(a,b,c,d){a.$apply(function(){b.data("$injector",
./bin/scripts/externals/angular.min.js:g&&a.hasOwnProperty(f)&&(a[f]=null);return b(a,f,function(){function a(b,c,d,f){f||(f=e);return function(){f[d||"push"]([b,c,arguments]);return v}}function b(a,c,d){d||(d=e);return function(b,e){e&&D(e)&&(e.$$moduleName=f);d.push([a,c,arguments]);return v}}if(!g)throw d("nomod",f);var e=[],p=[],r=[],J=a("$injector","invoke","push",p),v={_invokeQueue:e,_configBlocks:p,_runBlocks:r,info:function(a){if(u(a)){if(!C(a))throw c("aobj","value");k=a;return this}return k},requires:g,name:f,provider:b("$provide",
./bin/scripts/externals/angular.min.js:"provider"),factory:b("$provide","factory"),service:b("$provide","service"),value:a("$provide","value"),constant:a("$provide","constant","unshift"),decorator:b("$provide","decorator",p),animation:b("$animateProvider","register"),filter:b("$filterProvider","register"),controller:b("$controllerProvider","register"),directive:b("$compileProvider","directive"),component:b("$compileProvider","component"),config:J,run:function(a){r.push(a);return this}};h&&J(h);return v})}})}function pa(a,b){if(H(a)){b=
./bin/scripts/externals/angular.min.js:b){a.attr&&(a=a[0]);return Cb(a,b)},removeClass:function(a,b){a.attr&&(a=a[0]);return Bb(a,b)}})}}function Pa(a,b){var d=a&&a.$$hashKey;if(d)return"function"===typeof d&&(d=a.$$hashKey()),d;d=typeof a;return d="function"===d||"object"===d&&null!==a?a.$$hashKey=d+":"+(b||ne)():d+":"+a}function kd(){this._keys=[];this._values=[];this._lastKey=NaN;this._lastIndex=-1}function ld(a){a=Function.prototype.toString.call(a).replace(kg,"");return a.match(lg)||a.match(mg)}function ng(a){return(a=ld(a))?"function("+
./bin/scripts/externals/angular.min.js:b){return f(a,["$injector",function(a){return a.instantiate(b)}])}),value:d(function(a,b){return f(a,la(b),!1)}),constant:d(function(a,b){Ka(a,"constant");n[a]=b;r[a]=b}),decorator:function(a,b){var c=p.get(a+"Provider"),d=c.$get;c.$get=function(){var a=v.invoke(d,c);return v.invoke(b,null,{$delegate:a})}}}},p=n.$injector=h(n,function(a,b){ea.isString(b)&&l.push(b);throw ya("unpr",l.join(" <- "));}),r={},J=h(r,function(a,b){var c=p.get(a+"Provider",b);return v.invoke(c.$get,c,void 0,a)}),v=J;n.$injectorProvider=
./bin/scripts/externals/angular.min.js:b,c,e,n,E,G,y,O,X){function P(){try{if(!--ya)throw ia=void 0,fa("infchng",J);G.$apply(function(){for(var a=[],b=0,c=ia.length;b<c;++b)try{ia[b]()}catch(d){a.push(d)}ia=void 0;if(a.length)throw a;})}finally{ya++}}function s(a,b){if(b){var c=Object.keys(b),d,e,f;d=0;for(e=c.length;d<e;d++)f=c[d],this[f]=b[f]}else this.$attr={};this.$$element=a}function R(a,b,c){ta.innerHTML="<span "+b+">";b=ta.firstChild.attributes;var d=b[0];b.removeNamedItem(d.name);d.value=c;a.attributes.setNamedItem(d)}function La(a,
./bin/scripts/externals/angular.min.js:Ba(g),"E",d,e);for(var k,l,m,n,p=a.attributes,K=0,r=p&&p.length;K<r;K++){var G=!1,E=!1;k=p[K];l=k.name;m=k.value;k=Ba(l);(n=Ja.test(k))&&(l=l.replace(md,"").substr(8).replace(/_(.)/g,function(a,b){return b.toUpperCase()}));(k=k.match(Ka))&&Z(k[1])&&(G=l,E=l.substr(0,l.length-5)+"end",l=l.substr(0,l.length-6));k=Ba(l.toLowerCase());f[k]=l;if(n||!c.hasOwnProperty(k))c[k]=m,id(a,k)&&(c[k]=!0);pa(a,b,m,k,n);Y(b,k,"A",d,e,G,E)}"input"===g&&"hidden"===a.getAttribute("type")&&a.setAttribute("autocomplete",
./bin/scripts/externals/angular.min.js:function e(a,b){var c,d={};q(a,function(a,e){D(a)?(c=a(b),null!=c&&(d[e]=c)):d[e]=a});return d}function f(a){var b=S({},a);b.data=xd(a.data,a.headers,a.status,g.transformResponse);a=a.status;return 200<=a&&300>a?b:k.reject(b)}if(!C(b))throw L("$http")("badreq",b);if(!F(m.valueOf(b.url)))throw L("$http")("badreq",b.url);var g=S({method:"get",transformRequest:a.transformRequest,transformResponse:a.transformResponse,paramSerializer:a.paramSerializer,jsonpCallbackParam:a.jsonpCallbackParam},b);g.headers=
./bin/scripts/externals/angular.min.js:(200<=a&&300>a?O.put(R,[a,c,vd(d),e]):O.remove(R));b?h.$applyAsync(f):(f(),h.$$phase||h.$apply())}function p(a,b,d,e){b=-1<=b?b:0;(200<=b&&300>b?G.resolve:G.reject)({data:a,status:b,headers:wd(d),config:c,statusText:e})}function K(a){p(a.data,a.status,pa(a.headers()),a.statusText)}function t(){var a=n.pendingRequests.indexOf(c);-1!==a&&n.pendingRequests.splice(a,1)}var G=k.defer(),y=G.promise,O,X,P=c.headers,s="jsonp"===Q(c.method),R=c.url;s?R=m.getTrustedResourceUrl(R):F(R)||(R=m.valueOf(R));R=r(R,
./bin/scripts/externals/angular.min.js:"$sce",function(d,c,e){function f(a){return"\\\\\\"+a}function g(c){return c.replace(n,a).replace(p,b)}function h(a,b,c,d){var e=a.$watch(function(a){e();return d(a)},b,c);return e}function k(f,k,n,p){function M(a){try{var b=a;a=n?e.getTrusted(n,b):e.valueOf(b);return p&&!u(a)?a:$b(a)}catch(d){c(Da.interr(f,d))}}if(!f.length||-1===f.indexOf(a)){var q;k||(k=g(f),q=la(k),q.exp=f,q.expressions=[],q.$$watchDelegate=h);return q}p=!!p;var A,s,I=0,K=[],E=[];q=f.length;for(var G=[],y=[];I<q;)if(-1!==(A=f.indexOf(a,
./bin/scripts/externals/angular.min.js:d;a.toWatch=c;break;case s.ObjectExpression:d=!0;c=[];q(a.properties,function(a){U(a.value,b);d=d&&a.value.constant&&!a.computed;a.value.constant||c.push.apply(c,a.value.toWatch);a.computed&&(U(a.key,b),a.key.constant||c.push.apply(c,a.key.toWatch))});a.constant=d;a.toWatch=c;break;case s.ThisExpression:a.constant=!1;a.toWatch=[];break;case s.LocalsExpression:a.constant=!1,a.toWatch=[]}}function Ed(a){if(1===a.length){a=a[0].expression;var b=a.toWatch;return 1!==b.length?b:b[0]!==a?b:void 0}}function Fd(a){return a.type===
./bin/scripts/externals/angular.min.js:s.Identifier||a.type===s.MemberExpression}function Gd(a){if(1===a.body.length&&Fd(a.body[0].expression))return{type:s.AssignmentExpression,left:a.body[0].expression,right:{type:s.NGValueParameter},operator:"="}}function Hd(a){this.$filter=a}function Id(a){this.$filter=a}function uc(a,b,d){this.ast=new s(a,d);this.astCompiler=d.csp?new Id(b):new Hd(b)}function vc(a){return D(a.valueOf)?a.valueOf():Bg.call(a)}function Lf(){var a=V(),b={"true":!0,"false":!1,"null":null,undefined:void 0},d,c;this.addLiteral=
./bin/scripts/externals/angular.min.js:!0;this.$get=["$browser","$exceptionHandler",function(b,d){return Jd(function(a){b.defer(a)},d,a)}];this.errorOnUnhandledRejections=function(b){return u(b)?(a=b,this):a}}function Jd(a,b,d){function c(){return new e}function e(){var a=this.promise=new f;this.resolve=function(b){k(a,b)};this.reject=function(b){m(a,b)};this.notify=function(b){p(a,b)}}function f(){this.$$state={status:0}}function g(){for(;!s&&A.length;){var a=A.shift();if(!a.pur){a.pur=!0;var c=a.value,c="Possibly unhandled rejection: "+
./bin/scripts/externals/angular.min.js:("function"===typeof c?c.toString().replace(/ \{[\s\S]*$/,""):w(c)?"undefined":"string"!==typeof c?Be(c,void 0):c);a.value instanceof Error?b(a.value,c):b(c)}}}function h(b){!d||b.pending||2!==b.status||b.pur||(0===s&&0===A.length&&a(g),A.push(b));!b.processScheduled&&b.pending&&(b.processScheduled=!0,++s,a(function(){var c,e,f;f=b.pending;b.processScheduled=!1;b.pending=void 0;try{for(var h=0,l=f.length;h<l;++h){b.pur=!0;e=f[h][0];c=f[h][b.status];try{D(c)?k(e,c(b.value)):1===b.status?k(e,b.value):
./bin/scripts/externals/angular.min.js:m(e,b.value)}catch(n){m(e,n)}}}finally{--s,d&&0===s&&a(g)}}))}function k(a,b){a.$$state.status||(b===a?n(a,M("qcycle",b)):l(a,b))}function l(a,b){function c(b){g||(g=!0,l(a,b))}function d(b){g||(g=!0,n(a,b))}function e(b){p(a,b)}var f,g=!1;try{if(C(b)||D(b))f=b.then;D(f)?(a.$$state.status=-1,f.call(b,c,d,e)):(a.$$state.value=b,a.$$state.status=1,h(a.$$state))}catch(k){d(k)}}function m(a,b){a.$$state.status||n(a,b)}function n(a,b){a.$$state.value=b;a.$$state.status=2;h(a.$$state)}function p(c,d){var e=
./bin/scripts/externals/angular.min.js:function(){return a}};a&&(b.prototype=new a);b.prototype.valueOf=function(){return this.$$unwrapTrustedValue()};b.prototype.toString=function(){return this.$$unwrapTrustedValue().toString()};return b}var f=function(a){throw ta("unsafe");};d.has("$sanitize")&&(f=d.get("$sanitize"));var g=e(),h={};h[oa.HTML]=e(g);h[oa.CSS]=e(g);h[oa.URL]=e(g);h[oa.JS]=e(g);h[oa.RESOURCE_URL]=e(h[oa.URL]);return{trustAs:function(a,b){var c=h.hasOwnProperty(a)?h[a]:null;if(!c)throw ta("icontext",a,b);if(null===b||w(b)||
./bin/scripts/externals/angular.min.js:""===b)return b;if("string"!==typeof b)throw ta("itype",a);return new c(b)},getTrusted:function(d,e){if(null===e||w(e)||""===e)return e;var g=h.hasOwnProperty(d)?h[d]:null;if(g&&e instanceof g)return e.$$unwrapTrustedValue();if(d===oa.RESOURCE_URL){var g=Ca(e.toString()),n,p,r=!1;n=0;for(p=a.length;n<p;n++)if(c(a[n],g)){r=!0;break}if(r)for(n=0,p=b.length;n<p;n++)if(c(b[n],g)){r=!1;break}if(r)return e;throw ta("insecurl",e.toString());}if(d===oa.HTML)return f(e);throw ta("unsafe");},valueOf:function(a){return a instanceof
./bin/scripts/externals/angular.min.js:g?a.$$unwrapTrustedValue():a}}}]}function Pf(){var a=!0;this.enabled=function(b){arguments.length&&(a=!!b);return a};this.$get=["$parse","$sceDelegate",function(b,d){if(a&&8>za)throw ta("iequirks");var c=pa(oa);c.isEnabled=function(){return a};c.trustAs=d.trustAs;c.getTrusted=d.getTrusted;c.valueOf=d.valueOf;a||(c.trustAs=c.getTrusted=function(a,b){return b},c.valueOf=Ya);c.parseAs=function(a,d){var e=b(d);return e.literal&&e.constant?e:b(d,function(b){return c.getTrusted(a,b)})};var e=c.parseAs,
./bin/scripts/externals/angular.min.js:function c(a,b){var c=0,d=a.type,k=b.type;if(d===k){var k=a.value,l=b.value;"string"===d?(k=k.toLowerCase(),l=l.toLowerCase()):"object"===d&&(C(k)&&(k=a.index),C(l)&&(l=b.index));k!==l&&(c=k<l?-1:1)}else c=d<k?-1:1;return c}return function(a,f,g,h){if(null==a)return a;if(!qa(a))throw L("orderBy")("notarray",a);H(f)||(f=[f]);0===f.length&&(f=["+"]);var k=b(f),l=g?-1:1,m=D(h)?h:c;a=Array.prototype.map.call(a,function(a,b){return{value:a,tieBreaker:{value:b,type:"number",index:b},predicateValues:k.map(function(c){var e=
./bin/scripts/externals/angular.min.js:c.get(a);c=typeof e;if(null===e)c="string",e="null";else if("object"===c)a:{if(D(e.valueOf)&&(e=e.valueOf(),d(e)))break a;Wb(e)&&(e=e.toString(),d(e))}return{value:e,type:c,index:b}})}});a.sort(function(a,b){for(var c=0,d=k.length;c<d;c++){var e=m(a.predicateValues[c],b.predicateValues[c]);if(e)return e*k[c].descending*l}return m(a.tieBreaker,b.tieBreaker)*l});return a=a.map(function(a){return a.value})}}function Qa(a){D(a)&&(a={link:a});a.restrict=a.restrict||"AC";return la(a)}function Lb(a,b,d,
./bin/scripts/externals/angular.min.js:function(){h=!0});b.on("compositionend",function(){h=!1;l()})}var k,l=function(a){k&&(f.defer.cancel(k),k=null);if(!h){var e=b.val();a=a&&a.type;"password"===g||d.ngTrim&&"false"===d.ngTrim||(e=T(e));(c.$viewValue!==e||""===e&&c.$$hasNativeValidators)&&c.$setViewValue(e,a)}};if(e.hasEvent("input"))b.on("input",l);else{var m=function(a,b,c){k||(k=f.defer(function(){k=null;b&&b.value===c||l(a)}))};b.on("keydown",function(a){var b=a.keyCode;91===b||15<b&&19>b||37<=b&&40>=b||m(a,this,this.value)});if(e.hasEvent("paste"))b.on("paste cut",
./bin/scripts/externals/angular.min.js:this.$$ngModelGet=this.$$parsedNgModel;this.$$ngModelSet=this.$$parsedNgModelAssign;this.$$pendingDebounce=null;this.$$parserValid=void 0;this.$$currentValidationRunId=0;Object.defineProperty(this,"$$scope",{value:a});this.$$attr=d;this.$$element=c;this.$$animate=f;this.$$timeout=g;this.$$parse=e;this.$$q=h;this.$$exceptionHandler=b;Xd(this);Rg(this)}function Rg(a){a.$$scope.$watch(function(b){b=a.$$ngModelGet(b);if(b!==a.$modelValue&&(a.$modelValue===a.$modelValue||b===b)){a.$modelValue=a.$$rawModelValue=
./bin/scripts/externals/angular.min.js:c,e;for(b=0;b<d;++b)if(c=Ja[b],a=x.document.querySelector("["+c.replace(":","\\:")+"jq]")){e=a.getAttribute(c+"jq");break}return rb.name_=e},se=/:/g,Ja=["ng-","data-ng-","ng:","x-ng-"],ve=function(a){var b=a.currentScript;if(!b)return!0;if(!(b instanceof x.HTMLScriptElement||b instanceof x.SVGScriptElement))return!1;b=b.attributes;return[b.getNamedItem("src"),b.getNamedItem("href"),b.getNamedItem("xlink:href")].every(function(b){if(!b)return!0;if(!b.value)return!1;var c=a.createElement("a");c.href=
./bin/scripts/externals/angular.min.js:b.value;if(a.location.origin===c.origin)return!0;switch(c.protocol){case "http:":case "https:":case "ftp:":case "blob:":case "file:":case "data:":return!0;default:return!1}})}(x.document),ye=/[A-Z]/g,Uc=!1,Ia=3,De={full:"1.6.4",major:1,minor:6,dot:4,codeName:"phenomenal-footnote"};W.expando="ng339";var hb=W.cache={},eg=1;W._data=function(a){return this.cache[a[this.expando]]||{}};var ag=/-([a-z])/g,Ug=/^-ms-/,zb={mouseleave:"mouseout",mouseenter:"mouseover"},dc=L("jqLite"),dg=/^<([\w-]+)\s*\/?>(?:<\/\1>|)$/,
./bin/scripts/externals/angular.min.js:this._lastKey=a;return this._lastIndex=this._keys.indexOf(a)},_transformKey:function(a){return da(a)?Vg:a},get:function(a){a=this._transformKey(a);a=this._idx(a);if(-1!==a)return this._values[a]},set:function(a,b){a=this._transformKey(a);var d=this._idx(a);-1===d&&(d=this._lastIndex=this._keys.length);this._keys[d]=a;this._values[d]=b},delete:function(a){a=this._transformKey(a);a=this._idx(a);if(-1===a)return!1;this._keys.splice(a,1);this._values.splice(a,1);this._lastKey=NaN;this._lastIndex=-1;return!0}};
./bin/scripts/externals/angular.min.js:!0;return this}});var Ua=L("$parse"),Bg={}.constructor.prototype.valueOf,Qb=V();q("+ - * / % === !== == != < > <= >= && || ! = |".split(" "),function(a){Qb[a]=!0});var $g={n:"\n",f:"\f",r:"\r",t:"\t",v:"\v","'":"'",'"':'"'},wc=function(a){this.options=a};wc.prototype={constructor:wc,lex:function(a){this.text=a;this.index=0;for(this.tokens=[];this.index<this.text.length;)if(a=this.text.charAt(this.index),'"'===a||"'"===a)this.readString(a);else if(this.isNumber(a)||"."===a&&this.isNumber(this.peek()))this.readNumber();
./bin/scripts/externals/angular.min.js:c&&this.isNumber(c)||"e"!==a.charAt(a.length-1))break;else this.throwError("Invalid exponent")}this.index++}this.tokens.push({index:b,text:a,constant:!0,value:Number(a)})},readIdent:function(){var a=this.index;for(this.index+=this.peekMultichar().length;this.index<this.text.length;){var b=this.peekMultichar();if(!this.isIdentifierContinue(b))break;this.index+=b.length}this.tokens.push({index:a,text:this.text.slice(a,this.index),identifier:!0})},readString:function(a){var b=this.index;this.index++;
./bin/scripts/externals/angular.min.js:for(var d="",c=a,e=!1;this.index<this.text.length;){var f=this.text.charAt(this.index),c=c+f;if(e)"u"===f?(e=this.text.substring(this.index+1,this.index+5),e.match(/[\da-f]{4}/i)||this.throwError("Invalid unicode escape [\\u"+e+"]"),this.index+=4,d+=String.fromCharCode(parseInt(e,16))):d+=$g[f]||f,e=!1;else if("\\"===f)e=!0;else{if(f===a){this.index++;this.tokens.push({index:b,text:c,constant:!0,value:d});return}d+=f}this.index++}this.throwError("Unterminated quote",b)}};var s=function(a,b){this.lexer=
./bin/scripts/externals/angular.min.js:unary:function(){var a;return(a=this.expect("+","-","!"))?{type:s.UnaryExpression,operator:a.text,prefix:!0,argument:this.unary()}:this.primary()},primary:function(){var a;this.expect("(")?(a=this.filterChain(),this.consume(")")):this.expect("[")?a=this.arrayDeclaration():this.expect("{")?a=this.object():this.selfReferential.hasOwnProperty(this.peek().text)?a=ra(this.selfReferential[this.consume().text]):this.options.literals.hasOwnProperty(this.peek().text)?a={type:s.Literal,value:this.options.literals[this.consume().text]}:
./bin/scripts/externals/angular.min.js:return a},filter:function(a){a=[a];for(var b={type:s.CallExpression,callee:this.identifier(),arguments:a,filter:!0};this.expect(":");)a.push(this.expression());return b},parseArguments:function(){var a=[];if(")"!==this.peekToken().text){do a.push(this.filterChain());while(this.expect(","))}return a},identifier:function(){var a=this.consume();a.identifier||this.throwError("is not a valid identifier",a);return{type:s.Identifier,name:a.text}},constant:function(){return{type:s.Literal,value:this.consume().value}},
./bin/scripts/externals/angular.min.js:arrayDeclaration:function(){var a=[];if("]"!==this.peekToken().text){do{if(this.peek("]"))break;a.push(this.expression())}while(this.expect(","))}this.consume("]");return{type:s.ArrayExpression,elements:a}},object:function(){var a=[],b;if("}"!==this.peekToken().text){do{if(this.peek("}"))break;b={type:s.Property,kind:"init"};this.peek().constant?(b.key=this.constant(),b.computed=!1,this.consume(":"),b.value=this.expression()):this.peek().identifier?(b.key=this.identifier(),b.computed=!1,this.peek(":")?
./bin/scripts/externals/angular.min.js:(this.consume(":"),b.value=this.expression()):b.value=b.key):this.peek("[")?(this.consume("["),b.key=this.expression(),this.consume("]"),b.computed=!0,this.consume(":"),b.value=this.expression()):this.throwError("invalid key",this.peek());a.push(b)}while(this.expect(","))}this.consume("}");return{type:s.ObjectExpression,properties:a}},throwError:function(a,b){throw Ua("syntax",b.text,a,b.index+1,this.text,this.text.substring(b.index));},consume:function(a){if(0===this.tokens.length)throw Ua("ueoe",
./bin/scripts/externals/angular.min.js:recurse:function(a,b,d,c,e,f){var g,h,k=this,l,m,n;c=c||z;if(!f&&u(a.watchId))b=b||this.nextId(),this.if_("i",this.lazyAssign(b,this.computedMember("i",a.watchId)),this.lazyRecurse(a,b,d,c,e,!0));else switch(a.type){case s.Program:q(a.body,function(b,c){k.recurse(b.expression,void 0,void 0,function(a){h=a});c!==a.body.length-1?k.current().body.push(h,";"):k.return_(h)});break;case s.Literal:m=this.escape(a.value);this.assign(b,m);c(b||m);break;case s.UnaryExpression:this.recurse(a.argument,void 0,
./bin/scripts/externals/angular.min.js:g.name,g.computed)+a.operator+h;k.assign(b,m);c(b||m)})},1);break;case s.ArrayExpression:l=[];q(a.elements,function(b){k.recurse(b,a.constant?void 0:k.nextId(),void 0,function(a){l.push(a)})});m="["+l.join(",")+"]";this.assign(b,m);c(b||m);break;case s.ObjectExpression:l=[];n=!1;q(a.properties,function(a){a.computed&&(n=!0)});n?(b=b||this.nextId(),this.assign(b,"{}"),q(a.properties,function(a){a.computed?(g=k.nextId(),k.recurse(a.key,g)):g=a.key.type===s.Identifier?a.key.name:""+a.key.value;h=k.nextId();
./bin/scripts/externals/angular.min.js:k.recurse(a.value,h);k.assign(k.member(b,g,a.computed),h)})):(q(a.properties,function(b){k.recurse(b.value,a.constant?void 0:k.nextId(),void 0,function(a){l.push(k.escape(b.key.type===s.Identifier?b.key.name:""+b.key.value)+":"+a)})}),m="{"+l.join(",")+"}",this.assign(b,m));c(b||m);break;case s.ThisExpression:this.assign(b,"s");c(b||"s");break;case s.LocalsExpression:this.assign(b,"l");c(b||"l");break;case s.NGValueParameter:this.assign(b,"v"),c(b||"v")}},getHasOwnProperty:function(a,b){var d=a+"."+
./bin/scripts/externals/angular.min.js:a=0===a.body.length?z:1===a.body.length?f[0]:function(a,b){var c;q(f,function(d){c=d(a,b)});return c};c&&(a.assign=function(a,b,d){return c(a,d,b)});e&&(a.inputs=e);return a},recurse:function(a,b,d){var c,e,f=this,g;if(a.input)return this.inputs(a.input,a.watchId);switch(a.type){case s.Literal:return this.value(a.value,b);case s.UnaryExpression:return e=this.recurse(a.argument),this["unary"+a.operator](e,b);case s.BinaryExpression:return c=this.recurse(a.left),e=this.recurse(a.right),this["binary"+
./bin/scripts/externals/angular.min.js:e,b,d);case s.CallExpression:return g=[],q(a.arguments,function(a){g.push(f.recurse(a))}),a.filter&&(e=this.$filter(a.callee.name)),a.filter||(e=this.recurse(a.callee,!0)),a.filter?function(a,c,d,f){for(var n=[],p=0;p<g.length;++p)n.push(g[p](a,c,d,f));a=e.apply(void 0,n,f);return b?{context:void 0,name:void 0,value:a}:a}:function(a,c,d,f){var n=e(a,c,d,f),p;if(null!=n.value){p=[];for(var r=0;r<g.length;++r)p.push(g[r](a,c,d,f));p=n.value.apply(n.context,p)}return b?{value:p}:p};case s.AssignmentExpression:return c=
./bin/scripts/externals/angular.min.js:this.recurse(a.left,!0,1),e=this.recurse(a.right),function(a,d,f,g){var n=c(a,d,f,g);a=e(a,d,f,g);n.context[n.name]=a;return b?{value:a}:a};case s.ArrayExpression:return g=[],q(a.elements,function(a){g.push(f.recurse(a))}),function(a,c,d,e){for(var f=[],p=0;p<g.length;++p)f.push(g[p](a,c,d,e));return b?{value:f}:f};case s.ObjectExpression:return g=[],q(a.properties,function(a){a.computed?g.push({key:f.recurse(a.key),computed:!0,value:f.recurse(a.value)}):g.push({key:a.key.type===s.Identifier?a.key.name:
./bin/scripts/externals/angular.min.js:""+a.key.value,computed:!1,value:f.recurse(a.value)})}),function(a,c,d,e){for(var f={},p=0;p<g.length;++p)g[p].computed?f[g[p].key(a,c,d,e)]=g[p].value(a,c,d,e):f[g[p].key]=g[p].value(a,c,d,e);return b?{value:f}:f};case s.ThisExpression:return function(a){return b?{value:a}:a};case s.LocalsExpression:return function(a,c){return b?{value:c}:c};case s.NGValueParameter:return function(a,c,d){return b?{value:d}:d}}},"unary+":function(a,b){return function(d,c,e,f){d=a(d,c,e,f);d=u(d)?+d:0;return b?{value:d}:
./bin/scripts/externals/angular.min.js:d}},"unary-":function(a,b){return function(d,c,e,f){d=a(d,c,e,f);d=u(d)?-d:-0;return b?{value:d}:d}},"unary!":function(a,b){return function(d,c,e,f){d=!a(d,c,e,f);return b?{value:d}:d}},"binary+":function(a,b,d){return function(c,e,f,g){var h=a(c,e,f,g);c=b(c,e,f,g);h=Dd(h,c);return d?{value:h}:h}},"binary-":function(a,b,d){return function(c,e,f,g){var h=a(c,e,f,g);c=b(c,e,f,g);h=(u(h)?h:0)-(u(c)?c:0);return d?{value:h}:h}},"binary*":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)*b(c,e,f,g);
./bin/scripts/externals/angular.min.js:return d?{value:c}:c}},"binary/":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)/b(c,e,f,g);return d?{value:c}:c}},"binary%":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)%b(c,e,f,g);return d?{value:c}:c}},"binary===":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)===b(c,e,f,g);return d?{value:c}:c}},"binary!==":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)!==b(c,e,f,g);return d?{value:c}:c}},"binary==":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)==b(c,e,f,g);return d?
./bin/scripts/externals/angular.min.js:{value:c}:c}},"binary!=":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)!=b(c,e,f,g);return d?{value:c}:c}},"binary<":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)<b(c,e,f,g);return d?{value:c}:c}},"binary>":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)>b(c,e,f,g);return d?{value:c}:c}},"binary<=":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)<=b(c,e,f,g);return d?{value:c}:c}},"binary>=":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)>=b(c,e,f,g);return d?{value:c}:
./bin/scripts/externals/angular.min.js:c}},"binary&&":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)&&b(c,e,f,g);return d?{value:c}:c}},"binary||":function(a,b,d){return function(c,e,f,g){c=a(c,e,f,g)||b(c,e,f,g);return d?{value:c}:c}},"ternary?:":function(a,b,d,c){return function(e,f,g,h){e=a(e,f,g,h)?b(e,f,g,h):d(e,f,g,h);return c?{value:e}:e}},value:function(a,b){return function(){return b?{context:void 0,name:void 0,value:a}:a}},identifier:function(a,b,d){return function(c,e,f,g){c=e&&a in e?e:c;d&&1!==d&&c&&null==c[a]&&(c[a]=
./bin/scripts/externals/angular.min.js:{});e=c?c[a]:void 0;return b?{context:c,name:a,value:e}:e}},computedMember:function(a,b,d,c){return function(e,f,g,h){var k=a(e,f,g,h),l,m;null!=k&&(l=b(e,f,g,h),l+="",c&&1!==c&&k&&!k[l]&&(k[l]={}),m=k[l]);return d?{context:k,name:l,value:m}:m}},nonComputedMember:function(a,b,d,c){return function(e,f,g,h){e=a(e,f,g,h);c&&1!==c&&e&&null==e[b]&&(e[b]={});f=null!=e?e[b]:void 0;return d?{context:e,name:b,value:f}:f}},inputs:function(a,b){return function(d,c,e,f){return f?f[b]:a(d,c,e)}}};uc.prototype=
./bin/scripts/externals/angular.min.js:"email";c.$validators.email=function(a,b){var d=a||b;return c.$isEmpty(d)||bh.test(d)}},radio:function(a,b,d,c){var e=!d.ngTrim||"false"!==T(d.ngTrim);w(d.name)&&b.attr("name",++qb);b.on("click",function(a){var g;b[0].checked&&(g=d.value,e&&(g=T(g)),c.$setViewValue(g,a&&a.type))});c.$render=function(){var a=d.value;e&&(a=T(a));b[0].checked=a===c.$viewValue};d.$observe("value",c.$render)},range:function(a,b,d,c,e,f){function g(a,c){b.attr(a,d[a]);d.$observe(a,c)}function h(a){n=Sa(a);da(c.$modelValue)||
./bin/scripts/externals/angular.min.js:kf=function(){function a(a,d,c){var e=u(c)?c:9===za?"":null;a.prop("value",e);d.$set("value",c)}return{restrict:"A",priority:100,compile:function(b,d){return ch.test(d.ngValue)?function(b,d,f){b=b.$eval(f.ngValue);a(d,f,b)}:function(b,d,f){b.$watch(f.ngValue,function(b){a(d,f,b)})}}}},Ke=["$compile",function(a){return{restrict:"AC",compile:function(b){a.$$addBindingClass(b);return function(b,c,e){a.$$addBindingInfo(c,e.ngBind);c=c[0];b.$watch(e.ngBind,function(a){c.textContent=$b(a)})}}}}],Me=["$interpolate",
./bin/scripts/externals/angular.min.js:"$compile",function(a,b){return{compile:function(d){b.$$addBindingClass(d);return function(c,d,f){c=a(d.attr(f.$attr.ngBindTemplate));b.$$addBindingInfo(d,c.expressions);d=d[0];f.$observe("ngBindTemplate",function(a){d.textContent=w(a)?"":a})}}}}],Le=["$sce","$parse","$compile",function(a,b,d){return{restrict:"A",compile:function(c,e){var f=b(e.ngBindHtml),g=b(e.ngBindHtml,function(b){return a.valueOf(b)});d.$$addBindingClass(c);return function(b,c,e){d.$$addBindingInfo(c,e.ngBindHtml);b.$watch(g,
./bin/scripts/externals/angular.min.js:a.element;b&&!b.selected&&(b.selected=!0);return a}function n(a,b){a.element=b;b.disabled=a.disabled;a.label!==b.label&&(b.label=a.label,b.textContent=a.label);b.value=a.selectValue}function p(){var a=A&&r.readValue();if(A)for(var b=A.items.length-1;0<=b;b--){var c=A.items[b];u(c.group)?Eb(c.element.parentNode):Eb(c.element)}A=z.getOptions();var d={};x&&h.prepend(r.emptyOption);A.items.forEach(function(a){var b;if(u(a.group)){b=d[a.group];b||(b=f.cloneNode(!1),I.appendChild(b),b.label=null===a.group?
./bin/scripts/externals/angular.min.js:"null":a.group,d[a.group]=b);var c=e.cloneNode(!1)}else b=I,c=e.cloneNode(!1);b.appendChild(c);n(a,c)});h[0].appendChild(I);s.$render();s.$isEmpty(a)||(b=r.readValue(),(z.trackBy||v?sa(a,b):a===b)||(s.$setViewValue(b),s.$render()))}var r=l[0],s=l[1],v=k.multiple;l=0;for(var t=h.children(),w=t.length;l<w;l++)if(""===t[l].value){r.hasEmptyOption=!0;r.emptyOption=t.eq(l);break}var x=!!r.emptyOption;B(e.cloneNode(!1)).val("?");var A,z=c(k.ngOptions,h,d),I=b[0].createDocumentFragment();r.generateUnknownOptionValue=
./bin/scripts/externals/angular.min.js:function(a){var b=A.selectValueMap[h.val()],c=A.getOptionFromViewValue(a);b&&b.element.removeAttribute("selected");c?(h[0].value!==c.selectValue&&(r.removeUnknownOption(),r.unselectEmptyOption(),h[0].value=c.selectValue,c.element.selected=!0),c.element.setAttribute("selected","selected")):x?r.selectEmptyOption():r.unknownOption.parent().length?r.updateUnknownOption(a):r.renderUnknownOption(a)},r.readValue=function(){var a=A.selectValueMap[h.val()];return a&&!a.disabled?(r.unselectEmptyOption(),r.removeUnknownOption(),
./bin/scripts/externals/angular.min.js:c&&Ta(B(c),!1);e.hasOption(b)?(e.removeUnknownOption(),c=Pa(b),a.val(c in e.selectValueMap?c:b),Ta(B(a[0].options[a[0].selectedIndex]),!0)):null==b&&e.emptyOption?(e.removeUnknownOption(),e.selectEmptyOption()):e.unknownOption.parent().length?e.updateUnknownOption(b):e.renderUnknownOption(b)};e.addOption=function(a,b){if(8!==b[0].nodeType){Ka(a,'"option value"');""===a&&(e.hasEmptyOption=!0,e.emptyOption=b);var c=f.get(a)||0;f.set(a,c+1);d()}};e.removeOption=function(a){var b=f.get(a);b&&(1===b?(f.delete(a),
./bin/scripts/externals/angular.min.js:""===a&&(e.hasEmptyOption=!1,e.emptyOption=void 0)):f.set(a,b-1))};e.hasOption=function(a){return!!f.get(a)};var g=!1,h=!1;e.registerOption=function(a,b,f,g,h){if(f.$attr.ngValue){var q,s=NaN;f.$observe("value",function(a){var d,f=b.prop("selected");u(s)&&(e.removeOption(q),delete e.selectValueMap[s],d=!0);s=Pa(a);q=a;e.selectValueMap[s]=a;e.addOption(a,b);b.attr("value",s);d&&f&&c()})}else g?f.$observe("value",function(a){e.readValue();var d,f=b.prop("selected");u(q)&&(e.removeOption(q),d=!0);q=
./bin/scripts/externals/angular.min.js:a;e.addOption(a,b);d&&f&&c()}):h?a.$watch(h,function(a,d){f.$set("value",a);var g=b.prop("selected");d!==a&&e.removeOption(d);e.addOption(a,b);d&&g&&c()}):e.addOption(f.value,b);f.$observe("disabled",function(a){if("true"===a||a&&b.prop("selected"))e.multiple?c(!0):(e.ngModelCtrl.$setViewValue(null),e.ngModelCtrl.$render())});b.on("$destroy",function(){var a=e.readValue(),b=f.value;e.removeOption(b);d();(e.multiple&&a&&-1!==a.indexOf(b)||a===b)&&c(!0)})}}],Ie=function(){return{restrict:"E",require:["select",
./bin/scripts/externals/angular.min.js:"?ngModel"],controller:jh,priority:1,link:{pre:function(a,b,d,c){var e=c[0],f=c[1];if(f){if(e.ngModelCtrl=f,b.on("change",function(){e.removeUnknownOption();a.$apply(function(){f.$setViewValue(e.readValue())})}),d.multiple){e.multiple=!0;e.readValue=function(){var a=[];q(b.find("option"),function(b){b.selected&&!b.disabled&&(b=b.value,a.push(b in e.selectValueMap?e.selectValueMap[b]:b))});return a};e.writeValue=function(a){q(b.find("option"),function(b){var c=!!a&&(-1!==Array.prototype.indexOf.call(a,
./bin/scripts/externals/angular.min.js:b.value)||-1!==Array.prototype.indexOf.call(a,e.selectValueMap[b.value]));c!==b.selected&&Ta(B(b),c)})};var g,h=NaN;a.$watch(function(){h!==f.$viewValue||sa(g,f.$viewValue)||(g=pa(f.$viewValue),f.$render());h=f.$viewValue});f.$isEmpty=function(a){return!a||0===a.length}}}else e.registerOption=z},post:function(a,b,d,c){var e=c[1];if(e){var f=c[0];e.$render=function(){f.writeValue(e.$viewValue)}}}}}},Je=["$interpolate",function(a){return{restrict:"E",priority:100,compile:function(b,d){var c,e;u(d.ngValue)||
./bin/scripts/externals/angular.min.js:(u(d.value)?c=a(d.value,!0):(e=a(b.text(),!0))||d.$set("value",b.text()));return function(a,b,d){var k=b.parent();(k=k.data("$selectController")||k.parent().data("$selectController"))&&k.registerOption(a,b,d,c,e)}}}}],Zc=function(){return{restrict:"A",require:"?ngModel",link:function(a,b,d,c){c&&(d.required=!0,c.$validators.required=function(a,b){return!d.required||!c.$isEmpty(b)},d.$observe("required",function(){c.$validate()}))}}},Yc=function(){return{restrict:"A",require:"?ngModel",link:function(a,
./bin/scripts/externals/angular.min.js:b.length<=e}}}}},$c=function(){return{restrict:"A",require:"?ngModel",link:function(a,b,d,c){if(c){var e=0;d.$observe("minlength",function(a){e=Z(a)||0;c.$validate()});c.$validators.minlength=function(a,b){return c.$isEmpty(b)||b.length>=e}}}}};x.angular.bootstrap?x.console&&console.log("WARNING: Tried to load angular more than once."):(ze(),Ce(ea),ea.module("ngLocale",[],["$provide",function(a){function b(a){a+="";var b=a.indexOf(".");return-1==b?0:a.length-b-1}a.value("$locale",{DATETIME_FORMATS:{AMPMS:["AM",
./bin/appengine/.project:					<value>&lt;project&gt;/.externalToolBuilders/com.google.gdt.eclipse.core.webAppProjectValidator.launch</value>
./bin/appengine/.project:					<value>&lt;project&gt;/.externalToolBuilders/com.google.appengine.eclipse.core.projectValidator.launch</value>
./bin/appengine/.externalToolBuilders/com.google.appengine.eclipse.core.projectValidator.launch:<booleanAttribute key="org.eclipse.ui.externaltools.ATTR_BUILDER_ENABLED" value="false"/>
./bin/appengine/.externalToolBuilders/com.google.appengine.eclipse.core.projectValidator.launch:<stringAttribute key="org.eclipse.ui.externaltools.ATTR_DISABLED_BUILDER" value="com.google.appengine.eclipse.core.projectValidator"/>
./bin/appengine/.externalToolBuilders/com.google.appengine.eclipse.core.projectValidator.launch:<booleanAttribute key="org.eclipse.ui.externaltools.ATTR_TRIGGERS_CONFIGURED" value="true"/>
./bin/appengine/.externalToolBuilders/com.google.gdt.eclipse.core.webAppProjectValidator.launch:<booleanAttribute key="org.eclipse.ui.externaltools.ATTR_BUILDER_ENABLED" value="false"/>
./bin/appengine/.externalToolBuilders/com.google.gdt.eclipse.core.webAppProjectValidator.launch:<stringAttribute key="org.eclipse.ui.externaltools.ATTR_DISABLED_BUILDER" value="com.google.gdt.eclipse.core.webAppProjectValidator"/>
./bin/appengine/.externalToolBuilders/com.google.gdt.eclipse.core.webAppProjectValidator.launch:<booleanAttribute key="org.eclipse.ui.externaltools.ATTR_TRIGGERS_CONFIGURED" value="true"/>
./metadata-form/resources/repository.json:            "description": "The version number for this FDP. Can accept arbitrary string values.",
./metadata-form/resources/dataset.json:            "description": "The version number for this Dataset. Can accept arbitrary string values.",
./metadata-form/src/field/field-directive.js:          // TODO need proper handling of unknown constant value
./metadata-form/src/field/field-directive.js:            angular.forEach(root, function(value) {
./metadata-form/src/field/field-directive.js:              angular.forEach(value, function(v, k) {
./metadata-form/karma.conf.js:    // possible values: 'dots', 'progress'
./metadata-form/karma.conf.js:    // possible values: config.LOG_DISABLE || config.LOG_ERROR || config.LOG_WARN || config.LOG_INFO || config.LOG_DEBUG
./refine:  -x <name=value> additional configuration parameters to pass to OpenRefine
./refine:# ----- Default values ------------------------------------------
./server/IDEs/netbeans/nbproject/project.properties:# (you may also define separate properties like run-sys-prop.name=value instead of -Dname=value
./server/IDEs/netbeans/nbproject/project.properties:# or test-sys-prop.name=value to set system properties for unit tests):
./unsign:      # just change LC_CODE_SIGNATURE to a high value that will be ignored by the loader
./extensions/gdata/module/scripts/index/gdata-source-ui.js:    var url = $.trim(self._elmts.urlInput[0].value);
./extensions/gdata/module/scripts/index/importing-controller.js:      options.ignoreLines = parseIntDefault(this._parsingPanelElmts.ignoreInput[0].value, -1);
./extensions/gdata/module/scripts/index/importing-controller.js:      options.headerLines = parseIntDefault(this._parsingPanelElmts.headerLinesInput[0].value, 0);
./extensions/gdata/module/scripts/index/importing-controller.js:    options.skipDataLines = parseIntDefault(this._parsingPanelElmts.skipInput[0].value, 0);
./extensions/gdata/module/scripts/index/importing-controller.js:    options.limit = parseIntDefault(this._parsingPanelElmts.limitInput[0].value, -1);
./extensions/gdata/module/scripts/index/importing-controller.js:  this._parsingPanelElmts.projectNameInput[0].value = this._doc.title;
./extensions/gdata/module/scripts/index/importing-controller.js:      this._parsingPanelElmts.ignoreInput[0].value = this._options.ignoreLines.toString();
./extensions/gdata/module/scripts/index/importing-controller.js:      this._parsingPanelElmts.headerLinesInput[0].value = this._options.headerLines.toString();
./extensions/gdata/module/scripts/index/importing-controller.js:    this._parsingPanelElmts.limitInput[0].value = this._options.limit.toString();
./extensions/gdata/module/scripts/index/importing-controller.js:    this._parsingPanelElmts.skipInput.value[0].value = this._options.skipDataLines.toString();
./extensions/gdata/module/scripts/index/importing-controller.js:  var projectName = $.trim(this._parsingPanelElmts.projectNameInput[0].value);
./extensions/gdata/.settings/.jsdtscope:			<attribute name="hide" value="true"/>
./extensions/sample/.settings/.jsdtscope:			<attribute name="hide" value="true"/>
./extensions/jython/module/MOD-INF/controller.js:    "return value"
./extensions/pc-axis/module/scripts/pc-axis-parser-ui.js:    encoding: $.trim(this._optionContainerElmts.encodingInput[0].value)
./extensions/pc-axis/module/scripts/pc-axis-parser-ui.js:    options.limit = parseIntDefault(this._optionContainerElmts.limitInput[0].value, -1);
./extensions/pc-axis/module/scripts/pc-axis-parser-ui.js:    options.skipDataLines = parseIntDefault(this._optionContainerElmts.skipInput[0].value, -1);
./extensions/pc-axis/module/scripts/pc-axis-parser-ui.js:    .attr('value', this._config.encoding || '')
./extensions/pc-axis/module/scripts/pc-axis-parser-ui.js:    this._optionContainerElmts.limitInput[0].value = this._config.limit.toString();
./extensions/pc-axis/module/scripts/pc-axis-parser-ui.js:    this._optionContainerElmts.skipInput.value[0].value = this._config.skipDataLines.toString();
./extensions/freebase/module/langs/translation-it.json:        "what-value": "Quale valore?",
./extensions/freebase/module/langs/translation-it.json:        "value": "Valore",
./extensions/freebase/module/langs/translation-it.json:        "literal-value": "come un valore letterale",
./extensions/freebase/module/langs/translation-it.json:        "value-type": "Tipo valore",
./extensions/freebase/module/langs/translation-it.json:        "use-literal-value": "Usa un valore letterale",
./extensions/freebase/module/langs/translation-it.json:        "specify-value-warning": "Per favore specifica il valore da usare"
./extensions/freebase/module/langs/translation-default.json:        "what-value": "What value?",
./extensions/freebase/module/langs/translation-default.json:        "value": "Value",
./extensions/freebase/module/langs/translation-default.json:        "literal-value": "as a literal value",
./extensions/freebase/module/langs/translation-default.json:        "value-type": "Value type",
./extensions/freebase/module/langs/translation-default.json:        "use-literal-value": "Use a literal value",
./extensions/freebase/module/langs/translation-default.json:        "specify-value-warning": "Please specify the value to use"
./extensions/freebase/module/langs/translation-en.json:        "what-value": "What value?",
./extensions/freebase/module/langs/translation-en.json:        "value": "Value",
./extensions/freebase/module/langs/translation-en.json:        "literal-value": "as a literal value",
./extensions/freebase/module/langs/translation-en.json:        "value-type": "Value type",
./extensions/freebase/module/langs/translation-en.json:        "use-literal-value": "Use a literal value",
./extensions/freebase/module/langs/translation-en.json:        "specify-value-warning": "Please specify the value to use"
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-link.js:  this._link.target = this._link.target || { nodeType: "cell-as-value" }
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-link.js:    var conditionColumnName = conditionalSelect[0].value;
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-link.js:  .attr("value", "")
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-link.js:    .attr("value", column.name)
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-link.js:          self._link.target.nodeType = "cell-as-value";
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:      this._node.nodeType == "cell-as-value" || 
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:  } else if (this._node.nodeType == "value") {
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:    if ("value" in this._node) {
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:          nodeType: "cell-as-value"
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:      label: $.i18n._('fb-schema-alignment')["value"],
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:        self._node.nodeType = "value";
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:    '<option value="/type/text" checked>'+$.i18n._('fb-schema-alignment')["text"]+'</option>' +
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:    '<option value="/type/int">'+$.i18n._('fb-schema-alignment')["int"]+'</option>' +
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:    '<option value="/type/float">'+$.i18n._('fb-schema-alignment')["float"]+'</option>' +
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:    '<option value="/type/double">'+$.i18n._('fb-schema-alignment')["double"]+'</option>' +
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:    '<option value="/type/boolean">'+$.i18n._('fb-schema-alignment')["boolean"]+'</option>' +
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:    '<option value="/type/datetime">'+$.i18n._('fb-schema-alignment')["date-time"]+'</option>' + 
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:    '<option value="/type/rawstring">'+$.i18n._('fb-schema-alignment')["rawstring"]+'</option>';
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:    '<input type="radio" name="schema-align-node-dialog-node-type" value="cell-as" bind="radioNodeTypeCellAs" /> '+$.i18n._('fb-schema-alignment')["set-to-cell"]+'' +
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:    '<td><input type="radio" name="schema-align-node-dialog-node-subtype" value="cell-as-topic" bind="radioNodeTypeCellAsTopic" /></td>' +
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:    '<td><input type="radio" name="schema-align-node-dialog-node-subtype" value="cell-as-value" bind="radioNodeTypeCellAsValue" /></td>' +
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:    '<td colspan="3">'+$.i18n._('fb-schema-alignment')["literal-value"]+'</td>' +
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:    '<td><input type="radio" name="schema-align-node-dialog-node-subtype" value="cell-as-key" bind="radioNodeTypeCellAsKey" /></td>' +
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:    '<input type="radio" name="schema-align-node-dialog-node-type" value="anonymous" bind="radioNodeTypeAnonymous" /> '+$.i18n._('fb-schema-alignment')["generate-anonymous"]+'' +
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:    '<input type="radio" name="schema-align-node-dialog-node-type" value="topic" bind="radioNodeTypeTopic" /> '+$.i18n._('fb-schema-alignment')["use-existing-topic"]+'' +
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:    '<input type="radio" name="schema-align-node-dialog-node-type" value="value" bind="radioNodeTypeValue" /> '+$.i18n._('fb-schema-alignment')["use-literal-value"]+
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:    '<td>'+$.i18n._('fb-schema-alignment')["value"]+'</td>' +
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:    '<td><input bind="valueNodeTypeValueInput" /></td>' +
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:    '<td>'+$.i18n._('fb-schema-alignment')["value-type"]+'</td>' +
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:    '<td><select bind="valueNodeTypeValueTypeSelect">' + literalTypeSelectHtml + '</select></td>' +
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:    '<td><input bind="valueNodeTypeLanguageInput" /></td>' +
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:    .attr("value", column.name)
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:        elmts.cellAsTopicNodeTypeInput[0].value = typeName;
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:  elmts.valueNodeTypeValueInput
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:  elmts.valueNodeTypeValueTypeSelect
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:  elmts.valueNodeTypeLanguageInput
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:    } else if (this._node.nodeType == "cell-as-value") {
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:  } else if (this._node.nodeType == "value") {
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:    elmts.anonymousNodeTypeInput[0].value = this._node.type.name;
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:    elmts.cellAsTopicNodeTypeInput[0].value = this._node.type.name;
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:    elmts.topicNodeTypeInput[0].value = this._node.topic.name;
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:    elmts.cellAsKeyInput[0].value = this._node.namespace.name;
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:    elmts.valueNodeTypeLanguageInput[0].value = this._node.lang;
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:    elmts.valueNodeTypeLanguageInput.data("data.suggest", { id: this._node.lang });
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:    elmts.cellAsValueLanguageInput[0].value = this._node.lang;
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:  if ("valueType" in this._node) {
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:    elmts.valueNodeTypeValueTypeSelect[0].value = this._node.valueType;
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:    elmts.cellAsValueTypeSelect[0].value = this._node.valueType;
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:      nodeType: $("input[name='schema-align-node-dialog-node-type']:checked")[0].value
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:      node.nodeType = $("input[name='schema-align-node-dialog-node-subtype']:checked")[0].value;
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:        return this.getAttribute("value");
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:      } else if (node.nodeType == "cell-as-value") {
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:        node.valueType = elmts.cellAsValueTypeSelect[0].value;
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:        if (node.valueType == "/type/text") {
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:    } else if (node.nodeType == "value") {
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:      node.value = $.trim(elmts.valueNodeTypeValueInput[0].value);
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:      if (!node.value.length) {
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:        alert($.i18n._('fb-schema-alignment')["specify-value-warning"]);
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:      node.valueType = elmts.valueNodeTypeValueTypeSelect[0].value;
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:      if (node.valueType == "/type/text") {
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:        var l = elmts.valueNodeTypeLanguageInput.data("data.suggest");
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:    } else if (this._node.nodeType == "cell-as-value") {
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:        valueType: "valueType" in this._node ? this._node.valueType : "/type/text",
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:  } else if (this._node.nodeType == "value") {
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:    if (!("value" in this._node) || !this._node.value) {
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:      value: this._node.value,
./extensions/freebase/module/scripts/dialogs/schema-alignment/ui-node.js:      valueType: "valueType" in this._node ? this._node.valueType : "/type/text",
./extensions/freebase/module/scripts/dialogs/extend-data-preview-dialog.js:    bodyElmts.textarea[0].value = JSON.stringify(property.constraints, null, 2);
./extensions/freebase/module/scripts/dialogs/extend-data-preview-dialog.js:    bodyElmts.textarea[0].value = JSON.stringify({ "limit" : 10 }, null, 2);
./extensions/freebase/module/scripts/dialogs/extend-data-preview-dialog.js:      var o = JSON.parse(bodyElmts.textarea[0].value);
./extensions/freebase/module/scripts/dialogs/freebase-loading-dialog.js:              self._elmts.source_name[0].value = (data.value) ? data.value : theProject.metadata.name;
./extensions/freebase/module/scripts/extension.js:  var value = window.prompt("Set Freebase API Key:");
./extensions/freebase/module/scripts/extension.js:  if (value !== null) {
./extensions/freebase/module/scripts/extension.js:        value : JSON.stringify(value)
./extensions/freebase/module/scripts/extension.js:    CustomSuggest.setFreebaseAPIKey(value);
./extensions/freebase/module/scripts/extension.js:      if (data.value == null) {
./extensions/freebase/module/scripts/extension.js:        $(form).attr("action", "http://refinery.freebaseapps.com/load/" + data.value);
./main/tests/client/src/facets.js:    action (test, "type",        { jquery: '(".expression-preview-code")[0]', text: "value.split(',')[0]" });
./main/tests/client/src/facets.js:    wait   (test, "forElement",  { jquery: '("td:contains(\'value.split\')")[0]' });
./main/tests/client/src/initialize.js:windmill.macros.asserts.expectedTopFacetValue = function (test, expected_value) {
./main/tests/client/src/initialize.js:        jum.assertEquals(expected_value, $.trim($("a.facet-choice-label")[0].text));
./main/tests/data/nobel-prize-winners.csv:1927,medicine,Julius Wagner-Jauregg,for his discovery of the therapeutic value of malaria inoculation in the treatment of dementia paralytica
./main/tests/data/nobel-prize-winners.csv:1953,literature,Winston Churchill,for his mastery of historical and biographical description as well as for brilliant oratory in defending exalted human values
./main/tests/data/nobel-prize-winners.csv:1975,literature,Eugenio Montale,"for his distinctive poetry which, with great artistic sensitivity, has interpreted human values under the sign of an outlook on life with no illusions"
./main/tests/data/nobel-prize-winners.csv:1997,economics,Robert C. Merton,for a new method to determine the value of derivatives
./main/tests/data/nobel-prize-winners.csv:1997,economics,Myron S. Scholes,for a new method to determine the value of derivatives
./main/tests/data/government_contracts.csv:Contract ID,Contractor Name,Type of Contract,Date of Award,Start Date,End Date,Total value of Contract,Contract Awarded,Unique Project Identifier,Agency ID
./main/tests/data/government_contracts.csv:33899,,Fixed price; Software Support/Database Maintenance; COntract USGS-wide - value$ listed is NWIS-related,2008-03-31 00:00:00,2008-04-01 00:00:00,2012-09-30 00:00:00,2.205000,yes,010-12-01-02-01-1207-00,010
./main/tests/data/government_contracts.csv:27268,NAC INTERNATIONAL INCORPORATED NUCLEAR ASSURANCE CORP,Cost Plus Award Fee  Performance targets are established annually and based on performance review by DOE and NRC an award fee is determined.  Total value of contract describes steady state funding for NMMS  only.,1998-09-28 00:00:00,1998-10-01 00:00:00,2008-09-30 00:00:00,15.803000,yes,019-10-01-22-01-1015-00,019
./main/tests/data/government_contracts.csv:27269,,Cost plus Incentive Fee  M&amp;O Specific tasking for DME Application Development is authorized annually. EVMS tracks the DME tasking to assure performance is managed effectively.Total value of contract describes DME funding for NMMS  only.,1996-08-06 00:00:00,1996-10-01 00:00:00,2008-07-31 00:00:00,5.441000,yes,019-10-01-22-01-1015-00,019
./main/tests/data/government_contracts.csv:34792,,All contract dates and values are estimates or TBD,,,,0.000000,no,021-12-01-11-01-1120-00,021
./main/tests/data/government_contracts.csv:36145,,all contract dates and values are planning estimates (CPFF-DME),2009-07-13 00:00:00,2009-07-13 00:00:00,2012-07-12 00:00:00,60.000000,no,021-12-01-15-01-1010-00,021
./main/tests/data/government_contracts.csv:36146,,all contract dates and values are planning estimates (CPFF-O&M),2008-10-23 00:00:00,2008-10-23 00:00:00,2011-09-24 00:00:00,30.200000,no,021-12-01-15-01-1010-00,021
./main/tests/data/government_contracts.csv:36147,,all contract dates and values are planning estimates (CPFF-DME,2008-10-23 00:00:00,2008-10-23 00:00:00,2011-09-24 00:00:00,62.260000,no,021-12-01-15-01-1010-00,021
./main/tests/data/government_contracts.csv:36148,RAYTHEON COMPANY,all contract dates and values are planning estimates (CPFF-O&M),2008-10-23 00:00:00,2008-10-23 00:00:00,2013-09-22 00:00:00,21.000000,yes,021-12-01-15-01-1010-00,021
./main/tests/data/government_contracts.csv:36149,,all contract dates and values are planning estimates (CPFF-O&M),2011-09-25 00:00:00,2011-10-23 00:00:00,2013-09-25 00:00:00,0.000000,no,021-12-01-15-01-1010-00,021
./main/tests/data/government_contracts.csv:36150,,all contract dates and values are planning estimates (CPFF-DME),2011-09-25 00:00:00,2011-10-03 00:00:00,2013-09-25 00:00:00,0.000000,no,021-12-01-15-01-1010-00,021
./main/tests/data/government_contracts.csv:36151,,all contract dates and values are planning estimates (FFP-DME),2009-06-01 00:00:00,2009-06-01 00:00:00,2018-06-01 00:00:00,46.000000,no,021-12-01-15-01-1010-00,021
./main/tests/data/government_contracts.csv:36152,,all contract dates and values are planning estimates (CPFF-DME),2009-04-30 00:00:00,2009-04-30 00:00:00,2012-03-31 00:00:00,8.800000,no,021-12-01-15-01-1010-00,021
./main/tests/data/government_contracts.csv:36153,,all contract dates and values are planning estimates (FFP-DME),2009-04-30 00:00:00,2009-04-30 00:00:00,2012-03-31 00:00:00,0.400000,no,021-12-01-15-01-1010-00,021
./main/tests/data/government_contracts.csv:36154,,all contract dates and values are planning estimates (CPFF-O&M)),2009-03-30 00:00:00,2009-03-30 00:00:00,2012-03-30 00:00:00,2.600000,no,021-12-01-15-01-1010-00,021
./main/tests/data/government_contracts.csv:36155,,all contract dates and values are planning estimates (CPFF-DME),2009-03-30 00:00:00,2009-03-30 00:00:00,2012-03-30 00:00:00,6.600000,no,021-12-01-15-01-1010-00,021
./main/tests/data/government_contracts.csv:36156,,all contract dates and values are planning estimates (FFP-DME),2008-07-01 00:00:00,2008-07-01 00:00:00,2011-07-31 00:00:00,0.700000,yes,021-12-01-15-01-1010-00,021
./main/tests/data/government_contracts.csv:36157,,all contract dates and values are planning estimates (FFP-DME),2008-07-01 00:00:00,2008-07-01 00:00:00,2011-07-31 00:00:00,0.750000,yes,021-12-01-15-01-1010-00,021
./main/tests/data/government_contracts.csv:36158,,all contract dates and values are planning estimates (FFP-DME),2008-07-01 00:00:00,2008-07-01 00:00:00,2011-07-31 00:00:00,0.400000,yes,021-12-01-15-01-1010-00,021
./main/tests/data/government_contracts.csv:36162,,all contract dates and values are planning estimates OTA(FFP-DME),2009-03-31 00:00:00,2009-03-31 00:00:00,,3.600000,no,021-12-01-15-01-1010-00,021
./main/tests/data/government_contracts.csv:36163,,All contract datesand values are planning estimates (FFP-DME),2008-10-23 00:00:00,2008-10-23 00:00:00,2011-09-24 00:00:00,5.340000,no,021-12-01-15-01-1010-00,021
./main/webapp/modules/core/styles/views/data-table-view.less:.data-table-value-nonstring {
./main/webapp/modules/core/styles/dialogs/expression-preview-dialog.less:td.expression-preview-value {
./main/webapp/modules/core/styles/dialogs/expression-preview-dialog.less:.expression-preview-special-value {
./main/webapp/modules/core/styles/dialogs/clustering-dialog.less:.clustering-dialog-value-focus {
./main/webapp/modules/core/styles/dialogs/clustering-dialog.less:.clustering-dialog-value-focus a {
./main/webapp/modules/core/langs/translation-it.json:		"change-value": "Change value of preference key",
./main/webapp/modules/core/langs/translation-it.json:		"value": "Valore",
./main/webapp/modules/core/langs/translation-it.json:		"pref-key": "Preference key value:",
./main/webapp/modules/core/langs/translation-it.json:		"cluster-values": "valori nei Cluster",
./main/webapp/modules/core/langs/translation-it.json:		"cell-fields": "La cella corrente. Ha alcuni campi: 'value' e 'recon'.",
./main/webapp/modules/core/langs/translation-it.json:		"cell-value": "Il valore della cella corrente. Questa è una scorcatoia per 'cell.value'.",
./main/webapp/modules/core/langs/translation-it.json:		"tab-value": "Valori separati da Tab",
./main/webapp/modules/core/langs/translation-it.json:		"valid-values": "Valori validi",
./main/webapp/modules/core/langs/translation-jp.json:		"change-value": "プリファレンスキーの値を変える",
./main/webapp/modules/core/langs/translation-jp.json:		"value": "値",
./main/webapp/modules/core/langs/translation-jp.json:		"cluster-values": "クラスタ内の値",
./main/webapp/modules/core/langs/translation-jp.json:		"cell-fields": "現在のセル:'value'と'recon'のフィールドを持つ",
./main/webapp/modules/core/langs/translation-jp.json:		"cell-value": "現在のセルの値:'cell.value'がショートカット",
./main/webapp/modules/core/langs/translation-jp.json:		"tab-value": "タブ区切り (TSV)で出力",
./main/webapp/modules/core/langs/translation-jp.json:		"valid-values": "有効な値",
./main/webapp/modules/core/langs/translation-default.json:		"change-value": "Change value of preference key",
./main/webapp/modules/core/langs/translation-default.json:		"value": "Value",
./main/webapp/modules/core/langs/translation-default.json:		"pref-key": "Preference key value:",
./main/webapp/modules/core/langs/translation-default.json:		"cluster-values": "Values in Cluster",
./main/webapp/modules/core/langs/translation-default.json:		"use-this-val": "Use this value",
./main/webapp/modules/core/langs/translation-default.json:		"browse-only-these": "Browse only these values",
./main/webapp/modules/core/langs/translation-default.json:		"cluster-descr": "This feature helps you find groups of different cell values that might be alternative representations of the same thing. For example, the two strings \"New York\" and \"new york\" are very likely to refer to the same concept and just have capitalization differences, and \"Gödel\" and \"Godel\" probably refer to the same person.",
./main/webapp/modules/core/langs/translation-default.json:		"cell-fields": "The current cell. It has a few fields: 'value' and 'recon'.",
./main/webapp/modules/core/langs/translation-default.json:		"cell-value": "The current cell's value. This is a shortcut for 'cell.value'.",
./main/webapp/modules/core/langs/translation-default.json:		"date-format": "For date/time values, use format",
./main/webapp/modules/core/langs/translation-default.json:		"tsv": "Tab-separated values (TSV)",
./main/webapp/modules/core/langs/translation-default.json:		"csv": "Comma-separated values (CSV)",
./main/webapp/modules/core/langs/translation-default.json:		"tab-value": "Tab-separated value",
./main/webapp/modules/core/langs/translation-default.json:		"comma-sep": "Comma-separated value",
./main/webapp/modules/core/langs/translation-default.json:		"sort-cell": "Sort cell values as",
./main/webapp/modules/core/langs/translation-default.json:		"valid-values": "Valid values",
./main/webapp/modules/core/langs/translation-default.json:		"enter-separator": "Enter separator to use between values",
./main/webapp/modules/core/langs/translation-default.json:		"what-separator": "What separator currently separates the values?",
./main/webapp/modules/core/langs/translation-default.json:		"split-cells": "Split multi-valued cells",
./main/webapp/modules/core/langs/translation-default.json:		"join-cells": "Join multi-valued cells",
./main/webapp/modules/core/langs/translation-default.json:		"contain-val": "(containing original cells' values)",
./main/webapp/modules/core/langs/translation-default.json:		"before-val": "before the cell's value",
./main/webapp/modules/core/langs/translation-default.json:		"spec-new-val": "Please specify the new value column's name.",
./main/webapp/modules/core/langs/translation-default.json:		"spec-separator": "Please specify the separator between original column names and cell values.",
./main/webapp/modules/core/langs/translation-default.json:		"sel-col-val": "Please select one key column and one value column that are different from one another.",
./main/webapp/modules/core/langs/translation-default.json:		"cannot-same": "If specified, the note column cannot be the same as the key column or the value column.",
./main/webapp/modules/core/langs/translation-default.json:		"columnize-col": "Columnize by key/value columns",
./main/webapp/modules/core/langs/translation-es.json:		"change-value": "Cambiar el valor de la llave de preferencia",
./main/webapp/modules/core/langs/translation-es.json:		"value": "Valor",
./main/webapp/modules/core/langs/translation-es.json:		"cluster-values": "Valores en la arupación",
./main/webapp/modules/core/langs/translation-es.json:		"cell-fields": "La celda actual. Tiene pocos campos: 'value' y 'recon'.",
./main/webapp/modules/core/langs/translation-es.json:		"cell-value": "El valor de la celda actual. Es una abreviación para 'cell.value'.",
./main/webapp/modules/core/langs/translation-es.json:		"tab-value": "Delimitado por tabulaciones",
./main/webapp/modules/core/langs/translation-es.json:		"valid-values": "Valores validos",
./main/webapp/modules/core/langs/translation-zh.json:        "change-value": "修改配置项的值",
./main/webapp/modules/core/langs/translation-zh.json:        "value": "值",
./main/webapp/modules/core/langs/translation-zh.json:        "cluster-values": "簇中值",
./main/webapp/modules/core/langs/translation-zh.json:        "cluster-descr": "This feature helps you find groups of different cell values that might be alternative representations of the same thing. For example, the two strings \"New York\" and \"new york\" are very likely to refer to the same concept and just have capitalization differences, and \"Gödel\" and \"Godel\" probably refer to the same person.",
./main/webapp/modules/core/langs/translation-zh.json:        "cell-fields": "当前的单元格. 它包含如下字段：'value'和'recon'。",
./main/webapp/modules/core/langs/translation-zh.json:        "cell-value": "当前单元格的值. 它是cell.value的简写.",
./main/webapp/modules/core/langs/translation-zh.json:        "tab-value": "以tab分隔的值",
./main/webapp/modules/core/langs/translation-zh.json:        "valid-values": "合法值",
./main/webapp/modules/core/langs/translation-fr.json:		"change-value": "Changer la valeur de la clé préférée",
./main/webapp/modules/core/langs/translation-fr.json:		"value": "Valeur",
./main/webapp/modules/core/langs/translation-fr.json:		"cluster-values": "Valeurs dans le groupe",
./main/webapp/modules/core/langs/translation-fr.json:		"cell-fields": "La cellule en cours. Elle a deux champs : 'value' et 'recon'.",
./main/webapp/modules/core/langs/translation-fr.json:		"cell-value": "La valeur de la cellule en cours. C’est un alias de 'cell.value'.",
./main/webapp/modules/core/langs/translation-fr.json:		"tab-value": "Valeurs séparées par des tabulations",
./main/webapp/modules/core/langs/translation-fr.json:		"valid-values": "Valeurs valides",
./main/webapp/modules/core/langs/translation-en.json:		"change-value": "Change value of preference key",
./main/webapp/modules/core/langs/translation-en.json:		"value": "Value",
./main/webapp/modules/core/langs/translation-en.json:		"pref-key": "Preference key value:",
./main/webapp/modules/core/langs/translation-en.json:		"cluster-values": "Values in Cluster",
./main/webapp/modules/core/langs/translation-en.json:		"use-this-val": "Use this value",
./main/webapp/modules/core/langs/translation-en.json:		"browse-only-these": "Browse only these values",
./main/webapp/modules/core/langs/translation-en.json:		"cluster-descr": "This feature helps you find groups of different cell values that might be alternative representations of the same thing. For example, the two strings \"New York\" and \"new york\" are very likely to refer to the same concept and just have capitalization differences, and \"Gödel\" and \"Godel\" probably refer to the same person.",
./main/webapp/modules/core/langs/translation-en.json:		"cell-fields": "The current cell. It has a few fields: 'value' and 'recon'.",
./main/webapp/modules/core/langs/translation-en.json:		"cell-value": "The current cell's value. This is a shortcut for 'cell.value'.",
./main/webapp/modules/core/langs/translation-en.json:		"date-format": "For date/time values, use format",
./main/webapp/modules/core/langs/translation-en.json:		"tsv": "Tab-separated values (TSV)",
./main/webapp/modules/core/langs/translation-en.json:		"csv": "Comma-separated values (CSV)",
./main/webapp/modules/core/langs/translation-en.json:		"tab-value": "Tab-separated value",
./main/webapp/modules/core/langs/translation-en.json:		"comma-sep": "Comma-separated value",
./main/webapp/modules/core/langs/translation-en.json:		"sort-cell": "Sort cell values as",
./main/webapp/modules/core/langs/translation-en.json:		"valid-values": "Valid values",
./main/webapp/modules/core/langs/translation-en.json:		"enter-separator": "Enter separator to use between values",
./main/webapp/modules/core/langs/translation-en.json:		"what-separator": "What separator currently separates the values?",
./main/webapp/modules/core/langs/translation-en.json:		"split-cells": "Split multi-valued cells",
./main/webapp/modules/core/langs/translation-en.json:		"join-cells": "Join multi-valued cells",
./main/webapp/modules/core/langs/translation-en.json:		"contain-val": "(containing original cells' values)",
./main/webapp/modules/core/langs/translation-en.json:		"before-val": "before the cell's value",
./main/webapp/modules/core/langs/translation-en.json:		"spec-new-val": "Please specify the new value column's name.",
./main/webapp/modules/core/langs/translation-en.json:		"spec-separator": "Please specify the separator between original column names and cell values.",
./main/webapp/modules/core/langs/translation-en.json:		"sel-col-val": "Please select one key column and one value column that are different from one another.",
./main/webapp/modules/core/langs/translation-en.json:		"cannot-same": "If specified, the note column cannot be the same as the key column or the value column.",
./main/webapp/modules/core/langs/translation-en.json:		"columnize-col": "Columnize by key/value columns",
./main/webapp/modules/core/externals/jquery.cookie.js: * Create a cookie with the given name and value and other optional parameters.
./main/webapp/modules/core/externals/jquery.cookie.js: * @example $.cookie('the_cookie', 'the_value');
./main/webapp/modules/core/externals/jquery.cookie.js: * @desc Set the value of a cookie.
./main/webapp/modules/core/externals/jquery.cookie.js: * @example $.cookie('the_cookie', 'the_value', { expires: 7, path: '/', domain: 'jquery.com', secure: true });
./main/webapp/modules/core/externals/jquery.cookie.js: * @example $.cookie('the_cookie', 'the_value');
./main/webapp/modules/core/externals/jquery.cookie.js: * @desc Delete a cookie by passing null as value. Keep in mind that you have to use the same path and domain
./main/webapp/modules/core/externals/jquery.cookie.js: * @param String value The value of the cookie.
./main/webapp/modules/core/externals/jquery.cookie.js: * @param Object options An object literal containing key/value pairs to provide optional cookie attributes.
./main/webapp/modules/core/externals/jquery.cookie.js: *                             If a negative value is specified (e.g. a date in the past), the cookie will be deleted.
./main/webapp/modules/core/externals/jquery.cookie.js: * @option String path The value of the path atribute of the cookie (default: path of page that created the cookie).
./main/webapp/modules/core/externals/jquery.cookie.js: * @option String domain The value of the domain attribute of the cookie (default: domain of page that created the cookie).
./main/webapp/modules/core/externals/jquery.cookie.js: * Get the value of a cookie with the given name.
./main/webapp/modules/core/externals/jquery.cookie.js: * @desc Get the value of a cookie.
./main/webapp/modules/core/externals/jquery.cookie.js: * @return The value of the cookie.
./main/webapp/modules/core/externals/jquery.cookie.js:jQuery.cookie = function(name, value, options) {
./main/webapp/modules/core/externals/jquery.cookie.js:    if (typeof value != 'undefined') { // name and value given, set cookie
./main/webapp/modules/core/externals/jquery.cookie.js:        if (value === null) {
./main/webapp/modules/core/externals/jquery.cookie.js:            value = '';
./main/webapp/modules/core/externals/jquery.cookie.js:        document.cookie = [name, '=', encodeURIComponent(value), expires, path, domain, secure].join('');
./main/webapp/modules/core/externals/jquery-1.11.1.js:		// Only deal with non-null/undefined values
./main/webapp/modules/core/externals/jquery-1.11.1.js:				// Don't bring in undefined values
./main/webapp/modules/core/externals/jquery-1.11.1.js:		var value,
./main/webapp/modules/core/externals/jquery-1.11.1.js:					value = callback.apply( obj[ i ], args );
./main/webapp/modules/core/externals/jquery-1.11.1.js:					if ( value === false ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:					value = callback.apply( obj[ i ], args );
./main/webapp/modules/core/externals/jquery-1.11.1.js:					if ( value === false ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:					value = callback.call( obj[ i ], i, obj[ i ] );
./main/webapp/modules/core/externals/jquery-1.11.1.js:					if ( value === false ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:					value = callback.call( obj[ i ], i, obj[ i ] );
./main/webapp/modules/core/externals/jquery-1.11.1.js:					if ( value === false ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:		var value,
./main/webapp/modules/core/externals/jquery-1.11.1.js:		// Go through the array, translating each of the items to their new values
./main/webapp/modules/core/externals/jquery-1.11.1.js:				value = callback( elems[ i ], i, arg );
./main/webapp/modules/core/externals/jquery-1.11.1.js:				if ( value != null ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:					ret.push( value );
./main/webapp/modules/core/externals/jquery-1.11.1.js:				value = callback( elems[ i ], i, arg );
./main/webapp/modules/core/externals/jquery-1.11.1.js:				if ( value != null ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:					ret.push( value );
./main/webapp/modules/core/externals/jquery-1.11.1.js:	// An unquoted value should be a CSS identifier http://www.w3.org/TR/css3-selectors/#attribute-selectors
./main/webapp/modules/core/externals/jquery-1.11.1.js:		// "Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]"
./main/webapp/modules/core/externals/jquery-1.11.1.js: * Create key-value caches of limited size
./main/webapp/modules/core/externals/jquery-1.11.1.js:	function cache( key, value ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:		return (cache[ key + " " ] = value);
./main/webapp/modules/core/externals/jquery-1.11.1.js: * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
./main/webapp/modules/core/externals/jquery-1.11.1.js:				return node && node.value === attrId;
./main/webapp/modules/core/externals/jquery-1.11.1.js:			// Boolean attributes and "value" are not treated correctly
./main/webapp/modules/core/externals/jquery-1.11.1.js:				rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
./main/webapp/modules/core/externals/jquery-1.11.1.js:				val.value :
./main/webapp/modules/core/externals/jquery-1.11.1.js: * Utility function for retrieving the text value of an array of DOM nodes
./main/webapp/modules/core/externals/jquery-1.11.1.js:			// Move the given value to match[3] whether quoted or unquoted
./main/webapp/modules/core/externals/jquery-1.11.1.js:		// is based solely on the element's language value
./main/webapp/modules/core/externals/jquery-1.11.1.js:		// The matching of C against the element's language value is performed case-insensitively.
./main/webapp/modules/core/externals/jquery-1.11.1.js:			// lang value must be a valid identifier
./main/webapp/modules/core/externals/jquery-1.11.1.js:				// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
./main/webapp/modules/core/externals/jquery-1.11.1.js:				value: matched,
./main/webapp/modules/core/externals/jquery-1.11.1.js:					value: matched,
./main/webapp/modules/core/externals/jquery-1.11.1.js:		selector += tokens[i].value;
./main/webapp/modules/core/externals/jquery-1.11.1.js:						tokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === " " ? "*" : "" })
./main/webapp/modules/core/externals/jquery-1.11.1.js:					// Discard index placeholder values to get only actual matches
./main/webapp/modules/core/externals/jquery-1.11.1.js:			selector = selector.slice( tokens.shift().value.length );
./main/webapp/modules/core/externals/jquery-1.11.1.js:// Use defaultValue in place of getAttribute("value")
./main/webapp/modules/core/externals/jquery-1.11.1.js:	div.firstChild.setAttribute( "value", "" );
./main/webapp/modules/core/externals/jquery-1.11.1.js:	return div.firstChild.getAttribute( "value" ) === "";
./main/webapp/modules/core/externals/jquery-1.11.1.js:	addHandle( "value", function( elem, name, isXML ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:					val.value :
./main/webapp/modules/core/externals/jquery-1.11.1.js: *	memory:			will keep track of previous values and will call any callback added
./main/webapp/modules/core/externals/jquery-1.11.1.js: *					values (like a Deferred)
./main/webapp/modules/core/externals/jquery-1.11.1.js:		// Last fire value (for non-forgettable lists)
./main/webapp/modules/core/externals/jquery-1.11.1.js:			// Update function for both resolve and progress values
./main/webapp/modules/core/externals/jquery-1.11.1.js:			updateFunc = function( i, contexts, values ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:				return function( value ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:					values[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;
./main/webapp/modules/core/externals/jquery-1.11.1.js:					if ( values === progressValues ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:						deferred.notifyWith( contexts, values );
./main/webapp/modules/core/externals/jquery-1.11.1.js:						deferred.resolveWith( contexts, values );
./main/webapp/modules/core/externals/jquery-1.11.1.js:	// An object can be passed to jQuery.data instead of a key/value pair; this gets
./main/webapp/modules/core/externals/jquery-1.11.1.js:	data: function( key, value ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:		// Gets all values
./main/webapp/modules/core/externals/jquery-1.11.1.js:		// Sets multiple values
./main/webapp/modules/core/externals/jquery-1.11.1.js:			// Sets one value
./main/webapp/modules/core/externals/jquery-1.11.1.js:				jQuery.data( this, key, value );
./main/webapp/modules/core/externals/jquery-1.11.1.js:			// Gets one value
./main/webapp/modules/core/externals/jquery-1.11.1.js:// Multifunctional method to get and set values of a collection
./main/webapp/modules/core/externals/jquery-1.11.1.js:// The value/s can optionally be executed if it's a function
./main/webapp/modules/core/externals/jquery-1.11.1.js:var access = jQuery.access = function( elems, fn, key, value, chainable, emptyGet, raw ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:	// Sets many values
./main/webapp/modules/core/externals/jquery-1.11.1.js:	// Sets one value
./main/webapp/modules/core/externals/jquery-1.11.1.js:	} else if ( value !== undefined ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:		if ( !jQuery.isFunction( value ) ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:				fn.call( elems, value );
./main/webapp/modules/core/externals/jquery-1.11.1.js:			// ...except when executing function values
./main/webapp/modules/core/externals/jquery-1.11.1.js:				fn = function( elem, key, value ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:					return bulk.call( jQuery( elem ), value );
./main/webapp/modules/core/externals/jquery-1.11.1.js:				fn( elems[i], key, raw ? value : value.call( elems[i], i, fn( elems[i], key ) ) );
./main/webapp/modules/core/externals/jquery-1.11.1.js:	// value of true after appended to the DOM (IE6/7)
./main/webapp/modules/core/externals/jquery-1.11.1.js:		// by a handler lower down the tree; reflect the correct value.
./main/webapp/modules/core/externals/jquery-1.11.1.js:		// a checked appearance if the defaultChecked value isn't also set
./main/webapp/modules/core/externals/jquery-1.11.1.js:		// IE6-7 get confused and end up setting the value of a cloned
./main/webapp/modules/core/externals/jquery-1.11.1.js:		if ( dest.value !== src.value ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:			dest.value = src.value;
./main/webapp/modules/core/externals/jquery-1.11.1.js:	// IE6-8 fails to set the defaultValue to the correct value when
./main/webapp/modules/core/externals/jquery-1.11.1.js:	text: function( value ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:		return access( this, function( value ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:			return value === undefined ?
./main/webapp/modules/core/externals/jquery-1.11.1.js:				this.empty().append( ( this[0] && this[0].ownerDocument || document ).createTextNode( value ) );
./main/webapp/modules/core/externals/jquery-1.11.1.js:		}, null, value, arguments.length );
./main/webapp/modules/core/externals/jquery-1.11.1.js:		return access( this, function( value ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:			if ( value === undefined ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:				( support.leadingWhitespace || !rleadingWhitespace.test( value ) ) &&
./main/webapp/modules/core/externals/jquery-1.11.1.js:				!wrapMap[ (rtagName.exec( value ) || [ "", "" ])[ 1 ].toLowerCase() ] ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:							elem.innerHTML = value;
./main/webapp/modules/core/externals/jquery-1.11.1.js:				this.empty().append( value );
./main/webapp/modules/core/externals/jquery-1.11.1.js:		}, null, value, arguments.length );
./main/webapp/modules/core/externals/jquery-1.11.1.js:			value = args[0],
./main/webapp/modules/core/externals/jquery-1.11.1.js:			isFunction = jQuery.isFunction( value );
./main/webapp/modules/core/externals/jquery-1.11.1.js:				( l > 1 && typeof value === "string" &&
./main/webapp/modules/core/externals/jquery-1.11.1.js:					!support.checkClone && rchecked.test( value ) ) ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js: * Try to determine the default display value of an element
./main/webapp/modules/core/externals/jquery-1.11.1.js:			// Chrome < 17 and Safari 5.0 uses "computed value" instead of "used value" for margin-right
./main/webapp/modules/core/externals/jquery-1.11.1.js:			// Safari 5.1.7 (at least) returns percentage for a larger set of values, but width seems to be reliably pixels
./main/webapp/modules/core/externals/jquery-1.11.1.js:			// this is against the CSSOM draft spec: http://dev.w3.org/csswg/cssom/#resolved-values
./main/webapp/modules/core/externals/jquery-1.11.1.js:				// Remember the original values
./main/webapp/modules/core/externals/jquery-1.11.1.js:				// Put in the new values to get a computed value out
./main/webapp/modules/core/externals/jquery-1.11.1.js:				// Revert the changed values
./main/webapp/modules/core/externals/jquery-1.11.1.js:		// IE returns zIndex value as an integer.
./main/webapp/modules/core/externals/jquery-1.11.1.js:			// Remember the original values
./main/webapp/modules/core/externals/jquery-1.11.1.js:			// Put in the new values to get a computed value out
./main/webapp/modules/core/externals/jquery-1.11.1.js:			// Revert the changed values
./main/webapp/modules/core/externals/jquery-1.11.1.js:		// IE returns zIndex value as an integer.
./main/webapp/modules/core/externals/jquery-1.11.1.js:		// Assume reasonable values in the absence of getComputedStyle
./main/webapp/modules/core/externals/jquery-1.11.1.js:			// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right
./main/webapp/modules/core/externals/jquery-1.11.1.js:	// Remember the old values, and insert the new ones
./main/webapp/modules/core/externals/jquery-1.11.1.js:	// Revert the old values
./main/webapp/modules/core/externals/jquery-1.11.1.js:	// see here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
./main/webapp/modules/core/externals/jquery-1.11.1.js:		values = [],
./main/webapp/modules/core/externals/jquery-1.11.1.js:		values[ index ] = jQuery._data( elem, "olddisplay" );
./main/webapp/modules/core/externals/jquery-1.11.1.js:			if ( !values[ index ] && display === "none" ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:				values[ index ] = jQuery._data( elem, "olddisplay", defaultDisplay(elem.nodeName) );
./main/webapp/modules/core/externals/jquery-1.11.1.js:			elem.style.display = show ? values[ index ] || "" : "none";
./main/webapp/modules/core/externals/jquery-1.11.1.js:function setPositiveNumber( elem, value, subtract ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:	var matches = rnumsplit.exec( value );
./main/webapp/modules/core/externals/jquery-1.11.1.js:		value;
./main/webapp/modules/core/externals/jquery-1.11.1.js:	// Start with offset property, which is equivalent to the border-box value
./main/webapp/modules/core/externals/jquery-1.11.1.js:	var valueIsBorderBox = true,
./main/webapp/modules/core/externals/jquery-1.11.1.js:		// we need the check for style in case a browser which returns unreliable values
./main/webapp/modules/core/externals/jquery-1.11.1.js:		valueIsBorderBox = isBorderBox && ( support.boxSizingReliable() || val === elem.style[ name ] );
./main/webapp/modules/core/externals/jquery-1.11.1.js:			valueIsBorderBox,
./main/webapp/modules/core/externals/jquery-1.11.1.js:	// setting or getting the value
./main/webapp/modules/core/externals/jquery-1.11.1.js:	style: function( elem, name, value, extra ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:		// Check if we're setting a value
./main/webapp/modules/core/externals/jquery-1.11.1.js:		if ( value !== undefined ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:			type = typeof value;
./main/webapp/modules/core/externals/jquery-1.11.1.js:			if ( type === "string" && (ret = rrelNum.exec( value )) ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:				value = ( ret[1] + 1 ) * ret[2] + parseFloat( jQuery.css( elem, name ) );
./main/webapp/modules/core/externals/jquery-1.11.1.js:			// Make sure that null and NaN values aren't set. See: #7116
./main/webapp/modules/core/externals/jquery-1.11.1.js:			if ( value == null || value !== value ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:				value += "px";
./main/webapp/modules/core/externals/jquery-1.11.1.js:			if ( !support.clearCloneStyle && value === "" && name.indexOf("background") === 0 ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:			// If a hook was provided, use that value, otherwise just set the specified value
./main/webapp/modules/core/externals/jquery-1.11.1.js:			if ( !hooks || !("set" in hooks) || (value = hooks.set( elem, value, extra )) !== undefined ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:				// Swallow errors from 'invalid' CSS values (#5509)
./main/webapp/modules/core/externals/jquery-1.11.1.js:					style[ name ] = value;
./main/webapp/modules/core/externals/jquery-1.11.1.js:			// If a hook was provided get the non-computed value from there
./main/webapp/modules/core/externals/jquery-1.11.1.js:			// Otherwise just get the value from the style object
./main/webapp/modules/core/externals/jquery-1.11.1.js:		// If a hook was provided get the computed value from there
./main/webapp/modules/core/externals/jquery-1.11.1.js:		// Otherwise, if a way to get the computed value exists, use that
./main/webapp/modules/core/externals/jquery-1.11.1.js:		//convert "normal" to computed value
./main/webapp/modules/core/externals/jquery-1.11.1.js:		set: function( elem, value, extra ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:			return setPositiveNumber( elem, value, extra ?
./main/webapp/modules/core/externals/jquery-1.11.1.js:		set: function( elem, value ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:				opacity = jQuery.isNumeric( value ) ? "alpha(opacity=" + value * 100 + ")" : "",
./main/webapp/modules/core/externals/jquery-1.11.1.js:			// if value === "", then remove inline opacity #12685
./main/webapp/modules/core/externals/jquery-1.11.1.js:			if ( ( value >= 1 || value === "" ) &&
./main/webapp/modules/core/externals/jquery-1.11.1.js:				if ( value === "" || currentStyle && !currentStyle.filter ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:			// otherwise, set new filter values
./main/webapp/modules/core/externals/jquery-1.11.1.js:			// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right
./main/webapp/modules/core/externals/jquery-1.11.1.js:		expand: function( value ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:				parts = typeof value === "string" ? value.split(" ") : [ value ];
./main/webapp/modules/core/externals/jquery-1.11.1.js:	css: function( name, value ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:		return access( this, function( elem, name, value ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:			return value !== undefined ?
./main/webapp/modules/core/externals/jquery-1.11.1.js:				jQuery.style( elem, name, value ) :
./main/webapp/modules/core/externals/jquery-1.11.1.js:		}, name, value, arguments.length > 1 );
./main/webapp/modules/core/externals/jquery-1.11.1.js:			// so, simple values such as "10px" are parsed to Float.
./main/webapp/modules/core/externals/jquery-1.11.1.js:			// complex values such as "rotate(1rad)" are returned as is.
./main/webapp/modules/core/externals/jquery-1.11.1.js:		"*": [ function( prop, value ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:			var tween = this.createTween( prop, value ),
./main/webapp/modules/core/externals/jquery-1.11.1.js:				parts = rfxnum.exec( value ),
./main/webapp/modules/core/externals/jquery-1.11.1.js:				// Starting value computation is required for potential unit mismatches
./main/webapp/modules/core/externals/jquery-1.11.1.js:	// if we include width, step value is 1 to do all cssExpand values,
./main/webapp/modules/core/externals/jquery-1.11.1.js:	// if we don't include width, step value is 2 to skip over Left and Right
./main/webapp/modules/core/externals/jquery-1.11.1.js:function createTween( value, prop, animation ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:		if ( (tween = collection[ index ].call( animation, prop, value )) ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:	var prop, value, toggle, tween, hooks, oldfire, display, checkDisplay,
./main/webapp/modules/core/externals/jquery-1.11.1.js:		// overflowY are set to the same value
./main/webapp/modules/core/externals/jquery-1.11.1.js:		value = props[ prop ];
./main/webapp/modules/core/externals/jquery-1.11.1.js:		if ( rfxtypes.exec( value ) ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:			toggle = toggle || value === "toggle";
./main/webapp/modules/core/externals/jquery-1.11.1.js:			if ( value === ( hidden ? "hide" : "show" ) ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:				if ( value === "show" && dataShow && dataShow[ prop ] !== undefined ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:		// Any non-fx value stops us from restoring the original display value
./main/webapp/modules/core/externals/jquery-1.11.1.js:	// If this is a noop like .hide().hide(), restore an overwritten display value
./main/webapp/modules/core/externals/jquery-1.11.1.js:	var index, name, easing, value, hooks;
./main/webapp/modules/core/externals/jquery-1.11.1.js:		value = props[ index ];
./main/webapp/modules/core/externals/jquery-1.11.1.js:		if ( jQuery.isArray( value ) ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:			easing = value[ 1 ];
./main/webapp/modules/core/externals/jquery-1.11.1.js:			value = props[ index ] = value[ 0 ];
./main/webapp/modules/core/externals/jquery-1.11.1.js:			props[ name ] = value;
./main/webapp/modules/core/externals/jquery-1.11.1.js:			value = hooks.expand( value );
./main/webapp/modules/core/externals/jquery-1.11.1.js:			for ( index in value ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:					props[ index ] = value[ index ];
./main/webapp/modules/core/externals/jquery-1.11.1.js:			// animate to the value specified
./main/webapp/modules/core/externals/jquery-1.11.1.js:	// Check the default checkbox/radio value ("" on WebKit; "on" elsewhere)
./main/webapp/modules/core/externals/jquery-1.11.1.js:	support.checkOn = !!input.value;
./main/webapp/modules/core/externals/jquery-1.11.1.js:	// Check if we can trust getAttribute("value")
./main/webapp/modules/core/externals/jquery-1.11.1.js:	input.setAttribute( "value", "" );
./main/webapp/modules/core/externals/jquery-1.11.1.js:	support.input = input.getAttribute( "value" ) === "";
./main/webapp/modules/core/externals/jquery-1.11.1.js:	// Check if an input maintains its value after becoming a radio
./main/webapp/modules/core/externals/jquery-1.11.1.js:	input.value = "t";
./main/webapp/modules/core/externals/jquery-1.11.1.js:	support.radioValue = input.value === "t";
./main/webapp/modules/core/externals/jquery-1.11.1.js:	val: function( value ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:				if ( hooks && "get" in hooks && (ret = hooks.get( elem, "value" )) !== undefined ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:				ret = elem.value;
./main/webapp/modules/core/externals/jquery-1.11.1.js:					// handle cases where value is null/undef or number
./main/webapp/modules/core/externals/jquery-1.11.1.js:		isFunction = jQuery.isFunction( value );
./main/webapp/modules/core/externals/jquery-1.11.1.js:				val = value.call( this, i, jQuery( this ).val() );
./main/webapp/modules/core/externals/jquery-1.11.1.js:				val = value;
./main/webapp/modules/core/externals/jquery-1.11.1.js:				val = jQuery.map( val, function( value ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:					return value == null ? "" : value + "";
./main/webapp/modules/core/externals/jquery-1.11.1.js:			if ( !hooks || !("set" in hooks) || hooks.set( this, val, "value" ) === undefined ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:				this.value = val;
./main/webapp/modules/core/externals/jquery-1.11.1.js:				var val = jQuery.find.attr( elem, "value" );
./main/webapp/modules/core/externals/jquery-1.11.1.js:				var value, option,
./main/webapp/modules/core/externals/jquery-1.11.1.js:					values = one ? null : [],
./main/webapp/modules/core/externals/jquery-1.11.1.js:						// Get the specific value for the option
./main/webapp/modules/core/externals/jquery-1.11.1.js:						value = jQuery( option ).val();
./main/webapp/modules/core/externals/jquery-1.11.1.js:							return value;
./main/webapp/modules/core/externals/jquery-1.11.1.js:						values.push( value );
./main/webapp/modules/core/externals/jquery-1.11.1.js:				return values;
./main/webapp/modules/core/externals/jquery-1.11.1.js:			set: function( elem, value ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:					values = jQuery.makeArray( value ),
./main/webapp/modules/core/externals/jquery-1.11.1.js:					if ( jQuery.inArray( jQuery.valHooks.option.get( option ), values ) >= 0 ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:				// Force browsers to behave consistently when non-matching value is set
./main/webapp/modules/core/externals/jquery-1.11.1.js:		set: function( elem, value ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:			if ( jQuery.isArray( value ) ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:				return ( elem.checked = jQuery.inArray( jQuery(elem).val(), value ) >= 0 );
./main/webapp/modules/core/externals/jquery-1.11.1.js:			// "" is returned instead of "on" if a value isn't specified
./main/webapp/modules/core/externals/jquery-1.11.1.js:			return elem.getAttribute("value") === null ? "on" : elem.value;
./main/webapp/modules/core/externals/jquery-1.11.1.js:	attr: function( name, value ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:		return access( this, jQuery.attr, name, value, arguments.length > 1 );
./main/webapp/modules/core/externals/jquery-1.11.1.js:	attr: function( elem, name, value ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:			return jQuery.prop( elem, name, value );
./main/webapp/modules/core/externals/jquery-1.11.1.js:		if ( value !== undefined ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:			if ( value === null ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:			} else if ( hooks && "set" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:				elem.setAttribute( name, value + "" );
./main/webapp/modules/core/externals/jquery-1.11.1.js:				return value;
./main/webapp/modules/core/externals/jquery-1.11.1.js:	removeAttr: function( elem, value ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:			attrNames = value && value.match( rnotwhite );
./main/webapp/modules/core/externals/jquery-1.11.1.js:			set: function( elem, value ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:				if ( !support.radioValue && value === "radio" && jQuery.nodeName(elem, "input") ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:					// Setting the type on a radio button after the value resets the value in IE6-9
./main/webapp/modules/core/externals/jquery-1.11.1.js:					// Reset value to default in case type is set after value during creation
./main/webapp/modules/core/externals/jquery-1.11.1.js:					var val = elem.value;
./main/webapp/modules/core/externals/jquery-1.11.1.js:					elem.setAttribute( "type", value );
./main/webapp/modules/core/externals/jquery-1.11.1.js:						elem.value = val;
./main/webapp/modules/core/externals/jquery-1.11.1.js:					return value;
./main/webapp/modules/core/externals/jquery-1.11.1.js:	set: function( elem, value, name ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:		if ( value === false ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:	jQuery.attrHooks.value = {
./main/webapp/modules/core/externals/jquery-1.11.1.js:		set: function( elem, value, name ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:				elem.defaultValue = value;
./main/webapp/modules/core/externals/jquery-1.11.1.js:				return nodeHook && nodeHook.set( elem, value, name );
./main/webapp/modules/core/externals/jquery-1.11.1.js:		set: function( elem, value, name ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:			ret.value = value += "";
./main/webapp/modules/core/externals/jquery-1.11.1.js:			if ( name === "value" || value === elem.getAttribute( name ) ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:				return value;
./main/webapp/modules/core/externals/jquery-1.11.1.js:	// Some attributes are constructed with empty-string values when not defined
./main/webapp/modules/core/externals/jquery-1.11.1.js:				return (ret = elem.getAttributeNode( name )) && ret.value !== "" ?
./main/webapp/modules/core/externals/jquery-1.11.1.js:					ret.value :
./main/webapp/modules/core/externals/jquery-1.11.1.js:	// Fixing value retrieval on a button requires this module
./main/webapp/modules/core/externals/jquery-1.11.1.js:				return ret.value;
./main/webapp/modules/core/externals/jquery-1.11.1.js:	// Setting to empty string throws an error as an invalid value
./main/webapp/modules/core/externals/jquery-1.11.1.js:		set: function( elem, value, name ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:			nodeHook.set( elem, value === "" ? false : value, name );
./main/webapp/modules/core/externals/jquery-1.11.1.js:			set: function( elem, value ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:				if ( value === "" ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:					return value;
./main/webapp/modules/core/externals/jquery-1.11.1.js:		set: function( elem, value ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:			return ( elem.style.cssText = value + "" );
./main/webapp/modules/core/externals/jquery-1.11.1.js:	prop: function( name, value ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:		return access( this, jQuery.prop, name, value, arguments.length > 1 );
./main/webapp/modules/core/externals/jquery-1.11.1.js:	prop: function( elem, name, value ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:		if ( value !== undefined ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:			return hooks && "set" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ?
./main/webapp/modules/core/externals/jquery-1.11.1.js:				( elem[ name ] = value );
./main/webapp/modules/core/externals/jquery-1.11.1.js:				// elem.tabIndex doesn't always return the correct value when it hasn't been explicitly set
./main/webapp/modules/core/externals/jquery-1.11.1.js:	addClass: function( value ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:			proceed = typeof value === "string" && value;
./main/webapp/modules/core/externals/jquery-1.11.1.js:		if ( jQuery.isFunction( value ) ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:				jQuery( this ).addClass( value.call( this, j, this.className ) );
./main/webapp/modules/core/externals/jquery-1.11.1.js:			classes = ( value || "" ).match( rnotwhite ) || [];
./main/webapp/modules/core/externals/jquery-1.11.1.js:	removeClass: function( value ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:			proceed = arguments.length === 0 || typeof value === "string" && value;
./main/webapp/modules/core/externals/jquery-1.11.1.js:		if ( jQuery.isFunction( value ) ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:				jQuery( this ).removeClass( value.call( this, j, this.className ) );
./main/webapp/modules/core/externals/jquery-1.11.1.js:			classes = ( value || "" ).match( rnotwhite ) || [];
./main/webapp/modules/core/externals/jquery-1.11.1.js:					finalValue = value ? jQuery.trim( cur ) : "";
./main/webapp/modules/core/externals/jquery-1.11.1.js:	toggleClass: function( value, stateVal ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:		var type = typeof value;
./main/webapp/modules/core/externals/jquery-1.11.1.js:			return stateVal ? this.addClass( value ) : this.removeClass( value );
./main/webapp/modules/core/externals/jquery-1.11.1.js:		if ( jQuery.isFunction( value ) ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:				jQuery( this ).toggleClass( value.call(this, i, this.className, stateVal), stateVal );
./main/webapp/modules/core/externals/jquery-1.11.1.js:					classNames = value.match( rnotwhite ) || [];
./main/webapp/modules/core/externals/jquery-1.11.1.js:				this.className = this.className || value === false ? "" : jQuery._data( this, "__className__" ) || "";
./main/webapp/modules/core/externals/jquery-1.11.1.js:				setRequestHeader: function( name, value ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:						requestHeaders[ name ] = value;
./main/webapp/modules/core/externals/jquery-1.11.1.js:					// If there is already a '_' parameter, set its value
./main/webapp/modules/core/externals/jquery-1.11.1.js:// key/values into a query string
./main/webapp/modules/core/externals/jquery-1.11.1.js:		add = function( key, value ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:			// If value is a function, invoke it and return its value
./main/webapp/modules/core/externals/jquery-1.11.1.js:			value = jQuery.isFunction( value ) ? value() : ( value == null ? "" : value );
./main/webapp/modules/core/externals/jquery-1.11.1.js:			s[ s.length ] = encodeURIComponent( key ) + "=" + encodeURIComponent( value );
./main/webapp/modules/core/externals/jquery-1.11.1.js:			add( this.name, this.value );
./main/webapp/modules/core/externals/jquery-1.11.1.js:						return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
./main/webapp/modules/core/externals/jquery-1.11.1.js:					{ name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
./main/webapp/modules/core/externals/jquery-1.11.1.js:						// request header to a null-value.
./main/webapp/modules/core/externals/jquery-1.11.1.js:						// To keep consistent with other XHR implementations, cast the value
./main/webapp/modules/core/externals/jquery-1.11.1.js:		// Get callback name, remembering preexisting value associated with it
./main/webapp/modules/core/externals/jquery-1.11.1.js:			// Restore preexisting value
./main/webapp/modules/core/externals/jquery-1.11.1.js:		jQuery.fn[ funcName ] = function( margin, value ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:				extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );
./main/webapp/modules/core/externals/jquery-1.11.1.js:			return access( this, function( elem, type, value ) {
./main/webapp/modules/core/externals/jquery-1.11.1.js:				return value === undefined ?
./main/webapp/modules/core/externals/jquery-1.11.1.js:					jQuery.style( elem, type, value, extra );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			var elem = $( this[ 0 ] ), position, value;
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:				// Ignore z-index if position is set to a value where z-index is ignored by the browser
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:					// we ignore the case of nested elements with an explicit value of 0
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:					value = parseInt( elem.css( "zIndex" ), 10 );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:					if ( !isNaN( value ) && value !== 0 ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:						return value;
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:	$.each( prototype, function( prop, value ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		if ( !$.isFunction( value ) ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			proxiedPrototype[ prop ] = value;
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:				returnValue = value.apply( this, arguments );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		value;
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			value = input[ inputIndex ][ key ];
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			if ( input[ inputIndex ].hasOwnProperty( key ) && value !== undefined ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:				if ( $.isPlainObject( value ) ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:						$.widget.extend( {}, target[ key ], value ) :
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:						$.widget.extend( {}, value );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:					target[ key ] = value;
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:	option: function( key, value ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:				if ( value === undefined ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:				curOption[ key ] = value;
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:				if ( value === undefined ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:				options[ key ] = value;
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:	_setOption: function( key, value ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		this.options[ key ] = value;
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:				.toggleClass( this.widgetFullName + "-disabled ui-state-disabled", !!value )
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:				.attr( "aria-disabled", value );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:	// if a value is missing or invalid, it will be converted to center
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:	_setOption: function(key, value) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			this.accept = $.isFunction(value) ? value : function(d) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:				return d.is(value);
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:function isNumber(value) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:	return !isNaN(parseInt(value, 10));
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:					// propagating resize, and updating values for each animation step
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:	_setOption: function(key, value){
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			this.options[ key ] = value;
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			this.widget().toggleClass( "ui-sortable-disabled", !!value );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		// handle negative values
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:	_setOption: function( key, value ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			// _activate() will handle invalid values and update this.options
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			this._activate( value );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			this._setupEvents( value );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		this._super( key, value );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		if ( key === "collapsible" && !value && this.options.active === false ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			if ( value ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:				.toggleClass( "ui-state-disabled", !!value );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		this.valueMethod = this.element[ isTextarea || isInput ? "val" : "text" ];
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:						this._value( this.term );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:					// search timeout should be triggered before the input value is changed
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:				this.previous = this._value();
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:					// use value to match what will end up in the input, if it was a key event
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:						this._value( item.value );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:					// Normally the input is populated with the item's value as the
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:					this.liveRegion.text( item.value );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:					this._value( item.value );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:				this.term = this._value();
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		// value when navigating through history, so we re-enable autocomplete
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:	_setOption: function( key, value ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		this._super( key, value );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		if ( key === "disabled" && value && this.xhr ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			// only search if the value has changed
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			if ( this.term !== this._value() ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:	search: function( value, event ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		value = value != null ? value : this._value();
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		// always save the actual value, not the one passed as an argument
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		this.term = this._value();
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		if ( value.length < this.options.minLength ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		return this._search( value );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:	_search: function( value ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		this.source( { term: value }, this._response() );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		if ( this.previous !== this._value() ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		if ( items.length && items[0].label && items[0].value ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:					value: item
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:				label: item.label || item.value,
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:				value: item.value || item.label
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			this._value( this.term );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:	_value: function() {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		return this.valueMethod.apply( this.element, arguments );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:	escapeRegex: function( value ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		return value.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&");
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		return $.grep( array, function(value) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			return matcher.test( value.label || value.value || value );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:	_setOption: function( key, value ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		this._super( key, value );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			if ( value ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:	_setOption: function( key, value ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			this.buttons.button( "option", key, value );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		this._super( key, value );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		shortYearCutoff: "+10", // Short year values < this are in the current century,
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			// string value starting with "+" for current year + value
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			function(value) { return (value === target ? null : value); }); // delete entry
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			function(value) { return (value === target ? null : value); }); // delete entry
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:	 * @param  value   any - the new value for the setting
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:	 *				(omit if above is an object or to retrieve a value)
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:	_optionDatepicker: function(target, name, value) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			settings[name] = value;
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			// reformat the old minDate/maxDate values if dateFormat changes and a new minDate/maxDate isn't provided
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:	_changeDatepicker: function(target, name, value) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		this._optionDatepicker(target, name, value);
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			input.value = "";
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			parseInt(select.options[select.selectedIndex].value,10);
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:	/* Parse a string value into a date object.
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:	 * @param  value string - the date in the above format
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:	 * @return  Date - the extracted date value or null if value is blank
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:	parseDate: function (format, value, settings) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		if (format == null || value == null) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		value = (typeof value === "object" ? value.toString() : value + "");
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		if (value === "") {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			// Extract a number from the string value
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:					num = value.substring(iValue).match(digits);
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			// Extract a name from the string value and convert to an index
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:					if (value.substr(iValue, name.length).toLowerCase() === name.toLowerCase()) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			// Confirm that a literal character matches the string value
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:				if (value.charAt(iValue) !== format.charAt(iFormat)) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		if (iValue < value.length){
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			extra = value.substr(iValue);
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:	/* Format a date object into a string value.
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:	 * @param  date Date - the date value to format
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			formatNumber = function(match, value, len) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:				var num = "" + value;
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			formatName = function(match, value, shortNames, longNames) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:				return (lookAhead(match) ? longNames[value] : shortNames[value]);
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:	/* Get a setting value, defaulting if necessary. */
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:	/* A date may be specified as an exact value or a relative one. */
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:					monthHtml += "<option value='" + month + "'" +
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:				determineYear = function(value) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:					var year = (value.match(/c[+\-].*/) ? drawYear + parseInt(value.substring(1), 10) :
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:						(value.match(/[+\-].*/) ? thisYear + parseInt(value, 10) :
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:						parseInt(value, 10)));
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		$.each( options, function( key, value ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			that._setOption( key, value );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:				resizableOptions[ key ] = value;
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:	_setOption: function( key, value ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:				.addClass( value );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		this._super( key, value );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:				label: "" + value
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			if ( isDraggable && !value ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			if ( !isDraggable && value ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			if ( isResizable && !value ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			if ( isResizable && typeof value === "string" ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:				uiDialog.resizable( "option", "handles", value );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			if ( !isResizable && value !== false ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		function escape( value ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			return value.replace( /[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&" );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:	_setOption: function( key, value ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:				.addClass( value.submenu );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		this._super( key, value );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		value: 0,
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		// Constrain initial value
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		this.oldValue = this.options.value = this._constrainedValue();
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:				// Only set static values, aria-valuenow and aria-valuemax are
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:				"aria-valuemin": this.min
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		this.valueDiv = $( "<div class='ui-progressbar-value ui-widget-header ui-corner-left'></div>" )
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			.removeAttr( "aria-valuemin" )
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			.removeAttr( "aria-valuemax" )
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			.removeAttr( "aria-valuenow" );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		this.valueDiv.remove();
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:	value: function( newValue ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			return this.options.value;
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		this.options.value = this._constrainedValue( newValue );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			newValue = this.options.value;
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		// sanitize value
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		// Ensure "value" option is set after other values (like max)
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		var value = options.value;
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		delete options.value;
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		this.options.value = this._constrainedValue( value );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:	_setOption: function( key, value ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			value = Math.max( this.min, value );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		this._super( key, value );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		return this.indeterminate ? 100 : 100 * ( this.options.value - this.min ) / ( this.options.max - this.min );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		var value = this.options.value,
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		this.valueDiv
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			.toggle( this.indeterminate || value > this.min )
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			.toggleClass( "ui-corner-right", value === this.options.max )
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			this.element.removeAttr( "aria-valuenow" );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:				this.overlayDiv = $( "<div class='ui-progressbar-overlay'></div>" ).appendTo( this.valueDiv );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:				"aria-valuemax": this.options.max,
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:				"aria-valuenow": value
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		if ( this.oldValue !== value ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			this.oldValue = value;
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		if ( value === this.options.max ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		value: 0,
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		values: null,
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		handleCount = ( options.values && options.values.length ) || 1;
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:				if ( !options.values ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:					options.values = [ this._valueMin(), this._valueMin() ];
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:				} else if ( options.values.length && options.values.length !== 2 ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:					options.values = [ options.values[0], options.values[0] ];
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:				} else if ( $.isArray( options.values ) ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:					options.values = options.values.slice(0);
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		distance = this._valueMax() - this._valueMin() + 1;
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			var thisDistance = Math.abs( normValue - that.values(i) );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:					(i === that._lastChangedValue || that.values(i) === o.min ))) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			valueTotal,
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			valueMouse;
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		valueTotal = this._valueMax() - this._valueMin();
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		valueMouse = this._valueMin() + percentMouse * valueTotal;
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		return this._trimAlignValue( valueMouse );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			value: this.value()
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		if ( this.options.values && this.options.values.length ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			uiHash.value = this.values( index );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			uiHash.values = this.values();
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		if ( this.options.values && this.options.values.length ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			otherVal = this.values( index ? 0 : 1 );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			if ( ( this.options.values.length === 2 && this.options.range === true ) &&
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			if ( newVal !== this.values( index ) ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:				newValues = this.values();
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:					value: newVal,
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:					values: newValues
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:				otherVal = this.values( index ? 0 : 1 );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:					this.values( index, newVal, true );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			if ( newVal !== this.value() ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:					value: newVal
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:					this.value( newVal );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			value: this.value()
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		if ( this.options.values && this.options.values.length ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			uiHash.value = this.values( index );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			uiHash.values = this.values();
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:				value: this.value()
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			if ( this.options.values && this.options.values.length ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:				uiHash.value = this.values( index );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:				uiHash.values = this.values();
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			//store the last changed value index for reference when handles overlap
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:	value: function( newValue ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			this.options.value = this._trimAlignValue( newValue );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		return this._value();
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:	values: function( index, newValue ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			this.options.values[ index ] = this._trimAlignValue( newValue );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:				vals = this.options.values;
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:				if ( this.options.values && this.options.values.length ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:					return this._values( index );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:					return this.value();
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			return this._values();
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:	_setOption: function( key, value ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			if ( value === "min" ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:				this.options.value = this._values( 0 );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:				this.options.values = null;
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			} else if ( value === "max" ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:				this.options.value = this._values( this.options.values.length-1 );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:				this.options.values = null;
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		if ( $.isArray( this.options.values ) ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			valsLength = this.options.values.length;
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			case "value":
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			case "values":
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:	//internal value getter
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:	// _value() returns value trimmed by min and max, aligned by step
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:	_value: function() {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		var val = this.options.value;
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:	//internal values getter
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:	// _values() returns array of values trimmed by min and max, aligned by step
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:	// _values( index ) returns single value trimmed by min and max, aligned by step
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:	_values: function( index ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			val = this.options.values[ index ];
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		} else if ( this.options.values && this.options.values.length ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			vals = this.options.values.slice();
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:	// returns the step-aligned value that val is closest to, between (inclusive) min and max
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		if ( val <= this._valueMin() ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			return this._valueMin();
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		if ( val >= this._valueMax() ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			return this._valueMax();
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			valModStep = (val - this._valueMin()) % step,
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		// the final value to 5 digits after the decimal point (see #4124)
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:	_valueMin: function() {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:	_valueMax: function() {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		var lastValPercent, valPercent, value, valueMin, valueMax,
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		if ( this.options.values && this.options.values.length ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:				valPercent = ( that.values(i) - that._valueMin() ) / ( that._valueMax() - that._valueMin() ) * 100;
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			value = this.value();
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			valueMin = this._valueMin();
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			valueMax = this._valueMax();
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			valPercent = ( valueMax !== valueMin ) ?
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:					( value - valueMin ) / ( valueMax - valueMin ) * 100 :
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			if ( this.options.values && this.options.values.length ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:				curVal = newVal = this.values( index );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:				curVal = newVal = this.value();
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:					newVal = this._valueMin();
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:					newVal = this._valueMax();
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:					newVal = this._trimAlignValue( curVal + ( (this._valueMax() - this._valueMin()) / numPages ) );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:					newVal = this._trimAlignValue( curVal - ( (this._valueMax() - this._valueMin()) / numPages ) );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:					if ( curVal === this._valueMax() ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:					if ( curVal === this._valueMin() ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		// handle string values that need to be parsed
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		// format the value, but don't constrain
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		this._value( this.element.val(), true );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		// value when navigating through history, so we re-enable autocomplete
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			var value = element.attr( option );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			if ( value !== undefined && value.length ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:				options[ option ] = value;
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			// then we need to set this.previous based on the value before spinning.
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		var value = this.value() || 0;
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		value = this._adjustValue( value + step * this._increment( this.counter ) );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		if ( !this.spinning || this._trigger( "spin", event, { value: value } ) !== false) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			this._value( value );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:	_adjustValue: function( value ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		aboveMin = value - base;
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		value = base + aboveMin;
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		value = parseFloat( value.toFixed( this._precision() ) );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		// clamp the value
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		if ( options.max !== null && value > options.max) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		if ( options.min !== null && value < options.min ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		return value;
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:	_setOption: function( key, value ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			this.options[ key ] = value;
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			if ( typeof value === "string" ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:				value = this._parse( value );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:				.addClass( value.up );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:				.addClass( value.down );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		this._super( key, value );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			if ( value ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		this._value( this.element.val() );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:	_format: function( value ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		if ( value === "" ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			Globalize.format( value, this.options.numberFormat, this.options.culture ) :
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			value;
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			"aria-valuemin": this.options.min,
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			"aria-valuemax": this.options.max,
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			// TODO: what should we do with values that can't be parsed?
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			"aria-valuenow": this._parse( this.element.val() )
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:	// update the value without triggering change
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:	_value: function( value, allowAny ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		if ( value !== "" ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			parsed = this._parse( value );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:				value = this._format( parsed );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		this.element.val( value );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			.removeAttr( "aria-valuemin" )
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			.removeAttr( "aria-valuemax" )
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			.removeAttr( "aria-valuenow" );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:	value: function( newVal ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		modifier( this._value ).call( this, newVal );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:	_setOption: function( key, value ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			// _activate() will handle invalid values and update this.options
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			this._activate( value );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			this._setupDisabled( value );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		this._super( key, value);
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			this.element.toggleClass( "ui-tabs-collapsible", value );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			if ( !value && this.options.active === false ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			this._setupEvents( value );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			this._setupHeightStyle( value );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:	_setOption: function( key, value ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			this[ value ? "_disable" : "_enable" ]();
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			this.options[ key ] = value;
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		this._super( key, value );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:				// bubbling, so we set it back to the previous value. (#8740)
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:function clamp( value, prop, allowEmpty ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:	if ( value == null ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:	value = type.floor ? ~~value : parseFloat( value );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:	// IE will pass in empty strings as value for alpha,
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:	if ( isNaN( value ) ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		// we add mod before modding to make sure that negatives values
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		return (value + type.mod) % type.mod;
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:	return 0 > value ? 0 : type.max < value ? type.max : value;
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			values = match && parser.parse( match ),
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		if ( values ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			parsed = inst[ spaceName ]( values );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			// if null, don't override start value
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:	color.fn[ spaceName ] = function( value ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		if ( value === undefined ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			type = jQuery.type( value ),
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			arr = ( type === "array" || type === "object" ) ? value : arguments,
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		color.fn[ key ] = function( value ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			var vtype = jQuery.type( value ),
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:				value = value.call( this, cur );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:				vtype = jQuery.type( value );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			if ( value == null && prop.empty ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:				match = rplusequals.exec( value );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:					value = cur + parseFloat( match[ 2 ] ) * ( match[ 1 ] === "+" ? 1 : -1 );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			local[ prop.idx ] = value;
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			set: function( elem, value ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:				if ( value !== "transparent" && ( jQuery.type( value ) !== "string" || ( parsed = stringParse( value ) ) ) ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:					value = color( parsed || value );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:					if ( !support.rgba && value._rgba[ 3 ] !== 1 ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:						value = value.blend( backgroundColor && backgroundColor !== "transparent" ?
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:					value = value.toRgbaString();
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:					elem.style[ hook ] = value;
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:					// wrapped to prevent IE from throwing errors on "invalid" values like 'auto' or 'inherit'
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:	expand: function( value ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:			expanded[ "border" + part + "Color" ] = value;
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		name, value;
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		value = newStyle[ name ];
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		if ( oldStyle[ name ] !== value ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:				if ( $.fx.step[ name ] || !isNaN( parseFloat( value ) ) ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:					diff[ name ] = value;
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:$.effects.animateClass = function( value, duration, easing, callback ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:				if ( value[ action ] ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:					animated[ action + "Class" ]( value[ action ] );
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:				// jQuery 1.6.2 incorrectly returns undefined for any falsy value.
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:				// empty string since it's likely to be a more common value...
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:	// Translates a [top,left] array into a baseline value
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:	setTransition: function( element, list, factor, value ) {
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		value = value || {};
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:				value[ x ] = unit[ 0 ] * factor + unit[ 1 ];
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:		return value;
./main/webapp/modules/core/externals/jquery-ui/jquery-ui-1.10.3.custom.js:							// if original was "auto", recalculate the new value from wrapper
./main/webapp/modules/core/externals/jquery-ui/css/ui-lightness/jquery-ui-1.10.3.custom.css:.ui-progressbar .ui-progressbar-value {
./main/webapp/modules/core/externals/jquery-ui/css/ui-lightness/jquery-ui-1.10.3.custom.css:.ui-progressbar-indeterminate .ui-progressbar-value {
./main/webapp/modules/core/externals/underscore-min.js:!function(){var n=this,t=n._,r={},e=Array.prototype,u=Object.prototype,i=Function.prototype,a=e.push,o=e.slice,c=e.concat,l=u.toString,f=u.hasOwnProperty,s=e.forEach,p=e.map,v=e.reduce,h=e.reduceRight,d=e.filter,g=e.every,m=e.some,y=e.indexOf,b=e.lastIndexOf,x=Array.isArray,_=Object.keys,w=i.bind,j=function(n){return n instanceof j?n:this instanceof j?(this._wrapped=n,void 0):new j(n)};"undefined"!=typeof exports?("undefined"!=typeof module&&module.exports&&(exports=module.exports=j),exports._=j):n._=j,j.VERSION="1.5.1";var A=j.each=j.forEach=function(n,t,e){if(null!=n)if(s&&n.forEach===s)n.forEach(t,e);else if(n.length===+n.length){for(var u=0,i=n.length;i>u;u++)if(t.call(e,n[u],u,n)===r)return}else for(var a in n)if(j.has(n,a)&&t.call(e,n[a],a,n)===r)return};j.map=j.collect=function(n,t,r){var e=[];return null==n?e:p&&n.map===p?n.map(t,r):(A(n,function(n,u,i){e.push(t.call(r,n,u,i))}),e)};var E="Reduce of empty array with no initial value";j.reduce=j.foldl=j.inject=function(n,t,r,e){var u=arguments.length>2;if(null==n&&(n=[]),v&&n.reduce===v)return e&&(t=j.bind(t,e)),u?n.reduce(t,r):n.reduce(t);if(A(n,function(n,i,a){u?r=t.call(e,r,n,i,a):(r=n,u=!0)}),!u)throw new TypeError(E);return r},j.reduceRight=j.foldr=function(n,t,r,e){var u=arguments.length>2;if(null==n&&(n=[]),h&&n.reduceRight===h)return e&&(t=j.bind(t,e)),u?n.reduceRight(t,r):n.reduceRight(t);var i=n.length;if(i!==+i){var a=j.keys(n);i=a.length}if(A(n,function(o,c,l){c=a?a[--i]:--i,u?r=t.call(e,r,n[c],c,l):(r=n[c],u=!0)}),!u)throw new TypeError(E);return r},j.find=j.detect=function(n,t,r){var e;return O(n,function(n,u,i){return t.call(r,n,u,i)?(e=n,!0):void 0}),e},j.filter=j.select=function(n,t,r){var e=[];return null==n?e:d&&n.filter===d?n.filter(t,r):(A(n,function(n,u,i){t.call(r,n,u,i)&&e.push(n)}),e)},j.reject=function(n,t,r){return j.filter(n,function(n,e,u){return!t.call(r,n,e,u)},r)},j.every=j.all=function(n,t,e){t||(t=j.identity);var u=!0;return null==n?u:g&&n.every===g?n.every(t,e):(A(n,function(n,i,a){return(u=u&&t.call(e,n,i,a))?void 0:r}),!!u)};var O=j.some=j.any=function(n,t,e){t||(t=j.identity);var u=!1;return null==n?u:m&&n.some===m?n.some(t,e):(A(n,function(n,i,a){return u||(u=t.call(e,n,i,a))?r:void 0}),!!u)};j.contains=j.include=function(n,t){return null==n?!1:y&&n.indexOf===y?n.indexOf(t)!=-1:O(n,function(n){return n===t})},j.invoke=function(n,t){var r=o.call(arguments,2),e=j.isFunction(t);return j.map(n,function(n){return(e?t:n[t]).apply(n,r)})},j.pluck=function(n,t){return j.map(n,function(n){return n[t]})},j.where=function(n,t,r){return j.isEmpty(t)?r?void 0:[]:j[r?"find":"filter"](n,function(n){for(var r in t)if(t[r]!==n[r])return!1;return!0})},j.findWhere=function(n,t){return j.where(n,t,!0)},j.max=function(n,t,r){if(!t&&j.isArray(n)&&n[0]===+n[0]&&n.length<65535)return Math.max.apply(Math,n);if(!t&&j.isEmpty(n))return-1/0;var e={computed:-1/0,value:-1/0};return A(n,function(n,u,i){var a=t?t.call(r,n,u,i):n;a>e.computed&&(e={value:n,computed:a})}),e.value},j.min=function(n,t,r){if(!t&&j.isArray(n)&&n[0]===+n[0]&&n.length<65535)return Math.min.apply(Math,n);if(!t&&j.isEmpty(n))return 1/0;var e={computed:1/0,value:1/0};return A(n,function(n,u,i){var a=t?t.call(r,n,u,i):n;a<e.computed&&(e={value:n,computed:a})}),e.value},j.shuffle=function(n){var t,r=0,e=[];return A(n,function(n){t=j.random(r++),e[r-1]=e[t],e[t]=n}),e};var F=function(n){return j.isFunction(n)?n:function(t){return t[n]}};j.sortBy=function(n,t,r){var e=F(t);return j.pluck(j.map(n,function(n,t,u){return{value:n,index:t,criteria:e.call(r,n,t,u)}}).sort(function(n,t){var r=n.criteria,e=t.criteria;if(r!==e){if(r>e||r===void 0)return 1;if(e>r||e===void 0)return-1}return n.index<t.index?-1:1}),"value")};var k=function(n,t,r,e){var u={},i=F(null==t?j.identity:t);return A(n,function(t,a){var o=i.call(r,t,a,n);e(u,o,t)}),u};j.groupBy=function(n,t,r){return k(n,t,r,function(n,t,r){(j.has(n,t)?n[t]:n[t]=[]).push(r)})},j.countBy=function(n,t,r){return k(n,t,r,function(n,t){j.has(n,t)||(n[t]=0),n[t]++})},j.sortedIndex=function(n,t,r,e){r=null==r?j.identity:F(r);for(var u=r.call(e,t),i=0,a=n.length;a>i;){var o=i+a>>>1;r.call(e,n[o])<u?i=o+1:a=o}return i},j.toArray=function(n){return n?j.isArray(n)?o.call(n):n.length===+n.length?j.map(n,j.identity):j.values(n):[]},j.size=function(n){return null==n?0:n.length===+n.length?n.length:j.keys(n).length},j.first=j.head=j.take=function(n,t,r){return null==n?void 0:null==t||r?n[0]:o.call(n,0,t)},j.initial=function(n,t,r){return o.call(n,0,n.length-(null==t||r?1:t))},j.last=function(n,t,r){return null==n?void 0:null==t||r?n[n.length-1]:o.call(n,Math.max(n.length-t,0))},j.rest=j.tail=j.drop=function(n,t,r){return o.call(n,null==t||r?1:t)},j.compact=function(n){return j.filter(n,j.identity)};var R=function(n,t,r){return t&&j.every(n,j.isArray)?c.apply(r,n):(A(n,function(n){j.isArray(n)||j.isArguments(n)?t?a.apply(r,n):R(n,t,r):r.push(n)}),r)};j.flatten=function(n,t){return R(n,t,[])},j.without=function(n){return j.difference(n,o.call(arguments,1))},j.uniq=j.unique=function(n,t,r,e){j.isFunction(t)&&(e=r,r=t,t=!1);var u=r?j.map(n,r,e):n,i=[],a=[];return A(u,function(r,e){(t?e&&a[a.length-1]===r:j.contains(a,r))||(a.push(r),i.push(n[e]))}),i},j.union=function(){return j.uniq(j.flatten(arguments,!0))},j.intersection=function(n){var t=o.call(arguments,1);return j.filter(j.uniq(n),function(n){return j.every(t,function(t){return j.indexOf(t,n)>=0})})},j.difference=function(n){var t=c.apply(e,o.call(arguments,1));return j.filter(n,function(n){return!j.contains(t,n)})},j.zip=function(){for(var n=j.max(j.pluck(arguments,"length").concat(0)),t=new Array(n),r=0;n>r;r++)t[r]=j.pluck(arguments,""+r);return t},j.object=function(n,t){if(null==n)return{};for(var r={},e=0,u=n.length;u>e;e++)t?r[n[e]]=t[e]:r[n[e][0]]=n[e][1];return r},j.indexOf=function(n,t,r){if(null==n)return-1;var e=0,u=n.length;if(r){if("number"!=typeof r)return e=j.sortedIndex(n,t),n[e]===t?e:-1;e=0>r?Math.max(0,u+r):r}if(y&&n.indexOf===y)return n.indexOf(t,r);for(;u>e;e++)if(n[e]===t)return e;return-1},j.lastIndexOf=function(n,t,r){if(null==n)return-1;var e=null!=r;if(b&&n.lastIndexOf===b)return e?n.lastIndexOf(t,r):n.lastIndexOf(t);for(var u=e?r:n.length;u--;)if(n[u]===t)return u;return-1},j.range=function(n,t,r){arguments.length<=1&&(t=n||0,n=0),r=arguments[2]||1;for(var e=Math.max(Math.ceil((t-n)/r),0),u=0,i=new Array(e);e>u;)i[u++]=n,n+=r;return i};var M=function(){};j.bind=function(n,t){var r,e;if(w&&n.bind===w)return w.apply(n,o.call(arguments,1));if(!j.isFunction(n))throw new TypeError;return r=o.call(arguments,2),e=function(){if(!(this instanceof e))return n.apply(t,r.concat(o.call(arguments)));M.prototype=n.prototype;var u=new M;M.prototype=null;var i=n.apply(u,r.concat(o.call(arguments)));return Object(i)===i?i:u}},j.partial=function(n){var t=o.call(arguments,1);return function(){return n.apply(this,t.concat(o.call(arguments)))}},j.bindAll=function(n){var t=o.call(arguments,1);if(0===t.length)throw new Error("bindAll must be passed function names");return A(t,function(t){n[t]=j.bind(n[t],n)}),n},j.memoize=function(n,t){var r={};return t||(t=j.identity),function(){var e=t.apply(this,arguments);return j.has(r,e)?r[e]:r[e]=n.apply(this,arguments)}},j.delay=function(n,t){var r=o.call(arguments,2);return setTimeout(function(){return n.apply(null,r)},t)},j.defer=function(n){return j.delay.apply(j,[n,1].concat(o.call(arguments,1)))},j.throttle=function(n,t,r){var e,u,i,a=null,o=0;r||(r={});var c=function(){o=r.leading===!1?0:new Date,a=null,i=n.apply(e,u)};return function(){var l=new Date;o||r.leading!==!1||(o=l);var f=t-(l-o);return e=this,u=arguments,0>=f?(clearTimeout(a),a=null,o=l,i=n.apply(e,u)):a||r.trailing===!1||(a=setTimeout(c,f)),i}},j.debounce=function(n,t,r){var e,u=null;return function(){var i=this,a=arguments,o=function(){u=null,r||(e=n.apply(i,a))},c=r&&!u;return clearTimeout(u),u=setTimeout(o,t),c&&(e=n.apply(i,a)),e}},j.once=function(n){var t,r=!1;return function(){return r?t:(r=!0,t=n.apply(this,arguments),n=null,t)}},j.wrap=function(n,t){return function(){var r=[n];return a.apply(r,arguments),t.apply(this,r)}},j.compose=function(){var n=arguments;return function(){for(var t=arguments,r=n.length-1;r>=0;r--)t=[n[r].apply(this,t)];return t[0]}},j.after=function(n,t){return function(){return--n<1?t.apply(this,arguments):void 0}},j.keys=_||function(n){if(n!==Object(n))throw new TypeError("Invalid object");var t=[];for(var r in n)j.has(n,r)&&t.push(r);return t},j.values=function(n){var t=[];for(var r in n)j.has(n,r)&&t.push(n[r]);return t},j.pairs=function(n){var t=[];for(var r in n)j.has(n,r)&&t.push([r,n[r]]);return t},j.invert=function(n){var t={};for(var r in n)j.has(n,r)&&(t[n[r]]=r);return t},j.functions=j.methods=function(n){var t=[];for(var r in n)j.isFunction(n[r])&&t.push(r);return t.sort()},j.extend=function(n){return A(o.call(arguments,1),function(t){if(t)for(var r in t)n[r]=t[r]}),n},j.pick=function(n){var t={},r=c.apply(e,o.call(arguments,1));return A(r,function(r){r in n&&(t[r]=n[r])}),t},j.omit=function(n){var t={},r=c.apply(e,o.call(arguments,1));for(var u in n)j.contains(r,u)||(t[u]=n[u]);return t},j.defaults=function(n){return A(o.call(arguments,1),function(t){if(t)for(var r in t)n[r]===void 0&&(n[r]=t[r])}),n},j.clone=function(n){return j.isObject(n)?j.isArray(n)?n.slice():j.extend({},n):n},j.tap=function(n,t){return t(n),n};var S=function(n,t,r,e){if(n===t)return 0!==n||1/n==1/t;if(null==n||null==t)return n===t;n instanceof j&&(n=n._wrapped),t instanceof j&&(t=t._wrapped);var u=l.call(n);if(u!=l.call(t))return!1;switch(u){case"[object String]":return n==String(t);case"[object Number]":return n!=+n?t!=+t:0==n?1/n==1/t:n==+t;case"[object Date]":case"[object Boolean]":return+n==+t;case"[object RegExp]":return n.source==t.source&&n.global==t.global&&n.multiline==t.multiline&&n.ignoreCase==t.ignoreCase}if("object"!=typeof n||"object"!=typeof t)return!1;for(var i=r.length;i--;)if(r[i]==n)return e[i]==t;var a=n.constructor,o=t.constructor;if(a!==o&&!(j.isFunction(a)&&a instanceof a&&j.isFunction(o)&&o instanceof o))return!1;r.push(n),e.push(t);var c=0,f=!0;if("[object Array]"==u){if(c=n.length,f=c==t.length)for(;c--&&(f=S(n[c],t[c],r,e)););}else{for(var s in n)if(j.has(n,s)&&(c++,!(f=j.has(t,s)&&S(n[s],t[s],r,e))))break;if(f){for(s in t)if(j.has(t,s)&&!c--)break;f=!c}}return r.pop(),e.pop(),f};j.isEqual=function(n,t){return S(n,t,[],[])},j.isEmpty=function(n){if(null==n)return!0;if(j.isArray(n)||j.isString(n))return 0===n.length;for(var t in n)if(j.has(n,t))return!1;return!0},j.isElement=function(n){return!(!n||1!==n.nodeType)},j.isArray=x||function(n){return"[object Array]"==l.call(n)},j.isObject=function(n){return n===Object(n)},A(["Arguments","Function","String","Number","Date","RegExp"],function(n){j["is"+n]=function(t){return l.call(t)=="[object "+n+"]"}}),j.isArguments(arguments)||(j.isArguments=function(n){return!(!n||!j.has(n,"callee"))}),"function"!=typeof/./&&(j.isFunction=function(n){return"function"==typeof n}),j.isFinite=function(n){return isFinite(n)&&!isNaN(parseFloat(n))},j.isNaN=function(n){return j.isNumber(n)&&n!=+n},j.isBoolean=function(n){return n===!0||n===!1||"[object Boolean]"==l.call(n)},j.isNull=function(n){return null===n},j.isUndefined=function(n){return n===void 0},j.has=function(n,t){return f.call(n,t)},j.noConflict=function(){return n._=t,this},j.identity=function(n){return n},j.times=function(n,t,r){for(var e=Array(Math.max(0,n)),u=0;n>u;u++)e[u]=t.call(r,u);return e},j.random=function(n,t){return null==t&&(t=n,n=0),n+Math.floor(Math.random()*(t-n+1))};var I={escape:{"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","/":"&#x2F;"}};I.unescape=j.invert(I.escape);var T={escape:new RegExp("["+j.keys(I.escape).join("")+"]","g"),unescape:new RegExp("("+j.keys(I.unescape).join("|")+")","g")};j.each(["escape","unescape"],function(n){j[n]=function(t){return null==t?"":(""+t).replace(T[n],function(t){return I[n][t]})}}),j.result=function(n,t){if(null==n)return void 0;var r=n[t];return j.isFunction(r)?r.call(n):r},j.mixin=function(n){A(j.functions(n),function(t){var r=j[t]=n[t];j.prototype[t]=function(){var n=[this._wrapped];return a.apply(n,arguments),z.call(this,r.apply(j,n))}})};var N=0;j.uniqueId=function(n){var t=++N+"";return n?n+t:t},j.templateSettings={evaluate:/<%([\s\S]+?)%>/g,interpolate:/<%=([\s\S]+?)%>/g,escape:/<%-([\s\S]+?)%>/g};var q=/(.)^/,B={"'":"'","\\":"\\","\r":"r","\n":"n","	":"t","\u2028":"u2028","\u2029":"u2029"},D=/\\|'|\r|\n|\t|\u2028|\u2029/g;j.template=function(n,t,r){var e;r=j.defaults({},r,j.templateSettings);var u=new RegExp([(r.escape||q).source,(r.interpolate||q).source,(r.evaluate||q).source].join("|")+"|$","g"),i=0,a="__p+='";n.replace(u,function(t,r,e,u,o){return a+=n.slice(i,o).replace(D,function(n){return"\\"+B[n]}),r&&(a+="'+\n((__t=("+r+"))==null?'':_.escape(__t))+\n'"),e&&(a+="'+\n((__t=("+e+"))==null?'':__t)+\n'"),u&&(a+="';\n"+u+"\n__p+='"),i=o+t.length,t}),a+="';\n",r.variable||(a="with(obj||{}){\n"+a+"}\n"),a="var __t,__p='',__j=Array.prototype.join,"+"print=function(){__p+=__j.call(arguments,'');};\n"+a+"return __p;\n";try{e=new Function(r.variable||"obj","_",a)}catch(o){throw o.source=a,o}if(t)return e(t,j);var c=function(n){return e.call(this,n,j)};return c.source="function("+(r.variable||"obj")+"){\n"+a+"}",c},j.chain=function(n){return j(n).chain()};var z=function(n){return this._chain?j(n).chain():n};j.mixin(j),A(["pop","push","reverse","shift","sort","splice","unshift"],function(n){var t=e[n];j.prototype[n]=function(){var r=this._wrapped;return t.apply(r,arguments),"shift"!=n&&"splice"!=n||0!==r.length||delete r[0],z.call(this,r)}}),A(["concat","join","slice"],function(n){var t=e[n];j.prototype[n]=function(){return z.call(this,t.apply(this._wrapped,arguments))}}),j.extend(j.prototype,{chain:function(){return this._chain=!0,this},value:function(){return this._wrapped}})}.call(this);
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:    // override to be notified on focus and input has a value
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:    trackEvent: function(category, action, label, value) {
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:        value: value
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:      //console.log("trackEvent", category, action, label, value);
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:     * Parse input string into actual query string and structured name:value list
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:        // only pick out valid name:value pairs
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:        // a name:value is valid
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:        // 3. value does not have any spaces OR value is double quoted
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:          // parse out additional filters in input value
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:          data.prefix = val;  // keep track of prefix to match up response with input value
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:      // Enable structured input name:value pairs that get appended to the search filters
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:      // along with the input value
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:     * Get a value from an object multiple levels deep.
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:     get_value_by_keys: function(obj, var_args) {
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:     * Utility method to get values of an object specified by one or more
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:     *   get_value(my_dict, ['foo', 'bar'])
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:     * a null or undefined value in the object.
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:     * If resolved_search_values is TRUE, this will flatten search api
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:     * values that are arrays of entities ({mid, name})
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:    get_value: function(obj, path, resolve_search_values) {
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:      var v =  $.suggest.suggest.get_value_by_keys(obj, path);
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:      if (resolve_search_values) {
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:        var values = [];
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:        $.each(v, function(i, value) {
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:          if ($.type(value) === 'object') {
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:            if (value['name'] != null) {
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:              value = value['name'];
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:            else if (value['id'] || value['mid']) {
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:              value = value['id'] || value['mid'];
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:            else if (value['value'] != null) {
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:              // For cvts, value may contain other useful info (like date, etc.)
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:              $.each(value, function(k, v) {
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:                if (k !== 'value') {
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:              value = value['value'];
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:                value += ' (' + cvts.join(', ') + ')';
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:          if ($.isArray(value) && value.length) {
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:            value = value[0].value;
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:          if (value != null) {
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:            values.push(value);
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:        return values;
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:      var get_value_by_keys = $.suggest.suggest.get_value_by_keys;
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:      var get_value = $.suggest.suggest.get_value;
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:      var notable = get_value(data, 'notable');
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:      var descs = get_value_by_keys(
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:          if (get_value_by_keys(desc, 'citation', 0, 'mid') == '/m/0d07ph') {
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:        if ($.isArray(best.value) && best.value.length) {
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:          desc_text = best.value[0].value;
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:          desc_text = best.value;
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:        if (get_value_by_keys(best, 'provenance', 0, 'restrictions', 0) ==
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:          desc_source = get_value_by_keys(best, 'provenance', 0, 'source', 0);
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:              get_value_by_keys(best, 'citation', 'provider', 0, 'name');
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:            desc_provider = desc_provider[0].value;
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:          desc_statement = get_value_by_keys(best, 'citation', 'statement', 0);
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:          if (desc_statement && desc_statement.value) {
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:            desc_statement = desc_statement.value;
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:          descs = get_value(data, ['output', 'description', key], true);
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:      var summary = get_value(data, ['output', 'notable:/client/summary']);
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:        var notable_paths = get_value(summary, '/common/topic/notable_paths');
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:            var values = get_value(summary, path, true);
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:            if (values && values.length) {
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:              values = values.slice(0, 3);
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:              notable_props.push([prop_text, values.join(', ')]);
./main/webapp/modules/core/externals/suggest/suggest-4_3.js:      var types = get_value(
./main/webapp/modules/core/externals/suggest/suggest-4_3.min.js:e.is(":visible"))return a=e,!1});return a},onselect:function(a){var c=a.data("data.suggest");c&&(this.input.val(c.name).data("data.suggest",c).trigger("fb-select",c),this.trackEvent(this.name,"fb-select","index",a.prevAll().length))},trackEvent:function(a,c,b,g){this.input.trigger("fb-track-event",{category:a,action:c,label:b,value:g})},hide_all:function(){this.pane.hide();this.input.trigger("fb-pane-hide",this)}};b.extend(b.suggest,{defaults:{status:["Start typing to get suggestions...","Searching...",
./main/webapp/modules/core/externals/suggest/suggest-4_3.min.js:"Try alternate spellings","Check your spelling"]},css:{item_type:"fbs-item-type",flyoutpane:"fbs-flyout-pane"},xhr_delay:200},get_value_by_keys:function(a,c){for(var e=b.isArray(c)?c:Array.prototype.slice.call(arguments,1),g=0;g<e.length&&!(a=a[e[g]],null==a);g++);return a},get_value:function(a,c,e){if(null==a||null==c||0==c.length)return null;b.isArray(c)||(c=[c]);a=b.suggest.suggest.get_value_by_keys(a,c);if(e){if(null==a)return[];b.isArray(a)||(a=[a]);var g=[];b.each(a,function(a,c){if("object"===
./main/webapp/modules/core/externals/suggest/suggest-4_3.min.js:b.type(c))if(null!=c.name)c=c.name;else if(c.id||c.mid)c=c.id||c.mid;else if(null!=c.value){var e=[];b.each(c,function(a,b){"value"!==a&&e.push(b)});c=c.value;e.length&&(c+=" ("+e.join(", ")+")")}b.isArray(c)&&c.length&&(c=c[0].value);null!=c&&g.push(c)});return g}return null==a?null:a},is_commons_id:function(a){return/^\/base\//.test(a)||/^\/user\//.test(a)?!1:!0},create_flyout:function(a,c){var e=b.suggest.suggest.get_value_by_keys,g=b.suggest.suggest.get_value,f=b.suggest.is_system_type,d=a.name,
./main/webapp/modules/core/externals/suggest/suggest-4_3.min.js:i=null,h=null,j=[],m=[],l={};if((i=g(a,"notable"))&&i.name)m.push(i.name),l[i.name]=!0;i&&f(i.id)?i=a.id:(i=a.mid,h=c.replace(/\$\{id\}/g,i));var n=null,k=f=null,r=null,s=e(a,"output","description","/common/topic/description")||[];if(s.length){var o=s[0];b.each(s,function(a,b){if(e(b,"citation",0,"mid")=="/m/0d07ph"){o=b;return false}return true});n=b.isArray(o.value)&&o.value.length?o.value[0].value:o.value;if("REQUIRES_CITATION"==e(o,"provenance",0,"restrictions",0)){f=e(o,"provenance",0,"source",
./main/webapp/modules/core/externals/suggest/suggest-4_3.min.js:0);if((k=e(o,"citation","provider",0,"name"))&&b.isArray(k)&&k.length)k=k[0].value;if((r=e(o,"citation","statement",0))&&r.value)r=r.value}}else b.each(["wikipedia","freebase"],function(b,c){if((s=g(a,["output","description",c],true))&&s.length){n=s[0];k=c;return false}return true});var p=g(a,["output","notable:/client/summary"]);if(p){var t=g(p,"/common/topic/notable_paths");t&&t.length&&b.each(t,function(a,b){var c=g(p,b,true);if(c&&c.length){var c=c.slice(0,3),d=b.split("/").pop();j.push([d,c.join(", ")])}})}(t=
./main/webapp/modules/core/externals/date.js:if(date instanceof Date&&!isNaN(date)){return(this>date)?1:(this<date)?-1:0;}else{throw new TypeError(date);}};Date.prototype.equals=function(date){return(this.compareTo(date)===0);};Date.prototype.between=function(start,end){var t=this.getTime();return t>=start.getTime()&&t<=end.getTime();};Date.prototype.addMilliseconds=function(value){this.setMilliseconds(this.getMilliseconds()+value);return this;};Date.prototype.addSeconds=function(value){return this.addMilliseconds(value*1000);};Date.prototype.addMinutes=function(value){return this.addMilliseconds(value*60000);};Date.prototype.addHours=function(value){return this.addMilliseconds(value*3600000);};Date.prototype.addDays=function(value){return this.addMilliseconds(value*86400000);};Date.prototype.addWeeks=function(value){return this.addMilliseconds(value*604800000);};Date.prototype.addMonths=function(value){var n=this.getDate();this.setDate(1);this.setMonth(this.getMonth()+value);this.setDate(Math.min(n,this.getDaysInMonth()));return this;};Date.prototype.addYears=function(value){return this.addMonths(value*12);};Date.prototype.add=function(config){if(typeof config=="number"){this._orient=config;return this;}
./main/webapp/modules/core/externals/date.js:return this;};Date._validate=function(value,min,max,name){if(typeof value!="number"){throw new TypeError(value+" is not a Number.");}else if(value<min||value>max){throw new RangeError(value+" is not a valid value for "+name+".");}
./main/webapp/modules/core/externals/date.js:this.hour=(this.meridian=="p"&&this.hour<13)?this.hour+12:this.hour;if(this.day>Date.getDaysInMonth(this.year,this.month)){throw new RangeError(this.day+" is not a valid value for days.");}
./main/webapp/modules/core/externals/date.js:if(this[this.unit+"s"]==null||this.operator!=null){if(!this.value){this.value=1;}
./main/webapp/modules/core/externals/date.js:if(this.unit=="week"){this.unit="day";this.value=this.value*7;}
./main/webapp/modules/core/externals/date.js:this[this.unit+"s"]=this.value*orient;}
./main/webapp/modules/core/externals/date.js:return fn;};g.ctoken2=function(key){return _.rtoken(Date.CultureInfo.regexPatterns[key]);};g.h=_.cache(_.process(_.rtoken(/^(0[0-9]|1[0-2]|[1-9])/),t.hour));g.hh=_.cache(_.process(_.rtoken(/^(0[0-9]|1[0-2])/),t.hour));g.H=_.cache(_.process(_.rtoken(/^([0-1][0-9]|2[0-3]|[0-9])/),t.hour));g.HH=_.cache(_.process(_.rtoken(/^([0-1][0-9]|2[0-3])/),t.hour));g.m=_.cache(_.process(_.rtoken(/^([0-5][0-9]|[0-9])/),t.minute));g.mm=_.cache(_.process(_.rtoken(/^[0-5][0-9]/),t.minute));g.s=_.cache(_.process(_.rtoken(/^([0-5][0-9]|[0-9])/),t.second));g.ss=_.cache(_.process(_.rtoken(/^[0-5][0-9]/),t.second));g.hms=_.cache(_.sequence([g.H,g.mm,g.ss],g.timePartDelimiter));g.t=_.cache(_.process(g.ctoken2("shortMeridian"),t.meridian));g.tt=_.cache(_.process(g.ctoken2("longMeridian"),t.meridian));g.z=_.cache(_.process(_.rtoken(/^(\+|\-)?\s*\d\d\d\d?/),t.timezone));g.zz=_.cache(_.process(_.rtoken(/^(\+|\-)\s*\d\d\d\d/),t.timezone));g.zzz=_.cache(_.process(g.ctoken2("timezone"),t.timezone));g.timeSuffix=_.each(_.ignore(g.whiteSpace),_.set([g.tt,g.zzz]));g.time=_.each(_.optional(_.ignore(_.stoken("T"))),g.hms,g.timeSuffix);g.d=_.cache(_.process(_.each(_.rtoken(/^([0-2]\d|3[0-1]|\d)/),_.optional(g.ctoken2("ordinalSuffix"))),t.day));g.dd=_.cache(_.process(_.each(_.rtoken(/^([0-2]\d|3[0-1])/),_.optional(g.ctoken2("ordinalSuffix"))),t.day));g.ddd=g.dddd=_.cache(_.process(g.ctoken("sun mon tue wed thu fri sat"),function(s){return function(){this.weekday=s;};}));g.M=_.cache(_.process(_.rtoken(/^(1[0-2]|0\d|\d)/),t.month));g.MM=_.cache(_.process(_.rtoken(/^(1[0-2]|0\d)/),t.month));g.MMM=g.MMMM=_.cache(_.process(g.ctoken("jan feb mar apr may jun jul aug sep oct nov dec"),t.month));g.y=_.cache(_.process(_.rtoken(/^(\d\d?)/),t.year));g.yy=_.cache(_.process(_.rtoken(/^(\d\d)/),t.year));g.yyy=_.cache(_.process(_.rtoken(/^(\d\d?\d?\d?)/),t.year));g.yyyy=_.cache(_.process(_.rtoken(/^(\d\d\d\d)/),t.year));_fn=function(){return _.each(_.any.apply(null,arguments),_.not(g.ctoken2("timeContext")));};g.day=_fn(g.d,g.dd);g.month=_fn(g.M,g.MMM);g.year=_fn(g.yyyy,g.yy);g.orientation=_.process(g.ctoken("past future"),function(s){return function(){this.orient=s;};});g.operator=_.process(g.ctoken("add subtract"),function(s){return function(){this.operator=s;};});g.rday=_.process(g.ctoken("yesterday tomorrow today now"),t.rday);g.unit=_.process(g.ctoken("minute hour day week month year"),function(s){return function(){this.unit=s;};});g.value=_.process(_.rtoken(/^\d\d?(st|nd|rd|th)?/),function(s){return function(){this.value=s.replace(/\D/g,"");};});g.expression=_.set([g.rday,g.operator,g.value,g.unit,g.orientation,g.ddd,g.MMM]);_fn=function(){return _.set(arguments,g.datePartDelimiter);};g.mdy=_fn(g.ddd,g.month,g.day,g.year);g.ymd=_fn(g.ddd,g.year,g.month,g.day);g.dmy=_fn(g.ddd,g.day,g.month,g.year);g.date=function(s){return((g[Date.CultureInfo.dateElementOrder]||g.mdy).call(this,s));};g.format=_.process(_.many(_.any(_.process(_.rtoken(/^(dd?d?d?|MM?M?M?|yy?y?y?|hh?|HH?|mm?|ss?|tt?|zz?z?)/),function(fmt){if(g[fmt]){return g[fmt];}else{throw Date.Parsing.Exception(fmt);}}),_.process(_.rtoken(/^[^dMyhHmstz]+/),function(s){return _.ignore(_.stoken(s));}))),function(rules){return _.process(_.each.apply(null,rules),t.finishExact);});var _F={};var _get=function(f){return _F[f]=(_F[f]||g.format(f)[0]);};g.formats=function(fx){if(fx instanceof Array){var rx=[];for(var i=0;i<fx.length;i++){rx.push(_get(fx[i]));}
./main/webapp/modules/core/externals/jquery-migrate-1.2.1.js:function migrateWarnProp( obj, prop, value, msg ) {
./main/webapp/modules/core/externals/jquery-migrate-1.2.1.js:					return value;
./main/webapp/modules/core/externals/jquery-migrate-1.2.1.js:					value = newValue;
./main/webapp/modules/core/externals/jquery-migrate-1.2.1.js:	obj[ prop ] = value;
./main/webapp/modules/core/externals/jquery-migrate-1.2.1.js:	valueAttrGet = jQuery.attrHooks.value && jQuery.attrHooks.value.get ||
./main/webapp/modules/core/externals/jquery-migrate-1.2.1.js:	valueAttrSet = jQuery.attrHooks.value && jQuery.attrHooks.value.set ||
./main/webapp/modules/core/externals/jquery-migrate-1.2.1.js:jQuery.attr = function( elem, name, value, pass ) {
./main/webapp/modules/core/externals/jquery-migrate-1.2.1.js:			return jQuery( elem )[ name ]( value );
./main/webapp/modules/core/externals/jquery-migrate-1.2.1.js:	if ( name === "type" && value !== undefined && rnoType.test( elem.nodeName ) && elem.parentNode ) {
./main/webapp/modules/core/externals/jquery-migrate-1.2.1.js:			set: function( elem, value, name ) {
./main/webapp/modules/core/externals/jquery-migrate-1.2.1.js:				if ( value === false ) {
./main/webapp/modules/core/externals/jquery-migrate-1.2.1.js:					// value is true since we know at this point it's type boolean and not false
./main/webapp/modules/core/externals/jquery-migrate-1.2.1.js:	return oldAttr.call( jQuery, elem, name, value );
./main/webapp/modules/core/externals/jquery-migrate-1.2.1.js:// attrHooks: value
./main/webapp/modules/core/externals/jquery-migrate-1.2.1.js:jQuery.attrHooks.value = {
./main/webapp/modules/core/externals/jquery-migrate-1.2.1.js:			return valueAttrGet.apply( this, arguments );
./main/webapp/modules/core/externals/jquery-migrate-1.2.1.js:			migrateWarn("jQuery.fn.attr('value') no longer gets properties");
./main/webapp/modules/core/externals/jquery-migrate-1.2.1.js:			elem.value :
./main/webapp/modules/core/externals/jquery-migrate-1.2.1.js:	set: function( elem, value ) {
./main/webapp/modules/core/externals/jquery-migrate-1.2.1.js:			return valueAttrSet.apply( this, arguments );
./main/webapp/modules/core/externals/jquery-migrate-1.2.1.js:			migrateWarn("jQuery.fn.attr('value', val) no longer sets properties");
./main/webapp/modules/core/externals/jquery-migrate-1.2.1.js:		elem.value = value;
./main/webapp/modules/core/externals/jquery-migrate-1.2.1.js:// Let $.parseJSON(falsy_value) return null
./main/webapp/modules/core/scripts/facets/range-facet.js:              o.values,
./main/webapp/modules/core/scripts/facets/list-facet.js:  if (this._config.expression != "value" && this._config.expression != "grel:value") {
./main/webapp/modules/core/scripts/facets/list-facet.js:  textarea.value = lines.join("\n");
./main/webapp/modules/core/scripts/facets/list-facet.js:  var renderEdit = this._config.expression == "value";
./main/webapp/modules/core/scripts/facets/list-facet.js:    var text = elmts.textarea[0].value;
./main/webapp/modules/core/scripts/facets/list-facet.js:        expression: "value",
./main/webapp/modules/core/scripts/facets/list-facet.js:    o.values,
./main/webapp/modules/core/scripts/facets/list-facet.js:        if (self._config.expression == "value" || self._config.expression == "grel:value") {
./main/webapp/modules/core/scripts/facets/list-facet.js:          value : n
./main/webapp/modules/core/scripts/facets/text-search-facet.js:  this._div.find(".input-container input").each(function() { this.value = ""; });
./main/webapp/modules/core/scripts/facets/text-search-facet.js:    elmts.input[0].value = this._query;
./main/webapp/modules/core/scripts/facets/text-search-facet.js:    if(evt.type === "keyup" && (this.value === self._query || this.value === '' && !self._query)) {
./main/webapp/modules/core/scripts/facets/text-search-facet.js:    self._query = this.value;
./main/webapp/modules/core/scripts/facets/scatterplot-facet.js:      '<input type="radio" id="' + facet_id + '-dim-lin" name="' + facet_id + '-dim" value="lin"/><label class="dim-lin-label" for="' + facet_id + '-dim-lin" title="'+$.i18n._('core-facets')["linear-plot"]+'">'+$.i18n._('core-facets')["linear-plot-abbr"]+'</label>' +
./main/webapp/modules/core/scripts/facets/scatterplot-facet.js:      '<input type="radio" id="' + facet_id + '-dim-log" name="' + facet_id + '-dim" value="log"/><label class="dim-log-label" for="' + facet_id + '-dim-log" title="'+$.i18n._('core-facets')["logar-plot"]+'">'+$.i18n._('core-facets')["logar-plot-abbr"]+'</label>' +
./main/webapp/modules/core/scripts/facets/scatterplot-facet.js:      '<input type="radio" id="' + facet_id + '-rot-ccw"  name="' + facet_id + '-rot" value="ccw"/><label class="rot-ccw-label" for="' + facet_id + '-rot-ccw" title="'+$.i18n._('core-facets')["rotated-counter-clock"]+'">&nbsp;</label>' +
./main/webapp/modules/core/scripts/facets/scatterplot-facet.js:      '<input type="radio" id="' + facet_id + '-rot-none" name="' + facet_id + '-rot" value="none"/><label class="rot-none-label" for="' + facet_id + '-rot-none" title="'+$.i18n._('core-facets')["no-rotation"]+'">&nbsp;</label>' +
./main/webapp/modules/core/scripts/facets/scatterplot-facet.js:      '<input type="radio" id="' + facet_id + '-rot-cw"   name="' + facet_id + '-rot" value="cw"/><label class="rot-cw-label" for="' + facet_id + '-rot-cw" title="'+$.i18n._('core-facets')["rotated-clock"]+'">&nbsp;</label>' +
./main/webapp/modules/core/scripts/facets/scatterplot-facet.js:      '<input type="radio" id="' + facet_id + '-dot-small"   name="' + facet_id + '-dot" value="small"/><label class="dot-small-label" for="' + facet_id + '-dot-small" title="'+$.i18n._('core-facets')["small-dot"]+'">&nbsp;</label>' +
./main/webapp/modules/core/scripts/facets/scatterplot-facet.js:      '<input type="radio" id="' + facet_id + '-dot-regular" name="' + facet_id + '-dot" value="regular"/><label class="dot-regular-label" for="' + facet_id + '-dot-regular" title="'+$.i18n._('core-facets')["regular-dot"]+'">&nbsp;</label>' +
./main/webapp/modules/core/scripts/facets/scatterplot-facet.js:      '<input type="radio" id="' + facet_id + '-dot-big"     name="' + facet_id + '-dot" value="big"/><label class="dot-big-label" for="' + facet_id + '-dot-big" title="'+$.i18n._('core-facets')["big-dot"]+'">&nbsp;</label>' +
./main/webapp/modules/core/scripts/facets/timerange-facet.js:              o.values,
./main/webapp/modules/core/scripts/index/lang-settings-ui.js:	this._elmts.set_lan_btn.attr("value", $.i18n._('core-index-lang')["send-req"]);
./main/webapp/modules/core/scripts/index/lang-settings-ui.js:      value : "core"
./main/webapp/modules/core/scripts/index/lang-settings-ui.js:				value : $("#langDD option:selected").val()
./main/webapp/modules/core/scripts/index/parser-interfaces/separator-based-parser-ui.js:    encoding: $.trim(this._optionContainerElmts.encodingInput[0].value)
./main/webapp/modules/core/scripts/index/parser-interfaces/separator-based-parser-ui.js:  switch (this._optionContainer.find("input[name='column-separator']:checked")[0].value) {
./main/webapp/modules/core/scripts/index/parser-interfaces/separator-based-parser-ui.js:    options.separator = this._optionContainerElmts.columnSeparatorInput[0].value;
./main/webapp/modules/core/scripts/index/parser-interfaces/separator-based-parser-ui.js:    options.ignoreLines = parseIntDefault(this._optionContainerElmts.ignoreInput[0].value, -1);
./main/webapp/modules/core/scripts/index/parser-interfaces/separator-based-parser-ui.js:    options.headerLines = parseIntDefault(this._optionContainerElmts.headerLinesInput[0].value, 0);
./main/webapp/modules/core/scripts/index/parser-interfaces/separator-based-parser-ui.js:    options.skipDataLines = parseIntDefault(this._optionContainerElmts.skipInput[0].value, 0);
./main/webapp/modules/core/scripts/index/parser-interfaces/separator-based-parser-ui.js:    options.limit = parseIntDefault(this._optionContainerElmts.limitInput[0].value, -1);
./main/webapp/modules/core/scripts/index/parser-interfaces/separator-based-parser-ui.js:    .attr('value', this._config.encoding || '')
./main/webapp/modules/core/scripts/index/parser-interfaces/separator-based-parser-ui.js:      "input[name='column-separator'][value='" + columnSeparatorValue + "']").prop("checked", true);
./main/webapp/modules/core/scripts/index/parser-interfaces/separator-based-parser-ui.js:  this._optionContainerElmts.columnSeparatorInput[0].value = this._config.separator;
./main/webapp/modules/core/scripts/index/parser-interfaces/separator-based-parser-ui.js:    this._optionContainerElmts.ignoreInput[0].value = this._config.ignoreLines.toString();
./main/webapp/modules/core/scripts/index/parser-interfaces/separator-based-parser-ui.js:    this._optionContainerElmts.headerLinesInput[0].value = this._config.headerLines.toString();
./main/webapp/modules/core/scripts/index/parser-interfaces/separator-based-parser-ui.js:    this._optionContainerElmts.limitInput[0].value = this._config.limit.toString();
./main/webapp/modules/core/scripts/index/parser-interfaces/separator-based-parser-ui.js:    this._optionContainerElmts.skipInput.value[0].value = this._config.skipDataLines.toString();
./main/webapp/modules/core/scripts/index/parser-interfaces/fixed-width-parser-ui.js:    encoding: $.trim(this._optionContainerElmts.encodingInput[0].value),
./main/webapp/modules/core/scripts/index/parser-interfaces/fixed-width-parser-ui.js:  var columnNames = $.trim(this._optionContainerElmts.columnNamesInput[0].value).replace(/,\s+/g, ',').split(',');
./main/webapp/modules/core/scripts/index/parser-interfaces/fixed-width-parser-ui.js:    options.ignoreLines = parseIntDefault(this._optionContainerElmts.ignoreInput[0].value, -1);
./main/webapp/modules/core/scripts/index/parser-interfaces/fixed-width-parser-ui.js:    options.headerLines = parseIntDefault(this._optionContainerElmts.headerLinesInput[0].value, 0);
./main/webapp/modules/core/scripts/index/parser-interfaces/fixed-width-parser-ui.js:    options.skipDataLines = parseIntDefault(this._optionContainerElmts.skipInput[0].value, 0);
./main/webapp/modules/core/scripts/index/parser-interfaces/fixed-width-parser-ui.js:    options.limit = parseIntDefault(this._optionContainerElmts.limitInput[0].value, -1);
./main/webapp/modules/core/scripts/index/parser-interfaces/fixed-width-parser-ui.js:    .attr('value', this._config.encoding || '')
./main/webapp/modules/core/scripts/index/parser-interfaces/fixed-width-parser-ui.js:  this._optionContainerElmts.columnWidthsInput[0].value = this._config.columnWidths.join(',');
./main/webapp/modules/core/scripts/index/parser-interfaces/fixed-width-parser-ui.js:    this._optionContainerElmts.columnNamesInput[0].value = this._config.columnNames.join(',');
./main/webapp/modules/core/scripts/index/parser-interfaces/fixed-width-parser-ui.js:    this._optionContainerElmts.ignoreInput[0].value = this._config.ignoreLines.toString();
./main/webapp/modules/core/scripts/index/parser-interfaces/fixed-width-parser-ui.js:    this._optionContainerElmts.headerLinesInput[0].value = this._config.headerLines.toString();
./main/webapp/modules/core/scripts/index/parser-interfaces/fixed-width-parser-ui.js:    this._optionContainerElmts.limitInput[0].value = this._config.limit.toString();
./main/webapp/modules/core/scripts/index/parser-interfaces/fixed-width-parser-ui.js:    this._optionContainerElmts.skipInput.value[0].value = this._config.skipDataLines.toString();
./main/webapp/modules/core/scripts/index/parser-interfaces/fixed-width-parser-ui.js:  var a = $.trim(this._optionContainerElmts.columnWidthsInput[0].value).replace(/,\s+/g, ',').split(',');
./main/webapp/modules/core/scripts/index/parser-interfaces/fixed-width-parser-ui.js:          .addClass("data-table-value-nonstring")
./main/webapp/modules/core/scripts/index/parser-interfaces/fixed-width-parser-ui.js:    self._parserUI._optionContainerElmts.columnWidthsInput[0].value = newColumnWidths.join(',');
./main/webapp/modules/core/scripts/index/parser-interfaces/excel-parser-ui.js:    options.ignoreLines = parseIntDefault(this._optionContainerElmts.ignoreInput[0].value, -1);
./main/webapp/modules/core/scripts/index/parser-interfaces/excel-parser-ui.js:    options.headerLines = parseIntDefault(this._optionContainerElmts.headerLinesInput[0].value, 0);
./main/webapp/modules/core/scripts/index/parser-interfaces/excel-parser-ui.js:    options.skipDataLines = parseIntDefault(this._optionContainerElmts.skipInput[0].value, 0);
./main/webapp/modules/core/scripts/index/parser-interfaces/excel-parser-ui.js:    options.limit = parseIntDefault(this._optionContainerElmts.limitInput[0].value, -1);
./main/webapp/modules/core/scripts/index/parser-interfaces/excel-parser-ui.js:    this._optionContainerElmts.ignoreInput[0].value = this._config.ignoreLines.toString();
./main/webapp/modules/core/scripts/index/parser-interfaces/excel-parser-ui.js:    this._optionContainerElmts.headerLinesInput[0].value = this._config.headerLines.toString();
./main/webapp/modules/core/scripts/index/parser-interfaces/excel-parser-ui.js:    this._optionContainerElmts.limitInput[0].value = this._config.limit.toString();
./main/webapp/modules/core/scripts/index/parser-interfaces/excel-parser-ui.js:    this._optionContainerElmts.skipInput.value[0].value = this._config.skipDataLines.toString();
./main/webapp/modules/core/scripts/index/parser-interfaces/line-based-parser-ui.js:    encoding: $.trim(this._optionContainerElmts.encodingInput[0].value),
./main/webapp/modules/core/scripts/index/parser-interfaces/line-based-parser-ui.js:  options.linesPerRow = parseIntDefault(this._optionContainerElmts.linesPerRowInput[0].value, 1);
./main/webapp/modules/core/scripts/index/parser-interfaces/line-based-parser-ui.js:    options.ignoreLines = parseIntDefault(this._optionContainerElmts.ignoreInput[0].value, -1);
./main/webapp/modules/core/scripts/index/parser-interfaces/line-based-parser-ui.js:    options.limit = parseIntDefault(this._optionContainerElmts.limitInput[0].value, -1);
./main/webapp/modules/core/scripts/index/parser-interfaces/line-based-parser-ui.js:    options.skipDataLines = parseIntDefault(this._optionContainerElmts.skipInput[0].value, -1);
./main/webapp/modules/core/scripts/index/parser-interfaces/line-based-parser-ui.js:    .attr('value', this._config.encoding || '')
./main/webapp/modules/core/scripts/index/parser-interfaces/line-based-parser-ui.js:  this._optionContainerElmts.linesPerRowInput[0].value =
./main/webapp/modules/core/scripts/index/parser-interfaces/line-based-parser-ui.js:    this._optionContainerElmts.ignoreInput[0].value = this._config.ignoreLines.toString();
./main/webapp/modules/core/scripts/index/parser-interfaces/line-based-parser-ui.js:    this._optionContainerElmts.limitInput[0].value = this._config.limit.toString();
./main/webapp/modules/core/scripts/index/parser-interfaces/line-based-parser-ui.js:    this._optionContainerElmts.skipInput.value[0].value = this._config.skipDataLines.toString();
./main/webapp/modules/core/scripts/index/parser-interfaces/json-parser-ui.js:    options.limit = parseIntDefault(this._optionContainerElmts.limitInput[0].value, -1);
./main/webapp/modules/core/scripts/index/parser-interfaces/json-parser-ui.js:    this._optionContainerElmts.limitInput[0].value = this._config.limit.toString();
./main/webapp/modules/core/scripts/index/parser-interfaces/preview-table.js:          .addClass("data-table-value-nonstring")
./main/webapp/modules/core/scripts/index/import-project-ui.js:  $('#import-project-button').attr("value",$.i18n._('core-buttons')["import-proj"]);
./main/webapp/modules/core/scripts/index/default-importing-sources/sources.js:    if ($.trim(self._elmts.urlInput[0].value).length === 0) {
./main/webapp/modules/core/scripts/index/default-importing-sources/sources.js:    if ($.trim(self._elmts.textInput[0].value).length === 0) {
./main/webapp/modules/core/scripts/index/default-importing-controller/controller.js:		return this.value === ""; 
./main/webapp/modules/core/scripts/index/default-importing-controller/controller.js:    var projectName = $.trim(this._parsingPanelElmts.projectNameInput[0].value);
./main/webapp/modules/core/scripts/index/default-importing-controller/parsing-panel.js:    this._parsingPanelElmts.projectNameInput[0].value = this._projectName;
./main/webapp/modules/core/scripts/index/default-importing-controller/file-selection-panel.js:      var regex = new RegExp(this.value);
./main/webapp/modules/core/scripts/index/default-importing-controller/file-selection-panel.js:      var regex = new RegExp(self._fileSelectionPanelElmts.regexInput[0].value);
./main/webapp/modules/core/scripts/index/default-importing-controller/file-selection-panel.js:      var regex = new RegExp(self._fileSelectionPanelElmts.regexInput[0].value);
./main/webapp/modules/core/scripts/index/open-project-ui.js:    if ($("#project-name-input")[0].value.length === 0) {
./main/webapp/modules/core/scripts/index/open-project-ui.js:        $("#project-name-input")[0].value = fileName.replace(/\.\w+/, "").replace(/[_\-]/g, " ");
./main/webapp/modules/core/scripts/index/open-project-ui.js:  var projectName = $("#project-name-input")[0].value;
./main/webapp/modules/core/scripts/index/open-project-ui.js:  var dataURL = $.trim($("#project-url-input")[0].value);
./main/webapp/modules/core/scripts/index/open-project-ui.js:          "separator=" +          $("#separator-input")[0].value,
./main/webapp/modules/core/scripts/index/open-project-ui.js:          "ignore=" +             $("#ignore-input")[0].value,
./main/webapp/modules/core/scripts/index/open-project-ui.js:          "header-lines=" +       $("#header-lines-input")[0].value,
./main/webapp/modules/core/scripts/index/open-project-ui.js:          "skip=" +               $("#skip-input")[0].value,
./main/webapp/modules/core/scripts/index/open-project-ui.js:          "limit=" +              $("#limit-input")[0].value,
./main/webapp/modules/core/scripts/index/open-project-ui.js:          "guess-value-type=" +   $("#guess-value-type-input")[0].checked,
./main/webapp/modules/core/scripts/widgets/slider-widget.js:    this._drag.value = this._range.from;
./main/webapp/modules/core/scripts/widgets/slider-widget.js:  var valueToPixel = function(x) {
./main/webapp/modules/core/scripts/widgets/slider-widget.js:  var fromPixel = Math.floor(valueToPixel(range.from));
./main/webapp/modules/core/scripts/widgets/slider-widget.js:  var toPixel = Math.floor(valueToPixel(range.to));
./main/webapp/modules/core/scripts/reconciliation/recon-dialog.js:    var url = $.trim(elmts.input[0].value);
./main/webapp/modules/core/scripts/reconciliation/freebase-query-panel.js:    self._panel.find('input[name="recon-dialog-strict-choice"][value="key"]').attr("checked", "true");
./main/webapp/modules/core/scripts/reconciliation/freebase-query-panel.js:    self._panel.find('input[name="recon-dialog-strict-namespace-choice"][value="other"]').attr("checked", "true");
./main/webapp/modules/core/scripts/reconciliation/freebase-query-panel.js:  var match = $('input[name="recon-dialog-strict-choice"]:checked')[0].value;
./main/webapp/modules/core/scripts/reconciliation/freebase-query-panel.js:    if (namespaceChoice.value == "other") {
./main/webapp/modules/core/scripts/reconciliation/freebase-query-panel.js:        id: namespaceChoice.value,
./main/webapp/modules/core/scripts/reconciliation/recon-manager.js:    data: { "value" : JSON.stringify(ReconciliationManager.standardServices) },
./main/webapp/modules/core/scripts/reconciliation/recon-manager.js:      if (data.value && data.value != "null") {
./main/webapp/modules/core/scripts/reconciliation/recon-manager.js:        ReconciliationManager.standardServices = JSON.parse(data.value);
./main/webapp/modules/core/scripts/reconciliation/standard-service-panel.js:      .attr("value", typeID)
./main/webapp/modules/core/scripts/reconciliation/standard-service-panel.js:        self._rewirePropertySuggests(this.value);
./main/webapp/modules/core/scripts/reconciliation/standard-service-panel.js:    .find('input[name="type-choice"][value=""]')
./main/webapp/modules/core/scripts/reconciliation/standard-service-panel.js:    .find('input[name="type-choice"][value=""]')
./main/webapp/modules/core/scripts/reconciliation/standard-service-panel.js:        id: this._elmts.typeInput[0].value,
./main/webapp/modules/core/scripts/reconciliation/standard-service-panel.js:        name: this._elmts.typeInput[0].value
./main/webapp/modules/core/scripts/reconciliation/standard-service-panel.js:    if (choices[0].value == '-') {
./main/webapp/modules/core/scripts/reconciliation/standard-service-panel.js:    } else if (choices[0].value != "") {
./main/webapp/modules/core/scripts/reconciliation/standard-service-panel.js:          id: choices[0].value,
./main/webapp/modules/core/scripts/reconciliation/standard-service-panel.js:        var property = $.trim(this.value);
./main/webapp/modules/core/scripts/reconciliation/standard-service-panel.js:        limit: this._elmts.maxCandidates[0].value
./main/webapp/modules/core/scripts/views/data-table/column-header-ui.js:    valueType: "string",
./main/webapp/modules/core/scripts/views/data-table/column-header-ui.js:  elmts.valueTypeOptions
./main/webapp/modules/core/scripts/views/data-table/column-header-ui.js:  .find("input[type='radio'][value='" + criterion.valueType + "']")
./main/webapp/modules/core/scripts/views/data-table/column-header-ui.js:  var setValueType = function(valueType) {
./main/webapp/modules/core/scripts/views/data-table/column-header-ui.js:    if (valueType == "string") {
./main/webapp/modules/core/scripts/views/data-table/column-header-ui.js:    } else if (valueType == "number") {
./main/webapp/modules/core/scripts/views/data-table/column-header-ui.js:    } else if (valueType == "date") {
./main/webapp/modules/core/scripts/views/data-table/column-header-ui.js:    } else if (valueType == "boolean") {
./main/webapp/modules/core/scripts/views/data-table/column-header-ui.js:  elmts.valueTypeOptions
./main/webapp/modules/core/scripts/views/data-table/column-header-ui.js:    setValueType(this.value);
./main/webapp/modules/core/scripts/views/data-table/column-header-ui.js:  if (criterion.valueType == "string" && criterion.caseSensitive) {
./main/webapp/modules/core/scripts/views/data-table/column-header-ui.js:  .find("input[type='radio'][value='" + (criterion.reverse ? "reverse" : "forward") + "']")
./main/webapp/modules/core/scripts/views/data-table/column-header-ui.js:  var validValuesHtml = '<li kind="value">'+$.i18n._('core-views')["valid-values"]+'</li>';
./main/webapp/modules/core/scripts/views/data-table/column-header-ui.js:  setValueType(criterion.valueType); 
./main/webapp/modules/core/scripts/views/data-table/column-header-ui.js:        valueType: elmts.valueTypeOptions.find("input[type='radio']:checked")[0].value,
./main/webapp/modules/core/scripts/views/data-table/column-header-ui.js:        reverse: elmts.directionOptions.find("input[type='radio']:checked")[0].value == "reverse"
./main/webapp/modules/core/scripts/views/data-table/column-header-ui.js:    var valuePosition, blankPosition, errorPosition;
./main/webapp/modules/core/scripts/views/data-table/column-header-ui.js:      if (kind == "value") {
./main/webapp/modules/core/scripts/views/data-table/column-header-ui.js:        valuePosition = index;
./main/webapp/modules/core/scripts/views/data-table/column-header-ui.js:    criterion2.blankPosition = blankPosition - valuePosition;
./main/webapp/modules/core/scripts/views/data-table/column-header-ui.js:    criterion2.errorPosition = errorPosition - valuePosition;
./main/webapp/modules/core/scripts/views/data-table/column-header-ui.js:    if (criterion2.valueType == "string") {
./main/webapp/modules/core/scripts/views/data-table/menu-facets.js:              "expression": "value"
./main/webapp/modules/core/scripts/views/data-table/menu-facets.js:              "expression": "value",
./main/webapp/modules/core/scripts/views/data-table/menu-facets.js:              "expression": "value",
./main/webapp/modules/core/scripts/views/data-table/menu-facets.js:                  "expression": "value.split(' ')"
./main/webapp/modules/core/scripts/views/data-table/menu-facets.js:                  "expression": "facetCount(value, 'value', '" +
./main/webapp/modules/core/scripts/views/data-table/menu-facets.js:                  "expression": "value.log()",
./main/webapp/modules/core/scripts/views/data-table/menu-facets.js:                  "expression": "log(max(1, value))",
./main/webapp/modules/core/scripts/views/data-table/menu-facets.js:                  "expression": "value.length()",
./main/webapp/modules/core/scripts/views/data-table/menu-facets.js:                  "expression": "value.length().log()",
./main/webapp/modules/core/scripts/views/data-table/menu-facets.js:                  "expression": "value.unicode()",
./main/webapp/modules/core/scripts/views/data-table/menu-facets.js:                  "expression": "isError(value)"
./main/webapp/modules/core/scripts/views/data-table/menu-facets.js:                  "expression": "isBlank(value)"
./main/webapp/modules/core/scripts/views/data-table/menu-edit-cells.js:        $('input[name="text-transform-dialog-onerror-choice"]:checked')[0].value,
./main/webapp/modules/core/scripts/views/data-table/menu-edit-cells.js:        elmts.repeatCountInput[0].value
./main/webapp/modules/core/scripts/views/data-table/menu-edit-cells.js:      o.values,
./main/webapp/modules/core/scripts/views/data-table/menu-edit-cells.js:      params.repeatCount = elmts.repeatCountInput[0].value;
./main/webapp/modules/core/scripts/views/data-table/menu-edit-cells.js:        "join-multi-value-cells", 
./main/webapp/modules/core/scripts/views/data-table/menu-edit-cells.js:        "split-multi-value-cells", 
./main/webapp/modules/core/scripts/views/data-table/menu-edit-cells.js:          click: function() { doTextTransform("value.trim()", "keep-original", false, ""); }
./main/webapp/modules/core/scripts/views/data-table/menu-edit-cells.js:          click: function() { doTextTransform("value.replace(/\\s+/,' ')", "keep-original", false, ""); }
./main/webapp/modules/core/scripts/views/data-table/menu-edit-cells.js:          click: function() { doTextTransform("value.toTitlecase()", "keep-original", false, ""); }
./main/webapp/modules/core/scripts/views/data-table/menu-edit-cells.js:          click: function() { doTextTransform("value.toUppercase()", "keep-original", false, ""); }
./main/webapp/modules/core/scripts/views/data-table/menu-edit-cells.js:          click: function() { doTextTransform("value.toLowercase()", "keep-original", false, ""); }
./main/webapp/modules/core/scripts/views/data-table/menu-edit-cells.js:          click: function() { doTextTransform("value.toNumber()", "keep-original", false, ""); }
./main/webapp/modules/core/scripts/views/data-table/menu-edit-cells.js:          click: function() { doTextTransform("value.toDate()", "keep-original", false, ""); }
./main/webapp/modules/core/scripts/views/data-table/menu-edit-cells.js:          click: function() { doTextTransform("value.toString()", "keep-original", false, ""); }
./main/webapp/modules/core/scripts/views/data-table/menu-edit-cells.js:      id: "core/split-multi-valued-cells",
./main/webapp/modules/core/scripts/views/data-table/menu-edit-cells.js:      id: "core/join-multi-valued-cells",
./main/webapp/modules/core/scripts/views/data-table/menu-edit-cells.js:      click: function() { new ClusteringDialog(column.name, "value"); }
./main/webapp/modules/core/scripts/views/data-table/menu-edit-cells.js:        startColumnName: elmts.fromColumnSelect[0].value,
./main/webapp/modules/core/scripts/views/data-table/menu-edit-cells.js:        columnCount: elmts.toColumnSelect[0].value,
./main/webapp/modules/core/scripts/views/data-table/menu-edit-cells.js:      var mode = dialog.find('input[name="transpose-dialog-column-choices"]:checked')[0].value;
./main/webapp/modules/core/scripts/views/data-table/menu-edit-cells.js:        config.keyColumnName = $.trim(elmts.keyColumnNameInput[0].value);
./main/webapp/modules/core/scripts/views/data-table/menu-edit-cells.js:        config.valueColumnName = $.trim(elmts.valueColumnNameInput[0].value);
./main/webapp/modules/core/scripts/views/data-table/menu-edit-cells.js:        } else if (config.valueColumnName == "") {
./main/webapp/modules/core/scripts/views/data-table/menu-edit-cells.js:        config.combinedColumnName = $.trim(elmts.combinedColumnNameInput[0].value);
./main/webapp/modules/core/scripts/views/data-table/menu-edit-cells.js:        config.separator = elmts.separatorInput[0].value;
./main/webapp/modules/core/scripts/views/data-table/menu-edit-cells.js:      var option = $('<option>').attr("value", column2.name).text(column2.name).appendTo(elmts.fromColumnSelect);
./main/webapp/modules/core/scripts/views/data-table/menu-edit-cells.js:      var toColumnName = elmts.fromColumnSelect[0].value;
./main/webapp/modules/core/scripts/views/data-table/menu-edit-cells.js:        $('<option>').attr("value", k - j + 1).text(column2.name).appendTo(elmts.toColumnSelect);
./main/webapp/modules/core/scripts/views/data-table/menu-edit-cells.js:        .attr("value", "-1")
./main/webapp/modules/core/scripts/views/data-table/menu-edit-cells.js:        keyColumnName: elmts.keyColumnSelect[0].value,
./main/webapp/modules/core/scripts/views/data-table/menu-edit-cells.js:        valueColumnName: elmts.valueColumnSelect[0].value,
./main/webapp/modules/core/scripts/views/data-table/menu-edit-cells.js:        noteColumnName: elmts.noteColumnSelect[0].value
./main/webapp/modules/core/scripts/views/data-table/menu-edit-cells.js:          config.valueColumnName == null ||
./main/webapp/modules/core/scripts/views/data-table/menu-edit-cells.js:          config.keyColumnName == config.valueColumnName) {
./main/webapp/modules/core/scripts/views/data-table/menu-edit-cells.js:      var noteColumnName = elmts.noteColumnSelect[0].value;
./main/webapp/modules/core/scripts/views/data-table/menu-edit-cells.js:            noteColumnName == config.valueColumnName) {
./main/webapp/modules/core/scripts/views/data-table/menu-edit-cells.js:        "key-value-columnize", 
./main/webapp/modules/core/scripts/views/data-table/menu-edit-cells.js:    var valueColumnIndex = -1;
./main/webapp/modules/core/scripts/views/data-table/menu-edit-cells.js:      var keyOption = $('<option>').attr("value", column2.name).text(column2.name).appendTo(elmts.keyColumnSelect);
./main/webapp/modules/core/scripts/views/data-table/menu-edit-cells.js:        valueColumnIndex = i + 1;
./main/webapp/modules/core/scripts/views/data-table/menu-edit-cells.js:      var valueOption = $('<option>').attr("value", column2.name).text(column2.name).appendTo(elmts.valueColumnSelect);
./main/webapp/modules/core/scripts/views/data-table/menu-edit-cells.js:      if (i === valueColumnIndex) {
./main/webapp/modules/core/scripts/views/data-table/menu-edit-cells.js:        valueOption.attr("selected", "true");
./main/webapp/modules/core/scripts/views/data-table/menu-edit-cells.js:      $('<option>').attr("value", column2.name).text(column2.name).appendTo(elmts.noteColumnSelect);
./main/webapp/modules/core/scripts/views/data-table/menu-edit-cells.js:        id: "core/key-value-columnize",
./main/webapp/modules/core/scripts/views/data-table/data-table-view.js:  var renderBrowsingModeLink = function(label, value) {
./main/webapp/modules/core/scripts/views/data-table/data-table-view.js:    if (value == ui.browsingEngine.getMode()) {
./main/webapp/modules/core/scripts/views/data-table/data-table-view.js:        ui.browsingEngine.setMode(value);
./main/webapp/modules/core/scripts/views/data-table/data-table-view.js:  var values = [];
./main/webapp/modules/core/scripts/views/data-table/data-table-view.js:    values.push(v);
./main/webapp/modules/core/scripts/views/data-table/data-table-view.js:    values: values
./main/webapp/modules/core/scripts/views/data-table/data-table-view.js:    o.values,
./main/webapp/modules/core/scripts/views/data-table/menu-edit-column.js:      o.values,
./main/webapp/modules/core/scripts/views/data-table/menu-edit-column.js:      var columnName = $.trim(elmts.columnNameInput[0].value);
./main/webapp/modules/core/scripts/views/data-table/menu-edit-column.js:          onError: $('input[name="create-column-dialog-onerror-choice"]:checked')[0].value
./main/webapp/modules/core/scripts/views/data-table/menu-edit-column.js:      o.values,
./main/webapp/modules/core/scripts/views/data-table/menu-edit-column.js:      var columnName = $.trim(elmts.columnNameInput[0].value);
./main/webapp/modules/core/scripts/views/data-table/menu-edit-column.js:          delay: elmts.throttleDelayInput[0].value,
./main/webapp/modules/core/scripts/views/data-table/menu-edit-column.js:          onError: $('input[name="dialog-onerror-choice"]:checked')[0].value
./main/webapp/modules/core/scripts/views/data-table/menu-edit-column.js:      var mode = $("input[name='split-by-mode']:checked")[0].value;
./main/webapp/modules/core/scripts/views/data-table/menu-edit-column.js:        config.separator = elmts.separatorInput[0].value;
./main/webapp/modules/core/scripts/views/data-table/menu-edit-column.js:        var s = elmts.maxColumnsInput[0].value;
./main/webapp/modules/core/scripts/views/data-table/menu-edit-column.js:        var s = "[" + elmts.lengthsTextarea[0].value + "]";
./main/webapp/modules/core/scripts/views/data-table/menu-reconcile.js:        $('<option>').attr("value", column2.name).text(column2.name).appendTo(elmts.toColumnSelect);
./main/webapp/modules/core/scripts/views/data-table/menu-reconcile.js:          config.toColumnName.push(this.value);
./main/webapp/modules/core/scripts/views/data-table/menu-reconcile.js:                  "expression" : 'forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), "(unreconciled)", "(blank)"))'
./main/webapp/modules/core/scripts/views/data-table/menu-reconcile.js:                  "expression" : 'forNonBlank(cell.recon.features.typeMatch, v, v, if(isNonBlank(value), "(unreconciled)", "(blank)"))'
./main/webapp/modules/core/scripts/views/data-table/menu-reconcile.js:                  "expression" : 'forNonBlank(cell.recon.features.nameMatch, v, v, if(isNonBlank(value), "(unreconciled)", "(blank)"))'
./main/webapp/modules/core/scripts/views/data-table/menu-reconcile.js:                  "expression" : 'forNonBlank(cell.recon.best.type, v, v, if(isNonBlank(value), "(unreconciled)", "(blank)"))'
./main/webapp/modules/core/scripts/views/data-table/cell-ui.js:      .addClass("data-table-value-nonstring")
./main/webapp/modules/core/scripts/views/data-table/cell-ui.js:  .attr("value", this._cell.v)
./main/webapp/modules/core/scripts/views/data-table/cell-ui.js:    var type = elmts.typeSelect[0].value;
./main/webapp/modules/core/scripts/views/data-table/cell-ui.js:    var text = elmts.textarea[0].value;
./main/webapp/modules/core/scripts/views/data-table/cell-ui.js:    var value = text;
./main/webapp/modules/core/scripts/views/data-table/cell-ui.js:      value = parseFloat(text);
./main/webapp/modules/core/scripts/views/data-table/cell-ui.js:      if (isNaN(value)) {
./main/webapp/modules/core/scripts/views/data-table/cell-ui.js:      value = ("true" == text);
./main/webapp/modules/core/scripts/views/data-table/cell-ui.js:      value = Date.parse(text);
./main/webapp/modules/core/scripts/views/data-table/cell-ui.js:      if (!value) {
./main/webapp/modules/core/scripts/views/data-table/cell-ui.js:        value = DateTimeUtil.parseIso8601DateTime(text);
./main/webapp/modules/core/scripts/views/data-table/cell-ui.js:      if (!value) {
./main/webapp/modules/core/scripts/views/data-table/cell-ui.js:      value = value.toString("yyyy-MM-ddTHH:mm:ssZ");
./main/webapp/modules/core/scripts/views/data-table/cell-ui.js:          expression: "value",
./main/webapp/modules/core/scripts/views/data-table/cell-ui.js:            to: value,
./main/webapp/modules/core/scripts/views/data-table/cell-ui.js:          value: value,
./main/webapp/modules/core/scripts/util/encoding.js:    input[0].value = encoding.code;
./main/webapp/modules/core/scripts/util/custom-suggest.js:        if (data.value && data.value != "null") {
./main/webapp/modules/core/scripts/util/custom-suggest.js:          CustomSuggest.setFreebaseAPIKey(data.value);
./main/webapp/modules/core/scripts/project/history-panel.js:      var filter = $.trim(this.value.toLowerCase());
./main/webapp/modules/core/scripts/project/history-panel.js:      json = elmts.textarea[0].value;
./main/webapp/modules/core/scripts/project/exporters.js:    "label": $.i18n._('core-project')["tab-value"],
./main/webapp/modules/core/scripts/project/exporters.js:  .attr("value", "application/x-unknown") // force download
./main/webapp/modules/core/scripts/project/exporters.js:  .attr("value", theProject.id)
./main/webapp/modules/core/scripts/project/exporters.js:  .attr("value", format)
./main/webapp/modules/core/scripts/project/exporters.js:    .attr("value", JSON.stringify(ui.browsingEngine.getJSON()))
./main/webapp/modules/core/scripts/project/exporters.js:  .attr("value", theProject.id)
./main/webapp/modules/core/scripts/dialogs/clustering-dialog.js:            var value = e.val(); 
./main/webapp/modules/core/scripts/dialogs/clustering-dialog.js:                value = parseInt(value,10);
./main/webapp/modules/core/scripts/dialogs/clustering-dialog.js:                value = parseFloat(value);
./main/webapp/modules/core/scripts/dialogs/clustering-dialog.js:            self._params[name] = value;
./main/webapp/modules/core/scripts/dialogs/clustering-dialog.js:        $(trHead.insertCell(2)).text($.i18n._('core-dialogs')["cluster-values"]);
./main/webapp/modules/core/scripts/dialogs/clustering-dialog.js:                    "expression":"value"
./main/webapp/modules/core/scripts/dialogs/clustering-dialog.js:              var value = $(this).text();
./main/webapp/modules/core/scripts/dialogs/clustering-dialog.js:              cluster.value = value;
./main/webapp/modules/core/scripts/dialogs/clustering-dialog.js:              parent.find("input[type='text']").val(value);
./main/webapp/modules/core/scripts/dialogs/clustering-dialog.js:            var div = $('<div></div>').addClass("clustering-dialog-value-focus");
./main/webapp/modules/core/scripts/dialogs/clustering-dialog.js:                .attr("value", cluster.value)
./main/webapp/modules/core/scripts/dialogs/clustering-dialog.js:                    cluster.value = this.value;
./main/webapp/modules/core/scripts/dialogs/clustering-dialog.js:            value: this[0].v,
./main/webapp/modules/core/scripts/dialogs/clustering-dialog.js:            var values = [];
./main/webapp/modules/core/scripts/dialogs/clustering-dialog.js:                values.push(cluster.choices[j].v);
./main/webapp/modules/core/scripts/dialogs/clustering-dialog.js:                from: values,
./main/webapp/modules/core/scripts/dialogs/clustering-dialog.js:                to: cluster.value
./main/webapp/modules/core/scripts/dialogs/custom-tabular-exporter-dialog.js:        .attr('value', target.id)
./main/webapp/modules/core/scripts/dialogs/custom-tabular-exporter-dialog.js:  this._dialog.find('input[name="custom-tabular-exporter-download-format"][value="' + options.format + '"]').attr('checked', 'checked');
./main/webapp/modules/core/scripts/dialogs/custom-tabular-exporter-dialog.js:  this._elmts.separatorInput[0].value = escapeJavascriptString(options.separator || ',');
./main/webapp/modules/core/scripts/dialogs/custom-tabular-exporter-dialog.js:  this._elmts.lineSeparatorInput[0].value = escapeJavascriptString(options.lineSeparator || '\n');
./main/webapp/modules/core/scripts/dialogs/custom-tabular-exporter-dialog.js:  this._elmts.encodingInput[0].value = options.encoding;
./main/webapp/modules/core/scripts/dialogs/custom-tabular-exporter-dialog.js:  .attr("value", JSON.stringify(options))
./main/webapp/modules/core/scripts/dialogs/custom-tabular-exporter-dialog.js:    .attr("value", encoding)
./main/webapp/modules/core/scripts/dialogs/custom-tabular-exporter-dialog.js:    .attr("value", "application/x-unknown") // force download
./main/webapp/modules/core/scripts/dialogs/custom-tabular-exporter-dialog.js:  this._elmts.columnOptionPane.find('input[name="custom-tabular-exporter-recon"][value="' +
./main/webapp/modules/core/scripts/dialogs/custom-tabular-exporter-dialog.js:  this._elmts.columnOptionPane.find('input[name="custom-tabular-exporter-date"][value="' +
./main/webapp/modules/core/scripts/dialogs/templating-exporter-dialog.js:            if (data.value !== null) {
./main/webapp/modules/core/scripts/dialogs/templating-exporter-dialog.js:                f(JSON.parse(data.value));
./main/webapp/modules/core/scripts/dialogs/templating-exporter-dialog.js:                return '\n      "' + column.name + '" : {{jsonize(cells["' + column.name + '"].value)}}';
./main/webapp/modules/core/scripts/dialogs/templating-exporter-dialog.js:    this._elmts.prefixTextarea[0].value = t.prefix;
./main/webapp/modules/core/scripts/dialogs/templating-exporter-dialog.js:    this._elmts.suffixTextarea[0].value = t.suffix;
./main/webapp/modules/core/scripts/dialogs/templating-exporter-dialog.js:    this._elmts.separatorTextarea[0].value = t.separator;
./main/webapp/modules/core/scripts/dialogs/templating-exporter-dialog.js:    this._elmts.templateTextarea[0].value = t.template;
./main/webapp/modules/core/scripts/dialogs/templating-exporter-dialog.js:    this._elmts.previewTextarea[0].value = $.i18n._('core-dialogs')["idling"];
./main/webapp/modules/core/scripts/dialogs/templating-exporter-dialog.js:        self._elmts.previewTextarea[0].value = $.i18n._('core-dialogs')["updating"];
./main/webapp/modules/core/scripts/dialogs/templating-exporter-dialog.js:            "prefix" : this._elmts.prefixTextarea[0].value,
./main/webapp/modules/core/scripts/dialogs/templating-exporter-dialog.js:            "suffix" : this._elmts.suffixTextarea[0].value,
./main/webapp/modules/core/scripts/dialogs/templating-exporter-dialog.js:            "separator" : this._elmts.separatorTextarea[0].value,
./main/webapp/modules/core/scripts/dialogs/templating-exporter-dialog.js:            "template" : this._elmts.templateTextarea[0].value,
./main/webapp/modules/core/scripts/dialogs/templating-exporter-dialog.js:            self._elmts.previewTextarea[0].value = data;
./main/webapp/modules/core/scripts/dialogs/templating-exporter-dialog.js:    var appendField = function(name, value) {
./main/webapp/modules/core/scripts/dialogs/templating-exporter-dialog.js:            .attr("value", value)
./main/webapp/modules/core/scripts/dialogs/templating-exporter-dialog.js:    appendField("prefix", this._elmts.prefixTextarea[0].value);
./main/webapp/modules/core/scripts/dialogs/templating-exporter-dialog.js:    appendField("suffix", this._elmts.suffixTextarea[0].value);
./main/webapp/modules/core/scripts/dialogs/templating-exporter-dialog.js:    appendField("separator", this._elmts.separatorTextarea[0].value);
./main/webapp/modules/core/scripts/dialogs/templating-exporter-dialog.js:    appendField("template", this._elmts.templateTextarea[0].value);
./main/webapp/modules/core/scripts/dialogs/scatterplot-dialog.js:                    "ex" : "value",
./main/webapp/modules/core/scripts/dialogs/scatterplot-dialog.js:                    "ey" : "value",
./main/webapp/modules/core/scripts/dialogs/expression-preview-dialog.js:function ExpressionPreviewDialog(title, cellIndex, rowIndices, values, expression, onDone) {
./main/webapp/modules/core/scripts/dialogs/expression-preview-dialog.js:        values,
./main/webapp/modules/core/scripts/dialogs/expression-preview-dialog.js:            languageOptions.push('<option value="' + prefix + '">' + info.name + '</option>');
./main/webapp/modules/core/scripts/dialogs/expression-preview-dialog.js:    values,
./main/webapp/modules/core/scripts/dialogs/expression-preview-dialog.js:    this._values = values;
./main/webapp/modules/core/scripts/dialogs/expression-preview-dialog.js:    this._elmts.expressionPreviewLanguageSelect[0].value = language;
./main/webapp/modules/core/scripts/dialogs/expression-preview-dialog.js:        $.cookie("scripting.lang", this.value);
./main/webapp/modules/core/scripts/dialogs/expression-preview-dialog.js:        .attr("value", this.expression)
./main/webapp/modules/core/scripts/dialogs/expression-preview-dialog.js:    return this._elmts.expressionPreviewLanguageSelect[0].value;
./main/webapp/modules/core/scripts/dialogs/expression-preview-dialog.js:        {   name: "value",
./main/webapp/modules/core/scripts/dialogs/expression-preview-dialog.js:            description: $.i18n._('core-dialogs')["cell-value"]
./main/webapp/modules/core/scripts/dialogs/expression-preview-dialog.js:            self._elmts.expressionPreviewTextarea[0].value = o.expression;
./main/webapp/modules/core/scripts/dialogs/expression-preview-dialog.js:            self._elmts.expressionPreviewLanguageSelect[0].value = o.language;
./main/webapp/modules/core/scripts/dialogs/expression-preview-dialog.js:            self._elmts.expressionPreviewTextarea[0].value = o.expression;
./main/webapp/modules/core/scripts/dialogs/expression-preview-dialog.js:            self._elmts.expressionPreviewLanguageSelect[0].value = o.language;
./main/webapp/modules/core/scripts/dialogs/expression-preview-dialog.js:    var expression = this.expression = $.trim(this._elmts.expressionPreviewTextarea[0].value);
./main/webapp/modules/core/scripts/dialogs/expression-preview-dialog.js:    $(tr.insertCell(1)).addClass("expression-preview-heading").text("value");
./main/webapp/modules/core/scripts/dialogs/expression-preview-dialog.js:                $('<span></span>').addClass("expression-preview-special-value").text($.i18n._('core-dialogs')["error"]+": " + v.message).appendTo(td);
./main/webapp/modules/core/scripts/dialogs/expression-preview-dialog.js:            $('<span>null</span>').addClass("expression-preview-special-value").appendTo(td);
./main/webapp/modules/core/scripts/dialogs/expression-preview-dialog.js:    for (var i = 0; i < this._values.length; i++) {
./main/webapp/modules/core/scripts/dialogs/expression-preview-dialog.js:        renderValue($(tr.insertCell(1)).addClass("expression-preview-value"), this._values[i]);
./main/webapp/modules/core/scripts/dialogs/expression-preview-dialog.js:        var tdValue = $(tr.insertCell(2)).addClass("expression-preview-value");
./main/webapp/modules/core/scripts/preferences.js:function PreferenceUI(tr, key, value) {
./main/webapp/modules/core/scripts/preferences.js:  $(td1).text((value !== null) ? value : "");
./main/webapp/modules/core/scripts/preferences.js:    var newValue = window.prompt($.i18n._('core-index')["change-value"]+" " + key, value);
./main/webapp/modules/core/scripts/preferences.js:          value : JSON.stringify(newValue)
./main/webapp/modules/core/scripts/preferences.js:      var value = window.prompt($.i18n._('core-index')["pref-key"]);
./main/webapp/modules/core/scripts/preferences.js:      if (value !== null) {
./main/webapp/modules/core/scripts/preferences.js:        preferenceUIs.push(new PreferenceUI(tr, key, value));
./main/webapp/modules/core/scripts/preferences.js:            value : JSON.stringify(value)
./main/webapp/modules/core/MOD-INF/controller.js:  RS.registerCommand(module, "join-multi-value-cells", new Packages.com.google.refine.commands.cell.JoinMultiValueCellsCommand());
./main/webapp/modules/core/MOD-INF/controller.js:  RS.registerCommand(module, "split-multi-value-cells", new Packages.com.google.refine.commands.cell.SplitMultiValueCellsCommand());
./main/webapp/modules/core/MOD-INF/controller.js:  RS.registerCommand(module, "key-value-columnize", new Packages.com.google.refine.commands.cell.KeyValueColumnizeCommand());
./main/webapp/modules/core/MOD-INF/controller.js:  OR.registerOperation(module, "multivalued-cell-join", Packages.com.google.refine.operations.cell.MultiValuedCellJoinOperation);
./main/webapp/modules/core/MOD-INF/controller.js:  OR.registerOperation(module, "multivalued-cell-split", Packages.com.google.refine.operations.cell.MultiValuedCellSplitOperation);
./main/webapp/modules/core/MOD-INF/controller.js:  OR.registerOperation(module, "key-value-columnize", Packages.com.google.refine.operations.cell.KeyValueColumnizeOperation);
./main/webapp/modules/core/MOD-INF/controller.js:  IM.registerMimeType("text/tab-separated-value", "text/line-based/*sv");
./main/webapp/WEB-INF/butterfly.properties:# NOTE: properties passed to the JVM using '-Dkey=value' from the command line
./main/.settings/.jsdtscope:			<attribute name="hide" value="true"/>
./main/IDEs/eclipse/RefineTests.launch:<booleanAttribute key="com.mountainminds.eclemma.core.INPLACE_INSTRUMENTATION" value="false"/>
./main/IDEs/eclipse/RefineTests.launch:<listEntry value="/refine/src/main/webapp/WEB-INF/classes"/>
./main/IDEs/eclipse/RefineTests.launch:<listEntry value="/OpenRefine/main/tests/server/lib/testng-5.12.1.jar"/>
./main/IDEs/eclipse/RefineTests.launch:<listEntry value="1"/>
./main/IDEs/eclipse/RefineTests.launch:<stringAttribute key="org.eclipse.jdt.launching.MAIN_TYPE" value="org.testng.remote.RemoteTestNG"/>
./main/IDEs/eclipse/RefineTests.launch:<stringAttribute key="org.eclipse.jdt.launching.PROJECT_ATTR" value="OpenRefine"/>
./main/IDEs/eclipse/RefineTests.launch:<stringAttribute key="org.testng.eclipse.COMPLIANCE_LEVEL" value="JDK"/>
./main/IDEs/eclipse/RefineTests.launch:<stringAttribute key="org.testng.eclipse.LOG_LEVEL" value="2"/>
./main/IDEs/eclipse/RefineTests.launch:<intAttribute key="org.testng.eclipse.TYPE" value="3"/>
./main/IDEs/netbeans/nbproject/project.properties:# (you may also define separate properties like run-sys-prop.name=value instead of -Dname=value
./main/IDEs/netbeans/nbproject/project.properties:# or test-sys-prop.name=value to set system properties for unit tests):
./module/scripts/sindice/sindice-dialog.js:					var option = $('<input />').attr('type','radio').attr('value',domain).attr('name','domain_radio').attr('checked',i==0);
./module/scripts/menu-bar-extensions.js:        .attr("value", JSON.stringify(ui.browsingEngine.getJSON()))
./module/scripts/menu-bar-extensions.js:        .attr("value", theProject.id)
./module/scripts/menu-bar-extensions.js:        .attr("value", format)
./module/scripts/suggestterm.suggest.js:	                         request: function(value, cursor) {
./module/scripts/suggestterm.suggest.js:	                        	 var query = value;
./module/scripts/suggestterm.suggest.js:                            	            data.prefix = value;  // keep track of prefix to match up response with input value
./module/scripts/externals/jquery-1.11.1.js:		// Only deal with non-null/undefined values
./module/scripts/externals/jquery-1.11.1.js:				// Don't bring in undefined values
./module/scripts/externals/jquery-1.11.1.js:		var value,
./module/scripts/externals/jquery-1.11.1.js:					value = callback.apply( obj[ i ], args );
./module/scripts/externals/jquery-1.11.1.js:					if ( value === false ) {
./module/scripts/externals/jquery-1.11.1.js:					value = callback.apply( obj[ i ], args );
./module/scripts/externals/jquery-1.11.1.js:					if ( value === false ) {
./module/scripts/externals/jquery-1.11.1.js:					value = callback.call( obj[ i ], i, obj[ i ] );
./module/scripts/externals/jquery-1.11.1.js:					if ( value === false ) {
./module/scripts/externals/jquery-1.11.1.js:					value = callback.call( obj[ i ], i, obj[ i ] );
./module/scripts/externals/jquery-1.11.1.js:					if ( value === false ) {
./module/scripts/externals/jquery-1.11.1.js:		var value,
./module/scripts/externals/jquery-1.11.1.js:		// Go through the array, translating each of the items to their new values
./module/scripts/externals/jquery-1.11.1.js:				value = callback( elems[ i ], i, arg );
./module/scripts/externals/jquery-1.11.1.js:				if ( value != null ) {
./module/scripts/externals/jquery-1.11.1.js:					ret.push( value );
./module/scripts/externals/jquery-1.11.1.js:				value = callback( elems[ i ], i, arg );
./module/scripts/externals/jquery-1.11.1.js:				if ( value != null ) {
./module/scripts/externals/jquery-1.11.1.js:					ret.push( value );
./module/scripts/externals/jquery-1.11.1.js:	// An unquoted value should be a CSS identifier http://www.w3.org/TR/css3-selectors/#attribute-selectors
./module/scripts/externals/jquery-1.11.1.js:		// "Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]"
./module/scripts/externals/jquery-1.11.1.js: * Create key-value caches of limited size
./module/scripts/externals/jquery-1.11.1.js:	function cache( key, value ) {
./module/scripts/externals/jquery-1.11.1.js:		return (cache[ key + " " ] = value);
./module/scripts/externals/jquery-1.11.1.js: * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
./module/scripts/externals/jquery-1.11.1.js:				return node && node.value === attrId;
./module/scripts/externals/jquery-1.11.1.js:			// Boolean attributes and "value" are not treated correctly
./module/scripts/externals/jquery-1.11.1.js:				rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
./module/scripts/externals/jquery-1.11.1.js:				val.value :
./module/scripts/externals/jquery-1.11.1.js: * Utility function for retrieving the text value of an array of DOM nodes
./module/scripts/externals/jquery-1.11.1.js:			// Move the given value to match[3] whether quoted or unquoted
./module/scripts/externals/jquery-1.11.1.js:		// is based solely on the element's language value
./module/scripts/externals/jquery-1.11.1.js:		// The matching of C against the element's language value is performed case-insensitively.
./module/scripts/externals/jquery-1.11.1.js:			// lang value must be a valid identifier
./module/scripts/externals/jquery-1.11.1.js:				// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
./module/scripts/externals/jquery-1.11.1.js:				value: matched,
./module/scripts/externals/jquery-1.11.1.js:					value: matched,
./module/scripts/externals/jquery-1.11.1.js:		selector += tokens[i].value;
./module/scripts/externals/jquery-1.11.1.js:						tokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === " " ? "*" : "" })
./module/scripts/externals/jquery-1.11.1.js:					// Discard index placeholder values to get only actual matches
./module/scripts/externals/jquery-1.11.1.js:			selector = selector.slice( tokens.shift().value.length );
./module/scripts/externals/jquery-1.11.1.js:// Use defaultValue in place of getAttribute("value")
./module/scripts/externals/jquery-1.11.1.js:	div.firstChild.setAttribute( "value", "" );
./module/scripts/externals/jquery-1.11.1.js:	return div.firstChild.getAttribute( "value" ) === "";
./module/scripts/externals/jquery-1.11.1.js:	addHandle( "value", function( elem, name, isXML ) {
./module/scripts/externals/jquery-1.11.1.js:					val.value :
./module/scripts/externals/jquery-1.11.1.js: *	memory:			will keep track of previous values and will call any callback added
./module/scripts/externals/jquery-1.11.1.js: *					values (like a Deferred)
./module/scripts/externals/jquery-1.11.1.js:		// Last fire value (for non-forgettable lists)
./module/scripts/externals/jquery-1.11.1.js:			// Update function for both resolve and progress values
./module/scripts/externals/jquery-1.11.1.js:			updateFunc = function( i, contexts, values ) {
./module/scripts/externals/jquery-1.11.1.js:				return function( value ) {
./module/scripts/externals/jquery-1.11.1.js:					values[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;
./module/scripts/externals/jquery-1.11.1.js:					if ( values === progressValues ) {
./module/scripts/externals/jquery-1.11.1.js:						deferred.notifyWith( contexts, values );
./module/scripts/externals/jquery-1.11.1.js:						deferred.resolveWith( contexts, values );
./module/scripts/externals/jquery-1.11.1.js:	// An object can be passed to jQuery.data instead of a key/value pair; this gets
./module/scripts/externals/jquery-1.11.1.js:	data: function( key, value ) {
./module/scripts/externals/jquery-1.11.1.js:		// Gets all values
./module/scripts/externals/jquery-1.11.1.js:		// Sets multiple values
./module/scripts/externals/jquery-1.11.1.js:			// Sets one value
./module/scripts/externals/jquery-1.11.1.js:				jQuery.data( this, key, value );
./module/scripts/externals/jquery-1.11.1.js:			// Gets one value
./module/scripts/externals/jquery-1.11.1.js:// Multifunctional method to get and set values of a collection
./module/scripts/externals/jquery-1.11.1.js:// The value/s can optionally be executed if it's a function
./module/scripts/externals/jquery-1.11.1.js:var access = jQuery.access = function( elems, fn, key, value, chainable, emptyGet, raw ) {
./module/scripts/externals/jquery-1.11.1.js:	// Sets many values
./module/scripts/externals/jquery-1.11.1.js:	// Sets one value
./module/scripts/externals/jquery-1.11.1.js:	} else if ( value !== undefined ) {
./module/scripts/externals/jquery-1.11.1.js:		if ( !jQuery.isFunction( value ) ) {
./module/scripts/externals/jquery-1.11.1.js:				fn.call( elems, value );
./module/scripts/externals/jquery-1.11.1.js:			// ...except when executing function values
./module/scripts/externals/jquery-1.11.1.js:				fn = function( elem, key, value ) {
./module/scripts/externals/jquery-1.11.1.js:					return bulk.call( jQuery( elem ), value );
./module/scripts/externals/jquery-1.11.1.js:				fn( elems[i], key, raw ? value : value.call( elems[i], i, fn( elems[i], key ) ) );
./module/scripts/externals/jquery-1.11.1.js:	// value of true after appended to the DOM (IE6/7)
./module/scripts/externals/jquery-1.11.1.js:		// by a handler lower down the tree; reflect the correct value.
./module/scripts/externals/jquery-1.11.1.js:		// a checked appearance if the defaultChecked value isn't also set
./module/scripts/externals/jquery-1.11.1.js:		// IE6-7 get confused and end up setting the value of a cloned
./module/scripts/externals/jquery-1.11.1.js:		if ( dest.value !== src.value ) {
./module/scripts/externals/jquery-1.11.1.js:			dest.value = src.value;
./module/scripts/externals/jquery-1.11.1.js:	// IE6-8 fails to set the defaultValue to the correct value when
./module/scripts/externals/jquery-1.11.1.js:	text: function( value ) {
./module/scripts/externals/jquery-1.11.1.js:		return access( this, function( value ) {
./module/scripts/externals/jquery-1.11.1.js:			return value === undefined ?
./module/scripts/externals/jquery-1.11.1.js:				this.empty().append( ( this[0] && this[0].ownerDocument || document ).createTextNode( value ) );
./module/scripts/externals/jquery-1.11.1.js:		}, null, value, arguments.length );
./module/scripts/externals/jquery-1.11.1.js:		return access( this, function( value ) {
./module/scripts/externals/jquery-1.11.1.js:			if ( value === undefined ) {
./module/scripts/externals/jquery-1.11.1.js:				( support.leadingWhitespace || !rleadingWhitespace.test( value ) ) &&
./module/scripts/externals/jquery-1.11.1.js:				!wrapMap[ (rtagName.exec( value ) || [ "", "" ])[ 1 ].toLowerCase() ] ) {
./module/scripts/externals/jquery-1.11.1.js:							elem.innerHTML = value;
./module/scripts/externals/jquery-1.11.1.js:				this.empty().append( value );
./module/scripts/externals/jquery-1.11.1.js:		}, null, value, arguments.length );
./module/scripts/externals/jquery-1.11.1.js:			value = args[0],
./module/scripts/externals/jquery-1.11.1.js:			isFunction = jQuery.isFunction( value );
./module/scripts/externals/jquery-1.11.1.js:				( l > 1 && typeof value === "string" &&
./module/scripts/externals/jquery-1.11.1.js:					!support.checkClone && rchecked.test( value ) ) ) {
./module/scripts/externals/jquery-1.11.1.js: * Try to determine the default display value of an element
./module/scripts/externals/jquery-1.11.1.js:			// Chrome < 17 and Safari 5.0 uses "computed value" instead of "used value" for margin-right
./module/scripts/externals/jquery-1.11.1.js:			// Safari 5.1.7 (at least) returns percentage for a larger set of values, but width seems to be reliably pixels
./module/scripts/externals/jquery-1.11.1.js:			// this is against the CSSOM draft spec: http://dev.w3.org/csswg/cssom/#resolved-values
./module/scripts/externals/jquery-1.11.1.js:				// Remember the original values
./module/scripts/externals/jquery-1.11.1.js:				// Put in the new values to get a computed value out
./module/scripts/externals/jquery-1.11.1.js:				// Revert the changed values
./module/scripts/externals/jquery-1.11.1.js:		// IE returns zIndex value as an integer.
./module/scripts/externals/jquery-1.11.1.js:			// Remember the original values
./module/scripts/externals/jquery-1.11.1.js:			// Put in the new values to get a computed value out
./module/scripts/externals/jquery-1.11.1.js:			// Revert the changed values
./module/scripts/externals/jquery-1.11.1.js:		// IE returns zIndex value as an integer.
./module/scripts/externals/jquery-1.11.1.js:		// Assume reasonable values in the absence of getComputedStyle
./module/scripts/externals/jquery-1.11.1.js:			// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right
./module/scripts/externals/jquery-1.11.1.js:	// Remember the old values, and insert the new ones
./module/scripts/externals/jquery-1.11.1.js:	// Revert the old values
./module/scripts/externals/jquery-1.11.1.js:	// see here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
./module/scripts/externals/jquery-1.11.1.js:		values = [],
./module/scripts/externals/jquery-1.11.1.js:		values[ index ] = jQuery._data( elem, "olddisplay" );
./module/scripts/externals/jquery-1.11.1.js:			if ( !values[ index ] && display === "none" ) {
./module/scripts/externals/jquery-1.11.1.js:				values[ index ] = jQuery._data( elem, "olddisplay", defaultDisplay(elem.nodeName) );
./module/scripts/externals/jquery-1.11.1.js:			elem.style.display = show ? values[ index ] || "" : "none";
./module/scripts/externals/jquery-1.11.1.js:function setPositiveNumber( elem, value, subtract ) {
./module/scripts/externals/jquery-1.11.1.js:	var matches = rnumsplit.exec( value );
./module/scripts/externals/jquery-1.11.1.js:		value;
./module/scripts/externals/jquery-1.11.1.js:	// Start with offset property, which is equivalent to the border-box value
./module/scripts/externals/jquery-1.11.1.js:	var valueIsBorderBox = true,
./module/scripts/externals/jquery-1.11.1.js:		// we need the check for style in case a browser which returns unreliable values
./module/scripts/externals/jquery-1.11.1.js:		valueIsBorderBox = isBorderBox && ( support.boxSizingReliable() || val === elem.style[ name ] );
./module/scripts/externals/jquery-1.11.1.js:			valueIsBorderBox,
./module/scripts/externals/jquery-1.11.1.js:	// setting or getting the value
./module/scripts/externals/jquery-1.11.1.js:	style: function( elem, name, value, extra ) {
./module/scripts/externals/jquery-1.11.1.js:		// Check if we're setting a value
./module/scripts/externals/jquery-1.11.1.js:		if ( value !== undefined ) {
./module/scripts/externals/jquery-1.11.1.js:			type = typeof value;
./module/scripts/externals/jquery-1.11.1.js:			if ( type === "string" && (ret = rrelNum.exec( value )) ) {
./module/scripts/externals/jquery-1.11.1.js:				value = ( ret[1] + 1 ) * ret[2] + parseFloat( jQuery.css( elem, name ) );
./module/scripts/externals/jquery-1.11.1.js:			// Make sure that null and NaN values aren't set. See: #7116
./module/scripts/externals/jquery-1.11.1.js:			if ( value == null || value !== value ) {
./module/scripts/externals/jquery-1.11.1.js:				value += "px";
./module/scripts/externals/jquery-1.11.1.js:			if ( !support.clearCloneStyle && value === "" && name.indexOf("background") === 0 ) {
./module/scripts/externals/jquery-1.11.1.js:			// If a hook was provided, use that value, otherwise just set the specified value
./module/scripts/externals/jquery-1.11.1.js:			if ( !hooks || !("set" in hooks) || (value = hooks.set( elem, value, extra )) !== undefined ) {
./module/scripts/externals/jquery-1.11.1.js:				// Swallow errors from 'invalid' CSS values (#5509)
./module/scripts/externals/jquery-1.11.1.js:					style[ name ] = value;
./module/scripts/externals/jquery-1.11.1.js:			// If a hook was provided get the non-computed value from there
./module/scripts/externals/jquery-1.11.1.js:			// Otherwise just get the value from the style object
./module/scripts/externals/jquery-1.11.1.js:		// If a hook was provided get the computed value from there
./module/scripts/externals/jquery-1.11.1.js:		// Otherwise, if a way to get the computed value exists, use that
./module/scripts/externals/jquery-1.11.1.js:		//convert "normal" to computed value
./module/scripts/externals/jquery-1.11.1.js:		set: function( elem, value, extra ) {
./module/scripts/externals/jquery-1.11.1.js:			return setPositiveNumber( elem, value, extra ?
./module/scripts/externals/jquery-1.11.1.js:		set: function( elem, value ) {
./module/scripts/externals/jquery-1.11.1.js:				opacity = jQuery.isNumeric( value ) ? "alpha(opacity=" + value * 100 + ")" : "",
./module/scripts/externals/jquery-1.11.1.js:			// if value === "", then remove inline opacity #12685
./module/scripts/externals/jquery-1.11.1.js:			if ( ( value >= 1 || value === "" ) &&
./module/scripts/externals/jquery-1.11.1.js:				if ( value === "" || currentStyle && !currentStyle.filter ) {
./module/scripts/externals/jquery-1.11.1.js:			// otherwise, set new filter values
./module/scripts/externals/jquery-1.11.1.js:			// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right
./module/scripts/externals/jquery-1.11.1.js:		expand: function( value ) {
./module/scripts/externals/jquery-1.11.1.js:				parts = typeof value === "string" ? value.split(" ") : [ value ];
./module/scripts/externals/jquery-1.11.1.js:	css: function( name, value ) {
./module/scripts/externals/jquery-1.11.1.js:		return access( this, function( elem, name, value ) {
./module/scripts/externals/jquery-1.11.1.js:			return value !== undefined ?
./module/scripts/externals/jquery-1.11.1.js:				jQuery.style( elem, name, value ) :
./module/scripts/externals/jquery-1.11.1.js:		}, name, value, arguments.length > 1 );
./module/scripts/externals/jquery-1.11.1.js:			// so, simple values such as "10px" are parsed to Float.
./module/scripts/externals/jquery-1.11.1.js:			// complex values such as "rotate(1rad)" are returned as is.
./module/scripts/externals/jquery-1.11.1.js:		"*": [ function( prop, value ) {
./module/scripts/externals/jquery-1.11.1.js:			var tween = this.createTween( prop, value ),
./module/scripts/externals/jquery-1.11.1.js:				parts = rfxnum.exec( value ),
./module/scripts/externals/jquery-1.11.1.js:				// Starting value computation is required for potential unit mismatches
./module/scripts/externals/jquery-1.11.1.js:	// if we include width, step value is 1 to do all cssExpand values,
./module/scripts/externals/jquery-1.11.1.js:	// if we don't include width, step value is 2 to skip over Left and Right
./module/scripts/externals/jquery-1.11.1.js:function createTween( value, prop, animation ) {
./module/scripts/externals/jquery-1.11.1.js:		if ( (tween = collection[ index ].call( animation, prop, value )) ) {
./module/scripts/externals/jquery-1.11.1.js:	var prop, value, toggle, tween, hooks, oldfire, display, checkDisplay,
./module/scripts/externals/jquery-1.11.1.js:		// overflowY are set to the same value
./module/scripts/externals/jquery-1.11.1.js:		value = props[ prop ];
./module/scripts/externals/jquery-1.11.1.js:		if ( rfxtypes.exec( value ) ) {
./module/scripts/externals/jquery-1.11.1.js:			toggle = toggle || value === "toggle";
./module/scripts/externals/jquery-1.11.1.js:			if ( value === ( hidden ? "hide" : "show" ) ) {
./module/scripts/externals/jquery-1.11.1.js:				if ( value === "show" && dataShow && dataShow[ prop ] !== undefined ) {
./module/scripts/externals/jquery-1.11.1.js:		// Any non-fx value stops us from restoring the original display value
./module/scripts/externals/jquery-1.11.1.js:	// If this is a noop like .hide().hide(), restore an overwritten display value
./module/scripts/externals/jquery-1.11.1.js:	var index, name, easing, value, hooks;
./module/scripts/externals/jquery-1.11.1.js:		value = props[ index ];
./module/scripts/externals/jquery-1.11.1.js:		if ( jQuery.isArray( value ) ) {
./module/scripts/externals/jquery-1.11.1.js:			easing = value[ 1 ];
./module/scripts/externals/jquery-1.11.1.js:			value = props[ index ] = value[ 0 ];
./module/scripts/externals/jquery-1.11.1.js:			props[ name ] = value;
./module/scripts/externals/jquery-1.11.1.js:			value = hooks.expand( value );
./module/scripts/externals/jquery-1.11.1.js:			for ( index in value ) {
./module/scripts/externals/jquery-1.11.1.js:					props[ index ] = value[ index ];
./module/scripts/externals/jquery-1.11.1.js:			// animate to the value specified
./module/scripts/externals/jquery-1.11.1.js:	// Check the default checkbox/radio value ("" on WebKit; "on" elsewhere)
./module/scripts/externals/jquery-1.11.1.js:	support.checkOn = !!input.value;
./module/scripts/externals/jquery-1.11.1.js:	// Check if we can trust getAttribute("value")
./module/scripts/externals/jquery-1.11.1.js:	input.setAttribute( "value", "" );
./module/scripts/externals/jquery-1.11.1.js:	support.input = input.getAttribute( "value" ) === "";
./module/scripts/externals/jquery-1.11.1.js:	// Check if an input maintains its value after becoming a radio
./module/scripts/externals/jquery-1.11.1.js:	input.value = "t";
./module/scripts/externals/jquery-1.11.1.js:	support.radioValue = input.value === "t";
./module/scripts/externals/jquery-1.11.1.js:	val: function( value ) {
./module/scripts/externals/jquery-1.11.1.js:				if ( hooks && "get" in hooks && (ret = hooks.get( elem, "value" )) !== undefined ) {
./module/scripts/externals/jquery-1.11.1.js:				ret = elem.value;
./module/scripts/externals/jquery-1.11.1.js:					// handle cases where value is null/undef or number
./module/scripts/externals/jquery-1.11.1.js:		isFunction = jQuery.isFunction( value );
./module/scripts/externals/jquery-1.11.1.js:				val = value.call( this, i, jQuery( this ).val() );
./module/scripts/externals/jquery-1.11.1.js:				val = value;
./module/scripts/externals/jquery-1.11.1.js:				val = jQuery.map( val, function( value ) {
./module/scripts/externals/jquery-1.11.1.js:					return value == null ? "" : value + "";
./module/scripts/externals/jquery-1.11.1.js:			if ( !hooks || !("set" in hooks) || hooks.set( this, val, "value" ) === undefined ) {
./module/scripts/externals/jquery-1.11.1.js:				this.value = val;
./module/scripts/externals/jquery-1.11.1.js:				var val = jQuery.find.attr( elem, "value" );
./module/scripts/externals/jquery-1.11.1.js:				var value, option,
./module/scripts/externals/jquery-1.11.1.js:					values = one ? null : [],
./module/scripts/externals/jquery-1.11.1.js:						// Get the specific value for the option
./module/scripts/externals/jquery-1.11.1.js:						value = jQuery( option ).val();
./module/scripts/externals/jquery-1.11.1.js:							return value;
./module/scripts/externals/jquery-1.11.1.js:						values.push( value );
./module/scripts/externals/jquery-1.11.1.js:				return values;
./module/scripts/externals/jquery-1.11.1.js:			set: function( elem, value ) {
./module/scripts/externals/jquery-1.11.1.js:					values = jQuery.makeArray( value ),
./module/scripts/externals/jquery-1.11.1.js:					if ( jQuery.inArray( jQuery.valHooks.option.get( option ), values ) >= 0 ) {
./module/scripts/externals/jquery-1.11.1.js:				// Force browsers to behave consistently when non-matching value is set
./module/scripts/externals/jquery-1.11.1.js:		set: function( elem, value ) {
./module/scripts/externals/jquery-1.11.1.js:			if ( jQuery.isArray( value ) ) {
./module/scripts/externals/jquery-1.11.1.js:				return ( elem.checked = jQuery.inArray( jQuery(elem).val(), value ) >= 0 );
./module/scripts/externals/jquery-1.11.1.js:			// "" is returned instead of "on" if a value isn't specified
./module/scripts/externals/jquery-1.11.1.js:			return elem.getAttribute("value") === null ? "on" : elem.value;
./module/scripts/externals/jquery-1.11.1.js:	attr: function( name, value ) {
./module/scripts/externals/jquery-1.11.1.js:		return access( this, jQuery.attr, name, value, arguments.length > 1 );
./module/scripts/externals/jquery-1.11.1.js:	attr: function( elem, name, value ) {
./module/scripts/externals/jquery-1.11.1.js:			return jQuery.prop( elem, name, value );
./module/scripts/externals/jquery-1.11.1.js:		if ( value !== undefined ) {
./module/scripts/externals/jquery-1.11.1.js:			if ( value === null ) {
./module/scripts/externals/jquery-1.11.1.js:			} else if ( hooks && "set" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ) {
./module/scripts/externals/jquery-1.11.1.js:				elem.setAttribute( name, value + "" );
./module/scripts/externals/jquery-1.11.1.js:				return value;
./module/scripts/externals/jquery-1.11.1.js:	removeAttr: function( elem, value ) {
./module/scripts/externals/jquery-1.11.1.js:			attrNames = value && value.match( rnotwhite );
./module/scripts/externals/jquery-1.11.1.js:			set: function( elem, value ) {
./module/scripts/externals/jquery-1.11.1.js:				if ( !support.radioValue && value === "radio" && jQuery.nodeName(elem, "input") ) {
./module/scripts/externals/jquery-1.11.1.js:					// Setting the type on a radio button after the value resets the value in IE6-9
./module/scripts/externals/jquery-1.11.1.js:					// Reset value to default in case type is set after value during creation
./module/scripts/externals/jquery-1.11.1.js:					var val = elem.value;
./module/scripts/externals/jquery-1.11.1.js:					elem.setAttribute( "type", value );
./module/scripts/externals/jquery-1.11.1.js:						elem.value = val;
./module/scripts/externals/jquery-1.11.1.js:					return value;
./module/scripts/externals/jquery-1.11.1.js:	set: function( elem, value, name ) {
./module/scripts/externals/jquery-1.11.1.js:		if ( value === false ) {
./module/scripts/externals/jquery-1.11.1.js:	jQuery.attrHooks.value = {
./module/scripts/externals/jquery-1.11.1.js:		set: function( elem, value, name ) {
./module/scripts/externals/jquery-1.11.1.js:				elem.defaultValue = value;
./module/scripts/externals/jquery-1.11.1.js:				return nodeHook && nodeHook.set( elem, value, name );
./module/scripts/externals/jquery-1.11.1.js:		set: function( elem, value, name ) {
./module/scripts/externals/jquery-1.11.1.js:			ret.value = value += "";
./module/scripts/externals/jquery-1.11.1.js:			if ( name === "value" || value === elem.getAttribute( name ) ) {
./module/scripts/externals/jquery-1.11.1.js:				return value;
./module/scripts/externals/jquery-1.11.1.js:	// Some attributes are constructed with empty-string values when not defined
./module/scripts/externals/jquery-1.11.1.js:				return (ret = elem.getAttributeNode( name )) && ret.value !== "" ?
./module/scripts/externals/jquery-1.11.1.js:					ret.value :
./module/scripts/externals/jquery-1.11.1.js:	// Fixing value retrieval on a button requires this module
./module/scripts/externals/jquery-1.11.1.js:				return ret.value;
./module/scripts/externals/jquery-1.11.1.js:	// Setting to empty string throws an error as an invalid value
./module/scripts/externals/jquery-1.11.1.js:		set: function( elem, value, name ) {
./module/scripts/externals/jquery-1.11.1.js:			nodeHook.set( elem, value === "" ? false : value, name );
./module/scripts/externals/jquery-1.11.1.js:			set: function( elem, value ) {
./module/scripts/externals/jquery-1.11.1.js:				if ( value === "" ) {
./module/scripts/externals/jquery-1.11.1.js:					return value;
./module/scripts/externals/jquery-1.11.1.js:		set: function( elem, value ) {
./module/scripts/externals/jquery-1.11.1.js:			return ( elem.style.cssText = value + "" );
./module/scripts/externals/jquery-1.11.1.js:	prop: function( name, value ) {
./module/scripts/externals/jquery-1.11.1.js:		return access( this, jQuery.prop, name, value, arguments.length > 1 );
./module/scripts/externals/jquery-1.11.1.js:	prop: function( elem, name, value ) {
./module/scripts/externals/jquery-1.11.1.js:		if ( value !== undefined ) {
./module/scripts/externals/jquery-1.11.1.js:			return hooks && "set" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ?
./module/scripts/externals/jquery-1.11.1.js:				( elem[ name ] = value );
./module/scripts/externals/jquery-1.11.1.js:				// elem.tabIndex doesn't always return the correct value when it hasn't been explicitly set
./module/scripts/externals/jquery-1.11.1.js:	addClass: function( value ) {
./module/scripts/externals/jquery-1.11.1.js:			proceed = typeof value === "string" && value;
./module/scripts/externals/jquery-1.11.1.js:		if ( jQuery.isFunction( value ) ) {
./module/scripts/externals/jquery-1.11.1.js:				jQuery( this ).addClass( value.call( this, j, this.className ) );
./module/scripts/externals/jquery-1.11.1.js:			classes = ( value || "" ).match( rnotwhite ) || [];
./module/scripts/externals/jquery-1.11.1.js:	removeClass: function( value ) {
./module/scripts/externals/jquery-1.11.1.js:			proceed = arguments.length === 0 || typeof value === "string" && value;
./module/scripts/externals/jquery-1.11.1.js:		if ( jQuery.isFunction( value ) ) {
./module/scripts/externals/jquery-1.11.1.js:				jQuery( this ).removeClass( value.call( this, j, this.className ) );
./module/scripts/externals/jquery-1.11.1.js:			classes = ( value || "" ).match( rnotwhite ) || [];
./module/scripts/externals/jquery-1.11.1.js:					finalValue = value ? jQuery.trim( cur ) : "";
./module/scripts/externals/jquery-1.11.1.js:	toggleClass: function( value, stateVal ) {
./module/scripts/externals/jquery-1.11.1.js:		var type = typeof value;
./module/scripts/externals/jquery-1.11.1.js:			return stateVal ? this.addClass( value ) : this.removeClass( value );
./module/scripts/externals/jquery-1.11.1.js:		if ( jQuery.isFunction( value ) ) {
./module/scripts/externals/jquery-1.11.1.js:				jQuery( this ).toggleClass( value.call(this, i, this.className, stateVal), stateVal );
./module/scripts/externals/jquery-1.11.1.js:					classNames = value.match( rnotwhite ) || [];
./module/scripts/externals/jquery-1.11.1.js:				this.className = this.className || value === false ? "" : jQuery._data( this, "__className__" ) || "";
./module/scripts/externals/jquery-1.11.1.js:				setRequestHeader: function( name, value ) {
./module/scripts/externals/jquery-1.11.1.js:						requestHeaders[ name ] = value;
./module/scripts/externals/jquery-1.11.1.js:					// If there is already a '_' parameter, set its value
./module/scripts/externals/jquery-1.11.1.js:// key/values into a query string
./module/scripts/externals/jquery-1.11.1.js:		add = function( key, value ) {
./module/scripts/externals/jquery-1.11.1.js:			// If value is a function, invoke it and return its value
./module/scripts/externals/jquery-1.11.1.js:			value = jQuery.isFunction( value ) ? value() : ( value == null ? "" : value );
./module/scripts/externals/jquery-1.11.1.js:			s[ s.length ] = encodeURIComponent( key ) + "=" + encodeURIComponent( value );
./module/scripts/externals/jquery-1.11.1.js:			add( this.name, this.value );
./module/scripts/externals/jquery-1.11.1.js:						return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
./module/scripts/externals/jquery-1.11.1.js:					{ name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
./module/scripts/externals/jquery-1.11.1.js:						// request header to a null-value.
./module/scripts/externals/jquery-1.11.1.js:						// To keep consistent with other XHR implementations, cast the value
./module/scripts/externals/jquery-1.11.1.js:		// Get callback name, remembering preexisting value associated with it
./module/scripts/externals/jquery-1.11.1.js:			// Restore preexisting value
./module/scripts/externals/jquery-1.11.1.js:		jQuery.fn[ funcName ] = function( margin, value ) {
./module/scripts/externals/jquery-1.11.1.js:				extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );
./module/scripts/externals/jquery-1.11.1.js:			return access( this, function( elem, type, value ) {
./module/scripts/externals/jquery-1.11.1.js:				return value === undefined ?
./module/scripts/externals/jquery-1.11.1.js:					jQuery.style( elem, type, value, extra );
./broker/core/WEB-INF/butterfly.properties:# NOTE: properties passed to the JVM using '-Dkey=value' from the command line
./broker/core/IDEs/eclipse/RefineBrokerTests.launch:<booleanAttribute key="com.mountainminds.eclemma.core.INPLACE_INSTRUMENTATION" value="false"/>
./broker/core/IDEs/eclipse/RefineBrokerTests.launch:<listEntry value="/grefine-broker/module/MOD-INF/classes"/>
./broker/core/IDEs/eclipse/RefineBrokerTests.launch:<stringAttribute key="org.eclipse.jdt.launching.MAIN_TYPE" value="org.testng.remote.RemoteTestNG"/>
./broker/core/IDEs/eclipse/RefineBrokerTests.launch:<stringAttribute key="org.eclipse.jdt.launching.PROJECT_ATTR" value="grefine-broker"/>
./broker/core/IDEs/eclipse/RefineBrokerTests.launch:<mapEntry key="com.google.refine.broker.tests.RefineBrokerTests" value=""/>
./broker/core/IDEs/eclipse/RefineBrokerTests.launch:<listEntry value="com.google.refine.broker.tests.RefineBrokerTests"/>
./broker/core/IDEs/eclipse/RefineBrokerTests.launch:<stringAttribute key="org.testng.eclipse.COMPLIANCE_LEVEL" value="JDK"/>
./broker/core/IDEs/eclipse/RefineBrokerTests.launch:<stringAttribute key="org.testng.eclipse.LOG_LEVEL" value="2"/>
./broker/core/IDEs/eclipse/RefineBrokerTests.launch:<intAttribute key="org.testng.eclipse.TYPE" value="1"/>
./broker/appengine/.project:					<value>&lt;project&gt;/.externalToolBuilders/com.google.gdt.eclipse.core.webAppProjectValidator.launch</value>
./broker/appengine/.project:					<value>&lt;project&gt;/.externalToolBuilders/com.google.appengine.eclipse.core.projectValidator.launch</value>
./broker/appengine/.externalToolBuilders/com.google.appengine.eclipse.core.projectValidator.launch:<booleanAttribute key="org.eclipse.ui.externaltools.ATTR_BUILDER_ENABLED" value="false"/>
./broker/appengine/.externalToolBuilders/com.google.appengine.eclipse.core.projectValidator.launch:<stringAttribute key="org.eclipse.ui.externaltools.ATTR_DISABLED_BUILDER" value="com.google.appengine.eclipse.core.projectValidator"/>
./broker/appengine/.externalToolBuilders/com.google.appengine.eclipse.core.projectValidator.launch:<booleanAttribute key="org.eclipse.ui.externaltools.ATTR_TRIGGERS_CONFIGURED" value="true"/>
./broker/appengine/.externalToolBuilders/com.google.gdt.eclipse.core.webAppProjectValidator.launch:<booleanAttribute key="org.eclipse.ui.externaltools.ATTR_BUILDER_ENABLED" value="false"/>
./broker/appengine/.externalToolBuilders/com.google.gdt.eclipse.core.webAppProjectValidator.launch:<stringAttribute key="org.eclipse.ui.externaltools.ATTR_DISABLED_BUILDER" value="com.google.gdt.eclipse.core.webAppProjectValidator"/>
./broker/appengine/.externalToolBuilders/com.google.gdt.eclipse.core.webAppProjectValidator.launch:<booleanAttribute key="org.eclipse.ui.externaltools.ATTR_TRIGGERS_CONFIGURED" value="true"/>
./tools/apache-ant-1.9.0/bin/ant.bat:rem find ANT_HOME if it does not exist due to either an invalid value passed
./tools/apache-ant-1.9.0/bin/runant.pl:        # only 0 and 1 are widely recognized as exit values
./tools/apache-ant-1.9.0/bin/runant.pl:        # so change the exit value to 1
./tools/apache-ant-1.9.0/bin/antRun.pl:    # only 0 and 1 are widely recognized as exit values
./tools/apache-ant-1.9.0/bin/antRun.pl:    # so change the exit value to 1
./tools/apache-ant-1.9.0/bin/runrc.cmd:  dir = value(translate(path),,'OS2ENVIRONMENT')
./tools/apache-ant-1.9.0/bin/envset.cmd:   Other values mean that the first parameter is missing and the environment
./tools/apache-ant-1.9.0/bin/envset.cmd:Next parameters: values
./tools/apache-ant-1.9.0/bin/envset.cmd:-D requires parameters in the form name=value. If the equal sign is not found,
./tools/apache-ant-1.9.0/bin/envset.cmd:If the parameter is a single dot, it will be replaced with the value of the
./tools/apache-ant-1.9.0/bin/envset.cmd:orig = value(envar,,env)
./tools/apache-ant-1.9.0/bin/envset.cmd:/* Set the new value, 'SET' cannot be used since it does not allow '=' */
./tools/apache-ant-1.9.0/bin/envset.cmd:x = value(envar, newval, env)
./tools/apache-ant-1.9.0/bin/envset.cmd:  else expvar = value(translate(var),,env)
./tools/apache-ant-1.9.0/bin/ant:  # provide default configuration values
./tools/apache-ant-1.9.0/bin/antenv.cmd:ANT_HOME = value('ANT_HOME',,env)
./tools/apache-ant-1.9.0/bin/antenv.cmd:JAVA_HOME = value('JAVA_HOME',,env)
./tools/apache-ant-1.9.0/bin/antenv.cmd:classpath = value('CLASSPATH',,env)
./tools/apache-ant-1.9.0/bin/antenv.cmd:var = value(translate(envar),,env)
./tools/apache-ant-1.9.0/bin/ant.cmd:opts = value('ANT_OPTS',,env)
./tools/apache-ant-1.9.0/bin/ant.cmd:args = value('ANT_ARGS',,env)
./tools/apache-ant-1.9.0/bin/ant.cmd:lcp = value('LOCALCLASSPATH',,env)
./tools/apache-ant-1.9.0/bin/ant.cmd:cp = value('CLASSPATH',,env)
./tools/apache-ant-1.9.0/bin/ant.cmd:if value('ANT_USE_CP',,env) \= '' then do
./tools/apache-ant-1.9.0/bin/ant.cmd:ANT_HOME = value('ANT_HOME',,env)
./tools/apache-ant-1.9.0/bin/ant.cmd:JAVA_HOME = value('JAVA_HOME',,env)
./tools/apache-ant-1.9.0/bin/ant.cmd:cp = translate(value('CLASSPATH',,env))
./tools/apache-ant-1.9.0/bin/ant.cmd:var = value(translate(envar),,env)
./tools/apache-ant-1.9.0/WHATSNEW: * FixCRLF used to treat the EOL value ASIS to convert to the system property 
./tools/apache-ant-1.9.0/WHATSNEW: * the attributes of macrodef tasks had their values run through
./tools/apache-ant-1.9.0/WHATSNEW:   and \n in attribute values by entity references.
./tools/apache-ant-1.9.0/WHATSNEW: * DemuxInputStream.read() should return unsigned values
./tools/apache-ant-1.9.0/WHATSNEW:   argument, even though the Javadoc says null is a valid value.
./tools/apache-ant-1.9.0/WHATSNEW:   evaluation may yield values of any type.
./tools/apache-ant-1.9.0/WHATSNEW:   value will be used; otherwise the traditional behavior of treating the value
./tools/apache-ant-1.9.0/WHATSNEW:   more granular and support setting task/type attribute values to
./tools/apache-ant-1.9.0/WHATSNEW:   this is not the intended value and instead apply its own default
./tools/apache-ant-1.9.0/WHATSNEW:   values.  Ant used to create entries with 0 permissions itself.
./tools/apache-ant-1.9.0/WHATSNEW:   independent, which means that totalPropery values obtained on
./tools/apache-ant-1.9.0/WHATSNEW:   sensitive) can be different from the values obtained with earlier
./tools/apache-ant-1.9.0/WHATSNEW: * RPM task needed an inserted space between the define and the value.
./tools/apache-ant-1.9.0/WHATSNEW: * Ant didn't set the proper "magic" value for tar entries containing
./tools/apache-ant-1.9.0/WHATSNEW: * The Hashvalue algortihm implementation of the modified task could
./tools/apache-ant-1.9.0/WHATSNEW: * a new property ant.project.default-target holds the value of the
./tools/apache-ant-1.9.0/WHATSNEW: * token and value of <replace>'s nested <replacefilter> can now also
./tools/apache-ant-1.9.0/WHATSNEW: * The <replace> child-elements <replacetoken> and <replacevalue> have
./tools/apache-ant-1.9.0/WHATSNEW: * <property> can now specify values as nested text.
./tools/apache-ant-1.9.0/WHATSNEW:* It is now possible to provide the value of a <striplinecomments> filter's
./tools/apache-ant-1.9.0/WHATSNEW:  <comment> nested element as nested text instead of using the 'value'
./tools/apache-ant-1.9.0/WHATSNEW:  timestampgranularity attribute.  The default value for get operations is 0
./tools/apache-ant-1.9.0/WHATSNEW:  with.  Since this is not available on put operations the default value
./tools/apache-ant-1.9.0/WHATSNEW:  value if, for any reason, it cannot actually start Ant proper. This will only
./tools/apache-ant-1.9.0/WHATSNEW:* XmlProperty overrides previously set property value when handling duplicate
./tools/apache-ant-1.9.0/WHATSNEW:* Java 5 enumerations may now be used as values in XML attributes in place of
./tools/apache-ant-1.9.0/WHATSNEW:  suitable as the value for a manifest's Class-Path attribute.
./tools/apache-ant-1.9.0/WHATSNEW:* Added a new "failall" value for the onerror attribute of <typedef>.
./tools/apache-ant-1.9.0/WHATSNEW:  attribute will read default values from the properties
./tools/apache-ant-1.9.0/WHATSNEW:* <macrodef> with redefined default values was incorrect. (Fix for
./tools/apache-ant-1.9.0/WHATSNEW:  optional alternate value to set the property to if the nested
./tools/apache-ant-1.9.0/WHATSNEW:* <macrodef> with default values set by properties would be
./tools/apache-ant-1.9.0/WHATSNEW:* FTP task, getTimeDiff method was returning wrong value. Bugzilla 30595.
./tools/apache-ant-1.9.0/WHATSNEW:* Wrapper scripts did not detect WINNT value of dynamic OS environment
./tools/apache-ant-1.9.0/WHATSNEW:* The Entry nested element of PropertyFile will not any more have its value
./tools/apache-ant-1.9.0/WHATSNEW:  attribute (actually increment) overwritten with the new value of the entry
./tools/apache-ant-1.9.0/WHATSNEW:  value was an empty string.  Bugzilla Report 18625.
./tools/apache-ant-1.9.0/WHATSNEW:* Do not overwrite the value (increment) attribute of PropertyFile nested
./tools/apache-ant-1.9.0/WHATSNEW:* Prevent sysproperties with no key or no value from being added in <junit>.
./tools/apache-ant-1.9.0/WHATSNEW:* <input> has a new attribute that allows you to specify a default value.
./tools/apache-ant-1.9.0/WHATSNEW:  be a single empty argument.  Use <arg value="''"/> if you need the
./tools/apache-ant-1.9.0/WHATSNEW:  used to change the value of a property.
./tools/apache-ant-1.9.0/WHATSNEW:  errorsBeginAt attribute you can use if you want a higher or lower value.
./tools/apache-ant-1.9.0/WHATSNEW:* <propertyfile>'s <entry> element was modified to remove "never" as a value
./tools/apache-ant-1.9.0/WHATSNEW:  the value of the build.compiler property, if set.
./tools/apache-ant-1.9.0/WHATSNEW:  multi-character values.
./tools/apache-ant-1.9.0/WHATSNEW:  the value of the build.rmic property, if set.
./tools/apache-ant-1.9.0/WHATSNEW:  again, it doesn't format the numeric value in the time attribute anymore.
./tools/apache-ant-1.9.0/WHATSNEW:  to be escaped in property values by doubling it to $$. So, to define a
./tools/apache-ant-1.9.0/WHATSNEW:  property with the value $hello, you need to define it in a properties file
./tools/apache-ant-1.9.0/WHATSNEW:* <uptodate> now supports a value attribute
./tools/apache-ant-1.9.0/WHATSNEW:* nested <include> and <exclude> elements expect the value of their
./tools/apache-ant-1.9.0/WHATSNEW:* <replace> can now use tokens and/or values that cross line boundaries.
./tools/virtualenv-1.9.1/PKG-INFO:        value before running the ``activate`` script.
./tools/virtualenv-1.9.1/PKG-INFO:          Just leave an empty space between the passsed values, e.g.::
./tools/virtualenv-1.9.1/docs/index.txt:value before running the ``activate`` script.
./tools/virtualenv-1.9.1/docs/index.txt:  Just leave an empty space between the passsed values, e.g.::
./tools/virtualenv-1.9.1/virtualenv.egg-info/PKG-INFO:        value before running the ``activate`` script.
./tools/virtualenv-1.9.1/virtualenv.egg-info/PKG-INFO:          Just leave an empty space between the passsed values, e.g.::
